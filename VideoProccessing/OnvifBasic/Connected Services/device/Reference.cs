//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnvifBasic.device {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", ConfigurationName="device.Device")]
    public interface Device {
        
        // CODEGEN: Parameter 'Service' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetServices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Service")]
        OnvifBasic.device.GetServicesResponse GetServices(OnvifBasic.device.GetServicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetServices", ReplyAction="*")]
        System.IAsyncResult BeginGetServices(OnvifBasic.device.GetServicesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetServicesResponse EndGetServices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Capabilities")]
        OnvifBasic.device.DeviceServiceCapabilities GetServiceCapabilities();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities", ReplyAction="*")]
        System.IAsyncResult BeginGetServiceCapabilities(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="Capabilities")]
        OnvifBasic.device.DeviceServiceCapabilities EndGetServiceCapabilities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Manufacturer")]
        string GetDeviceInformation(out string Model, out string FirmwareVersion, out string SerialNumber, out string HardwareId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation", ReplyAction="*")]
        System.IAsyncResult BeginGetDeviceInformation(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="Manufacturer")]
        string EndGetDeviceInformation(out string Model, out string FirmwareVersion, out string SerialNumber, out string HardwareId, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetSystemDateAndTime(OnvifBasic.device.SetDateTimeType DateTimeType, bool DaylightSavings, OnvifBasic.device.TimeZone TimeZone, OnvifBasic.device.DateTime UTCDateTime);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime", ReplyAction="*")]
        System.IAsyncResult BeginSetSystemDateAndTime(OnvifBasic.device.SetDateTimeType DateTimeType, bool DaylightSavings, OnvifBasic.device.TimeZone TimeZone, OnvifBasic.device.DateTime UTCDateTime, System.AsyncCallback callback, object asyncState);
        
        void EndSetSystemDateAndTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="SystemDateAndTime")]
        OnvifBasic.device.SystemDateTime GetSystemDateAndTime();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime", ReplyAction="*")]
        System.IAsyncResult BeginGetSystemDateAndTime(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="SystemDateAndTime")]
        OnvifBasic.device.SystemDateTime EndGetSystemDateAndTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetSystemFactoryDefault(OnvifBasic.device.FactoryDefaultType FactoryDefault);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault", ReplyAction="*")]
        System.IAsyncResult BeginSetSystemFactoryDefault(OnvifBasic.device.FactoryDefaultType FactoryDefault, System.AsyncCallback callback, object asyncState);
        
        void EndSetSystemFactoryDefault(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Message")]
        string UpgradeSystemFirmware(OnvifBasic.device.AttachmentData Firmware);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware", ReplyAction="*")]
        System.IAsyncResult BeginUpgradeSystemFirmware(OnvifBasic.device.AttachmentData Firmware, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="Message")]
        string EndUpgradeSystemFirmware(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SystemReboot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Message")]
        string SystemReboot();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SystemReboot", ReplyAction="*")]
        System.IAsyncResult BeginSystemReboot(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="Message")]
        string EndSystemReboot(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'BackupFiles' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/RestoreSystem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.RestoreSystemResponse RestoreSystem(OnvifBasic.device.RestoreSystemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/RestoreSystem", ReplyAction="*")]
        System.IAsyncResult BeginRestoreSystem(OnvifBasic.device.RestoreSystemRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.RestoreSystemResponse EndRestoreSystem(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'BackupFiles' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetSystemBackup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="BackupFiles")]
        OnvifBasic.device.GetSystemBackupResponse GetSystemBackup(OnvifBasic.device.GetSystemBackupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetSystemBackup", ReplyAction="*")]
        System.IAsyncResult BeginGetSystemBackup(OnvifBasic.device.GetSystemBackupRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetSystemBackupResponse EndGetSystemBackup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetSystemLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="SystemLog")]
        OnvifBasic.device.SystemLog GetSystemLog(OnvifBasic.device.SystemLogType LogType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetSystemLog", ReplyAction="*")]
        System.IAsyncResult BeginGetSystemLog(OnvifBasic.device.SystemLogType LogType, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="SystemLog")]
        OnvifBasic.device.SystemLog EndGetSystemLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="SupportInformation")]
        OnvifBasic.device.SupportInformation GetSystemSupportInformation();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation", ReplyAction="*")]
        System.IAsyncResult BeginGetSystemSupportInformation(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="SupportInformation")]
        OnvifBasic.device.SupportInformation EndGetSystemSupportInformation(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Scopes' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetScopes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Scopes")]
        OnvifBasic.device.GetScopesResponse GetScopes(OnvifBasic.device.GetScopesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetScopes", ReplyAction="*")]
        System.IAsyncResult BeginGetScopes(OnvifBasic.device.GetScopesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetScopesResponse EndGetScopes(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Scopes' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetScopes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetScopesResponse SetScopes(OnvifBasic.device.SetScopesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetScopes", ReplyAction="*")]
        System.IAsyncResult BeginSetScopes(OnvifBasic.device.SetScopesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetScopesResponse EndSetScopes(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'ScopeItem' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/AddScopes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.AddScopesResponse AddScopes(OnvifBasic.device.AddScopesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/AddScopes", ReplyAction="*")]
        System.IAsyncResult BeginAddScopes(OnvifBasic.device.AddScopesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.AddScopesResponse EndAddScopes(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'ScopeItem' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/RemoveScopes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.RemoveScopesResponse RemoveScopes(OnvifBasic.device.RemoveScopesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/RemoveScopes", ReplyAction="*")]
        System.IAsyncResult BeginRemoveScopes(OnvifBasic.device.RemoveScopesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.RemoveScopesResponse EndRemoveScopes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="DiscoveryMode")]
        OnvifBasic.device.DiscoveryMode GetDiscoveryMode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode", ReplyAction="*")]
        System.IAsyncResult BeginGetDiscoveryMode(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="DiscoveryMode")]
        OnvifBasic.device.DiscoveryMode EndGetDiscoveryMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetDiscoveryMode(OnvifBasic.device.DiscoveryMode DiscoveryMode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode", ReplyAction="*")]
        System.IAsyncResult BeginSetDiscoveryMode(OnvifBasic.device.DiscoveryMode DiscoveryMode, System.AsyncCallback callback, object asyncState);
        
        void EndSetDiscoveryMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="RemoteDiscoveryMode")]
        OnvifBasic.device.DiscoveryMode GetRemoteDiscoveryMode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode", ReplyAction="*")]
        System.IAsyncResult BeginGetRemoteDiscoveryMode(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="RemoteDiscoveryMode")]
        OnvifBasic.device.DiscoveryMode EndGetRemoteDiscoveryMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetRemoteDiscoveryMode(OnvifBasic.device.DiscoveryMode RemoteDiscoveryMode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode", ReplyAction="*")]
        System.IAsyncResult BeginSetRemoteDiscoveryMode(OnvifBasic.device.DiscoveryMode RemoteDiscoveryMode, System.AsyncCallback callback, object asyncState);
        
        void EndSetRemoteDiscoveryMode(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'DPAddress' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDPAddresses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="DPAddress")]
        OnvifBasic.device.GetDPAddressesResponse GetDPAddresses(OnvifBasic.device.GetDPAddressesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDPAddresses", ReplyAction="*")]
        System.IAsyncResult BeginGetDPAddresses(OnvifBasic.device.GetDPAddressesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetDPAddressesResponse EndGetDPAddresses(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'DPAddress' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetDPAddresses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetDPAddressesResponse SetDPAddresses(OnvifBasic.device.SetDPAddressesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetDPAddresses", ReplyAction="*")]
        System.IAsyncResult BeginSetDPAddresses(OnvifBasic.device.SetDPAddressesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetDPAddressesResponse EndSetDPAddresses(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (http://www.onvif.org/ver10/device/wsdl)
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetEndpointReference", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="GUID")]
        OnvifBasic.device.GetEndpointReferenceResponse GetEndpointReference(OnvifBasic.device.GetEndpointReferenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetEndpointReference", ReplyAction="*")]
        System.IAsyncResult BeginGetEndpointReference(OnvifBasic.device.GetEndpointReferenceRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetEndpointReferenceResponse EndGetEndpointReference(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetRemoteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="RemoteUser")]
        OnvifBasic.device.RemoteUser GetRemoteUser();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetRemoteUser", ReplyAction="*")]
        System.IAsyncResult BeginGetRemoteUser(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="RemoteUser")]
        OnvifBasic.device.RemoteUser EndGetRemoteUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetRemoteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetRemoteUser(OnvifBasic.device.RemoteUser RemoteUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetRemoteUser", ReplyAction="*")]
        System.IAsyncResult BeginSetRemoteUser(OnvifBasic.device.RemoteUser RemoteUser, System.AsyncCallback callback, object asyncState);
        
        void EndSetRemoteUser(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'User' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="User")]
        OnvifBasic.device.GetUsersResponse GetUsers(OnvifBasic.device.GetUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetUsers", ReplyAction="*")]
        System.IAsyncResult BeginGetUsers(OnvifBasic.device.GetUsersRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetUsersResponse EndGetUsers(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'User' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/CreateUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.CreateUsersResponse CreateUsers(OnvifBasic.device.CreateUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/CreateUsers", ReplyAction="*")]
        System.IAsyncResult BeginCreateUsers(OnvifBasic.device.CreateUsersRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.CreateUsersResponse EndCreateUsers(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Username' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/DeleteUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.DeleteUsersResponse DeleteUsers(OnvifBasic.device.DeleteUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/DeleteUsers", ReplyAction="*")]
        System.IAsyncResult BeginDeleteUsers(OnvifBasic.device.DeleteUsersRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.DeleteUsersResponse EndDeleteUsers(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'User' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetUserResponse SetUser(OnvifBasic.device.SetUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetUser", ReplyAction="*")]
        System.IAsyncResult BeginSetUser(OnvifBasic.device.SetUserRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetUserResponse EndSetUser(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'WsdlUrl' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="WsdlUrl")]
        OnvifBasic.device.GetWsdlUrlResponse GetWsdlUrl(OnvifBasic.device.GetWsdlUrlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl", ReplyAction="*")]
        System.IAsyncResult BeginGetWsdlUrl(OnvifBasic.device.GetWsdlUrlRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetWsdlUrlResponse EndGetWsdlUrl(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Category' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetCapabilities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Capabilities")]
        OnvifBasic.device.GetCapabilitiesResponse GetCapabilities(OnvifBasic.device.GetCapabilitiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetCapabilities", ReplyAction="*")]
        System.IAsyncResult BeginGetCapabilities(OnvifBasic.device.GetCapabilitiesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetCapabilitiesResponse EndGetCapabilities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetHostname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="HostnameInformation")]
        OnvifBasic.device.HostnameInformation GetHostname();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetHostname", ReplyAction="*")]
        System.IAsyncResult BeginGetHostname(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="HostnameInformation")]
        OnvifBasic.device.HostnameInformation EndGetHostname(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Name' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetHostname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetHostnameResponse SetHostname(OnvifBasic.device.SetHostnameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetHostname", ReplyAction="*")]
        System.IAsyncResult BeginSetHostname(OnvifBasic.device.SetHostnameRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetHostnameResponse EndSetHostname(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="RebootNeeded")]
        bool SetHostnameFromDHCP(bool FromDHCP);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP", ReplyAction="*")]
        System.IAsyncResult BeginSetHostnameFromDHCP(bool FromDHCP, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="RebootNeeded")]
        bool EndSetHostnameFromDHCP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDNS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="DNSInformation")]
        OnvifBasic.device.DNSInformation GetDNS();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDNS", ReplyAction="*")]
        System.IAsyncResult BeginGetDNS(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="DNSInformation")]
        OnvifBasic.device.DNSInformation EndGetDNS(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'SearchDomain' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetDNS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetDNSResponse SetDNS(OnvifBasic.device.SetDNSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetDNS", ReplyAction="*")]
        System.IAsyncResult BeginSetDNS(OnvifBasic.device.SetDNSRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetDNSResponse EndSetDNS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetNTP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="NTPInformation")]
        OnvifBasic.device.NTPInformation GetNTP();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetNTP", ReplyAction="*")]
        System.IAsyncResult BeginGetNTP(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="NTPInformation")]
        OnvifBasic.device.NTPInformation EndGetNTP(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'NTPManual' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetNTP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetNTPResponse SetNTP(OnvifBasic.device.SetNTPRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetNTP", ReplyAction="*")]
        System.IAsyncResult BeginSetNTP(OnvifBasic.device.SetNTPRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetNTPResponse EndSetNTP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="DynamicDNSInformation")]
        OnvifBasic.device.DynamicDNSInformation GetDynamicDNS();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS", ReplyAction="*")]
        System.IAsyncResult BeginGetDynamicDNS(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="DynamicDNSInformation")]
        OnvifBasic.device.DynamicDNSInformation EndGetDynamicDNS(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Name' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetDynamicDNSResponse SetDynamicDNS(OnvifBasic.device.SetDynamicDNSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS", ReplyAction="*")]
        System.IAsyncResult BeginSetDynamicDNS(OnvifBasic.device.SetDynamicDNSRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetDynamicDNSResponse EndSetDynamicDNS(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'NetworkInterfaces' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="NetworkInterfaces")]
        OnvifBasic.device.GetNetworkInterfacesResponse GetNetworkInterfaces(OnvifBasic.device.GetNetworkInterfacesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces", ReplyAction="*")]
        System.IAsyncResult BeginGetNetworkInterfaces(OnvifBasic.device.GetNetworkInterfacesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetNetworkInterfacesResponse EndGetNetworkInterfaces(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="RebootNeeded")]
        bool SetNetworkInterfaces(string InterfaceToken, OnvifBasic.device.NetworkInterfaceSetConfiguration NetworkInterface);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces", ReplyAction="*")]
        System.IAsyncResult BeginSetNetworkInterfaces(string InterfaceToken, OnvifBasic.device.NetworkInterfaceSetConfiguration NetworkInterface, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="RebootNeeded")]
        bool EndSetNetworkInterfaces(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'NetworkProtocols' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="NetworkProtocols")]
        OnvifBasic.device.GetNetworkProtocolsResponse GetNetworkProtocols(OnvifBasic.device.GetNetworkProtocolsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols", ReplyAction="*")]
        System.IAsyncResult BeginGetNetworkProtocols(OnvifBasic.device.GetNetworkProtocolsRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetNetworkProtocolsResponse EndGetNetworkProtocols(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'NetworkProtocols' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetNetworkProtocolsResponse SetNetworkProtocols(OnvifBasic.device.SetNetworkProtocolsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols", ReplyAction="*")]
        System.IAsyncResult BeginSetNetworkProtocols(OnvifBasic.device.SetNetworkProtocolsRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetNetworkProtocolsResponse EndSetNetworkProtocols(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="NetworkGateway")]
        OnvifBasic.device.NetworkGateway GetNetworkDefaultGateway();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway", ReplyAction="*")]
        System.IAsyncResult BeginGetNetworkDefaultGateway(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="NetworkGateway")]
        OnvifBasic.device.NetworkGateway EndGetNetworkDefaultGateway(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'IPv4Address' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetNetworkDefaultGatewayResponse SetNetworkDefaultGateway(OnvifBasic.device.SetNetworkDefaultGatewayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway", ReplyAction="*")]
        System.IAsyncResult BeginSetNetworkDefaultGateway(OnvifBasic.device.SetNetworkDefaultGatewayRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetNetworkDefaultGatewayResponse EndSetNetworkDefaultGateway(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ZeroConfiguration")]
        OnvifBasic.device.NetworkZeroConfiguration GetZeroConfiguration();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginGetZeroConfiguration(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="ZeroConfiguration")]
        OnvifBasic.device.NetworkZeroConfiguration EndGetZeroConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetZeroConfiguration(string InterfaceToken, bool Enabled);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginSetZeroConfiguration(string InterfaceToken, bool Enabled, System.AsyncCallback callback, object asyncState);
        
        void EndSetZeroConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IPAddressFilter")]
        OnvifBasic.device.IPAddressFilter GetIPAddressFilter();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter", ReplyAction="*")]
        System.IAsyncResult BeginGetIPAddressFilter(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="IPAddressFilter")]
        OnvifBasic.device.IPAddressFilter EndGetIPAddressFilter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter", ReplyAction="*")]
        System.IAsyncResult BeginSetIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter, System.AsyncCallback callback, object asyncState);
        
        void EndSetIPAddressFilter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void AddIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter", ReplyAction="*")]
        System.IAsyncResult BeginAddIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter, System.AsyncCallback callback, object asyncState);
        
        void EndAddIPAddressFilter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void RemoveIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter", ReplyAction="*")]
        System.IAsyncResult BeginRemoveIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveIPAddressFilter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="PolicyFile")]
        OnvifBasic.device.BinaryData GetAccessPolicy();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy", ReplyAction="*")]
        System.IAsyncResult BeginGetAccessPolicy(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="PolicyFile")]
        OnvifBasic.device.BinaryData EndGetAccessPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetAccessPolicy(OnvifBasic.device.BinaryData PolicyFile);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy", ReplyAction="*")]
        System.IAsyncResult BeginSetAccessPolicy(OnvifBasic.device.BinaryData PolicyFile, System.AsyncCallback callback, object asyncState);
        
        void EndSetAccessPolicy(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'RelayOutputs' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="RelayOutputs")]
        OnvifBasic.device.GetRelayOutputsResponse GetRelayOutputs(OnvifBasic.device.GetRelayOutputsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs", ReplyAction="*")]
        System.IAsyncResult BeginGetRelayOutputs(OnvifBasic.device.GetRelayOutputsRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetRelayOutputsResponse EndGetRelayOutputs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetRelayOutputSettings(string RelayOutputToken, OnvifBasic.device.RelayOutputSettings Properties);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings", ReplyAction="*")]
        System.IAsyncResult BeginSetRelayOutputSettings(string RelayOutputToken, OnvifBasic.device.RelayOutputSettings Properties, System.AsyncCallback callback, object asyncState);
        
        void EndSetRelayOutputSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetRelayOutputState(string RelayOutputToken, OnvifBasic.device.RelayLogicalState LogicalState);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState", ReplyAction="*")]
        System.IAsyncResult BeginSetRelayOutputState(string RelayOutputToken, OnvifBasic.device.RelayLogicalState LogicalState, System.AsyncCallback callback, object asyncState);
        
        void EndSetRelayOutputState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AuxiliaryCommandResponse")]
        string SendAuxiliaryCommand(string AuxiliaryCommand);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand", ReplyAction="*")]
        System.IAsyncResult BeginSendAuxiliaryCommand(string AuxiliaryCommand, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="AuxiliaryCommandResponse")]
        string EndSendAuxiliaryCommand(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since message part namespace () does not match the default value (http://www.onvif.org/ver10/device/wsdl)
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Capabilities")]
        OnvifBasic.device.GetDot11CapabilitiesResponse GetDot11Capabilities(OnvifBasic.device.GetDot11CapabilitiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities", ReplyAction="*")]
        System.IAsyncResult BeginGetDot11Capabilities(OnvifBasic.device.GetDot11CapabilitiesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetDot11CapabilitiesResponse EndGetDot11Capabilities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDot11Status", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Status")]
        OnvifBasic.device.Dot11Status GetDot11Status(string InterfaceToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDot11Status", ReplyAction="*")]
        System.IAsyncResult BeginGetDot11Status(string InterfaceToken, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="Status")]
        OnvifBasic.device.Dot11Status EndGetDot11Status(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Networks' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Networks")]
        OnvifBasic.device.ScanAvailableDot11NetworksResponse ScanAvailableDot11Networks(OnvifBasic.device.ScanAvailableDot11NetworksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks", ReplyAction="*")]
        System.IAsyncResult BeginScanAvailableDot11Networks(OnvifBasic.device.ScanAvailableDot11NetworksRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.ScanAvailableDot11NetworksResponse EndScanAvailableDot11Networks(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'SystemLogUris' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetSystemUris", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="SystemLogUris")]
        OnvifBasic.device.GetSystemUrisResponse GetSystemUris(OnvifBasic.device.GetSystemUrisRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetSystemUris", ReplyAction="*")]
        System.IAsyncResult BeginGetSystemUris(OnvifBasic.device.GetSystemUrisRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetSystemUrisResponse EndGetSystemUris(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'UploadUri' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="UploadUri")]
        OnvifBasic.device.StartFirmwareUpgradeResponse StartFirmwareUpgrade(OnvifBasic.device.StartFirmwareUpgradeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade", ReplyAction="*")]
        System.IAsyncResult BeginStartFirmwareUpgrade(OnvifBasic.device.StartFirmwareUpgradeRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.StartFirmwareUpgradeResponse EndStartFirmwareUpgrade(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'UploadUri' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/StartSystemRestore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="UploadUri")]
        OnvifBasic.device.StartSystemRestoreResponse StartSystemRestore(OnvifBasic.device.StartSystemRestoreRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/StartSystemRestore", ReplyAction="*")]
        System.IAsyncResult BeginStartSystemRestore(OnvifBasic.device.StartSystemRestoreRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.StartSystemRestoreResponse EndStartSystemRestore(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'StorageConfigurations' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StorageConfigurations")]
        OnvifBasic.device.GetStorageConfigurationsResponse GetStorageConfigurations(OnvifBasic.device.GetStorageConfigurationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations", ReplyAction="*")]
        System.IAsyncResult BeginGetStorageConfigurations(OnvifBasic.device.GetStorageConfigurationsRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetStorageConfigurationsResponse EndGetStorageConfigurations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Token")]
        string CreateStorageConfiguration(OnvifBasic.device.StorageConfigurationData StorageConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginCreateStorageConfiguration(OnvifBasic.device.StorageConfigurationData StorageConfiguration, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="Token")]
        string EndCreateStorageConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StorageConfiguration")]
        OnvifBasic.device.StorageConfiguration GetStorageConfiguration(string Token);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginGetStorageConfiguration(string Token, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="StorageConfiguration")]
        OnvifBasic.device.StorageConfiguration EndGetStorageConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetStorageConfiguration(OnvifBasic.device.StorageConfiguration StorageConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginSetStorageConfiguration(OnvifBasic.device.StorageConfiguration StorageConfiguration, System.AsyncCallback callback, object asyncState);
        
        void EndSetStorageConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void DeleteStorageConfiguration(string Token);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginDeleteStorageConfiguration(string Token, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteStorageConfiguration(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Location' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetGeoLocation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Location")]
        OnvifBasic.device.GetGeoLocationResponse GetGeoLocation(OnvifBasic.device.GetGeoLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetGeoLocation", ReplyAction="*")]
        System.IAsyncResult BeginGetGeoLocation(OnvifBasic.device.GetGeoLocationRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetGeoLocationResponse EndGetGeoLocation(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Location' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetGeoLocation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetGeoLocationResponse SetGeoLocation(OnvifBasic.device.SetGeoLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetGeoLocation", ReplyAction="*")]
        System.IAsyncResult BeginSetGeoLocation(OnvifBasic.device.SetGeoLocationRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetGeoLocationResponse EndSetGeoLocation(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Location' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.DeleteGeoLocationResponse DeleteGeoLocation(OnvifBasic.device.DeleteGeoLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation", ReplyAction="*")]
        System.IAsyncResult BeginDeleteGeoLocation(OnvifBasic.device.DeleteGeoLocationRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.DeleteGeoLocationResponse EndDeleteGeoLocation(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CertificateID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/CreateCertificate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="NvtCertificate")]
        OnvifBasic.device.CreateCertificateResponse CreateCertificate(OnvifBasic.device.CreateCertificateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/CreateCertificate", ReplyAction="*")]
        System.IAsyncResult BeginCreateCertificate(OnvifBasic.device.CreateCertificateRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.CreateCertificateResponse EndCreateCertificate(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'NvtCertificate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetCertificates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="NvtCertificate")]
        OnvifBasic.device.GetCertificatesResponse GetCertificates(OnvifBasic.device.GetCertificatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetCertificates", ReplyAction="*")]
        System.IAsyncResult BeginGetCertificates(OnvifBasic.device.GetCertificatesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetCertificatesResponse EndGetCertificates(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CertificateStatus' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CertificateStatus")]
        OnvifBasic.device.GetCertificatesStatusResponse GetCertificatesStatus(OnvifBasic.device.GetCertificatesStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus", ReplyAction="*")]
        System.IAsyncResult BeginGetCertificatesStatus(OnvifBasic.device.GetCertificatesStatusRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetCertificatesStatusResponse EndGetCertificatesStatus(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CertificateStatus' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.SetCertificatesStatusResponse SetCertificatesStatus(OnvifBasic.device.SetCertificatesStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus", ReplyAction="*")]
        System.IAsyncResult BeginSetCertificatesStatus(OnvifBasic.device.SetCertificatesStatusRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.SetCertificatesStatusResponse EndSetCertificatesStatus(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CertificateID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/DeleteCertificates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.DeleteCertificatesResponse DeleteCertificates(OnvifBasic.device.DeleteCertificatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/DeleteCertificates", ReplyAction="*")]
        System.IAsyncResult BeginDeleteCertificates(OnvifBasic.device.DeleteCertificatesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.DeleteCertificatesResponse EndDeleteCertificates(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CertificateID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Pkcs10Request")]
        OnvifBasic.device.GetPkcs10RequestResponse GetPkcs10Request(OnvifBasic.device.GetPkcs10RequestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request", ReplyAction="*")]
        System.IAsyncResult BeginGetPkcs10Request(OnvifBasic.device.GetPkcs10RequestRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetPkcs10RequestResponse EndGetPkcs10Request(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'NVTCertificate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/LoadCertificates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.LoadCertificatesResponse LoadCertificates(OnvifBasic.device.LoadCertificatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/LoadCertificates", ReplyAction="*")]
        System.IAsyncResult BeginLoadCertificates(OnvifBasic.device.LoadCertificatesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.LoadCertificatesResponse EndLoadCertificates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Enabled")]
        bool GetClientCertificateMode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode", ReplyAction="*")]
        System.IAsyncResult BeginGetClientCertificateMode(System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="Enabled")]
        bool EndGetClientCertificateMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetClientCertificateMode(bool Enabled);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode", ReplyAction="*")]
        System.IAsyncResult BeginSetClientCertificateMode(bool Enabled, System.AsyncCallback callback, object asyncState);
        
        void EndSetClientCertificateMode(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CACertificate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetCACertificates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CACertificate")]
        OnvifBasic.device.GetCACertificatesResponse GetCACertificates(OnvifBasic.device.GetCACertificatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetCACertificates", ReplyAction="*")]
        System.IAsyncResult BeginGetCACertificates(OnvifBasic.device.GetCACertificatesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetCACertificatesResponse EndGetCACertificates(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CertificateWithPrivateKey' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.LoadCertificateWithPrivateKeyResponse LoadCertificateWithPrivateKey(OnvifBasic.device.LoadCertificateWithPrivateKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey", ReplyAction="*")]
        System.IAsyncResult BeginLoadCertificateWithPrivateKey(OnvifBasic.device.LoadCertificateWithPrivateKeyRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.LoadCertificateWithPrivateKeyResponse EndLoadCertificateWithPrivateKey(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CertificateID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CertificateInformation")]
        OnvifBasic.device.GetCertificateInformationResponse GetCertificateInformation(OnvifBasic.device.GetCertificateInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation", ReplyAction="*")]
        System.IAsyncResult BeginGetCertificateInformation(OnvifBasic.device.GetCertificateInformationRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetCertificateInformationResponse EndGetCertificateInformation(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'CACertificate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/LoadCACertificates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.LoadCACertificatesResponse LoadCACertificates(OnvifBasic.device.LoadCACertificatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/LoadCACertificates", ReplyAction="*")]
        System.IAsyncResult BeginLoadCACertificates(OnvifBasic.device.LoadCACertificatesRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.LoadCACertificatesResponse EndLoadCACertificates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void CreateDot1XConfiguration(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginCreateDot1XConfiguration(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration, System.AsyncCallback callback, object asyncState);
        
        void EndCreateDot1XConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        void SetDot1XConfiguration(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginSetDot1XConfiguration(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration, System.AsyncCallback callback, object asyncState);
        
        void EndSetDot1XConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Dot1XConfiguration")]
        OnvifBasic.device.Dot1XConfiguration GetDot1XConfiguration(string Dot1XConfigurationToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginGetDot1XConfiguration(string Dot1XConfigurationToken, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="Dot1XConfiguration")]
        OnvifBasic.device.Dot1XConfiguration EndGetDot1XConfiguration(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Dot1XConfiguration' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Dot1XConfiguration")]
        OnvifBasic.device.GetDot1XConfigurationsResponse GetDot1XConfigurations(OnvifBasic.device.GetDot1XConfigurationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations", ReplyAction="*")]
        System.IAsyncResult BeginGetDot1XConfigurations(OnvifBasic.device.GetDot1XConfigurationsRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.GetDot1XConfigurationsResponse EndGetDot1XConfigurations(System.IAsyncResult result);
        
        // CODEGEN: Parameter 'Dot1XConfigurationToken' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        OnvifBasic.device.DeleteDot1XConfigurationResponse DeleteDot1XConfiguration(OnvifBasic.device.DeleteDot1XConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginDeleteDot1XConfiguration(OnvifBasic.device.DeleteDot1XConfigurationRequest request, System.AsyncCallback callback, object asyncState);
        
        OnvifBasic.device.DeleteDot1XConfigurationResponse EndDeleteDot1XConfiguration(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class Service : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string namespaceField;
        
        private string xAddrField;
        
        private System.Xml.XmlElement capabilitiesField;
        
        private OnvifVersion versionField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string Namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
                this.RaisePropertyChanged("Namespace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=1)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.Xml.XmlElement Capabilities {
            get {
                return this.capabilitiesField;
            }
            set {
                this.capabilitiesField = value;
                this.RaisePropertyChanged("Capabilities");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public OnvifVersion Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OnvifVersion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int majorField;
        
        private int minorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Major {
            get {
                return this.majorField;
            }
            set {
                this.majorField = value;
                this.RaisePropertyChanged("Major");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Minor {
            get {
                return this.minorField;
            }
            set {
                this.minorField = value;
                this.RaisePropertyChanged("Minor");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot1XConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class EapMethodExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class TLSConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string certificateIDField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string CertificateID {
            get {
                return this.certificateIDField;
            }
            set {
                this.certificateIDField = value;
                this.RaisePropertyChanged("CertificateID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class EAPMethodConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TLSConfiguration tLSConfigurationField;
        
        private string passwordField;
        
        private EapMethodExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public TLSConfiguration TLSConfiguration {
            get {
                return this.tLSConfigurationField;
            }
            set {
                this.tLSConfigurationField = value;
                this.RaisePropertyChanged("TLSConfiguration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public EapMethodExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot1XConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dot1XConfigurationTokenField;
        
        private string identityField;
        
        private string anonymousIDField;
        
        private int eAPMethodField;
        
        private string[] cACertificateIDField;
        
        private EAPMethodConfiguration eAPMethodConfigurationField;
        
        private Dot1XConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Dot1XConfigurationToken {
            get {
                return this.dot1XConfigurationTokenField;
            }
            set {
                this.dot1XConfigurationTokenField = value;
                this.RaisePropertyChanged("Dot1XConfigurationToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Identity {
            get {
                return this.identityField;
            }
            set {
                this.identityField = value;
                this.RaisePropertyChanged("Identity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string AnonymousID {
            get {
                return this.anonymousIDField;
            }
            set {
                this.anonymousIDField = value;
                this.RaisePropertyChanged("AnonymousID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int EAPMethod {
            get {
                return this.eAPMethodField;
            }
            set {
                this.eAPMethodField = value;
                this.RaisePropertyChanged("EAPMethod");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CACertificateID", DataType="token", Order=4)]
        public string[] CACertificateID {
            get {
                return this.cACertificateIDField;
            }
            set {
                this.cACertificateIDField = value;
                this.RaisePropertyChanged("CACertificateID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public EAPMethodConfiguration EAPMethodConfiguration {
            get {
                return this.eAPMethodConfigurationField;
            }
            set {
                this.eAPMethodConfigurationField = value;
                this.RaisePropertyChanged("EAPMethodConfiguration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public Dot1XConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class CertificateInformationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DateTimeRange : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime fromField;
        
        private System.DateTime untilField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime Until {
            get {
                return this.untilField;
            }
            set {
                this.untilField = value;
                this.RaisePropertyChanged("Until");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class CertificateUsage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool criticalField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Critical {
            get {
                return this.criticalField;
            }
            set {
                this.criticalField = value;
                this.RaisePropertyChanged("Critical");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class CertificateInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string certificateIDField;
        
        private string issuerDNField;
        
        private string subjectDNField;
        
        private CertificateUsage keyUsageField;
        
        private CertificateUsage extendedKeyUsageField;
        
        private int keyLengthField;
        
        private bool keyLengthFieldSpecified;
        
        private string versionField;
        
        private string serialNumField;
        
        private string signatureAlgorithmField;
        
        private DateTimeRange validityField;
        
        private CertificateInformationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string CertificateID {
            get {
                return this.certificateIDField;
            }
            set {
                this.certificateIDField = value;
                this.RaisePropertyChanged("CertificateID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string IssuerDN {
            get {
                return this.issuerDNField;
            }
            set {
                this.issuerDNField = value;
                this.RaisePropertyChanged("IssuerDN");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string SubjectDN {
            get {
                return this.subjectDNField;
            }
            set {
                this.subjectDNField = value;
                this.RaisePropertyChanged("SubjectDN");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public CertificateUsage KeyUsage {
            get {
                return this.keyUsageField;
            }
            set {
                this.keyUsageField = value;
                this.RaisePropertyChanged("KeyUsage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public CertificateUsage ExtendedKeyUsage {
            get {
                return this.extendedKeyUsageField;
            }
            set {
                this.extendedKeyUsageField = value;
                this.RaisePropertyChanged("ExtendedKeyUsage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int KeyLength {
            get {
                return this.keyLengthField;
            }
            set {
                this.keyLengthField = value;
                this.RaisePropertyChanged("KeyLength");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KeyLengthSpecified {
            get {
                return this.keyLengthFieldSpecified;
            }
            set {
                this.keyLengthFieldSpecified = value;
                this.RaisePropertyChanged("KeyLengthSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string SerialNum {
            get {
                return this.serialNumField;
            }
            set {
                this.serialNumField = value;
                this.RaisePropertyChanged("SerialNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string SignatureAlgorithm {
            get {
                return this.signatureAlgorithmField;
            }
            set {
                this.signatureAlgorithmField = value;
                this.RaisePropertyChanged("SignatureAlgorithm");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public DateTimeRange Validity {
            get {
                return this.validityField;
            }
            set {
                this.validityField = value;
                this.RaisePropertyChanged("Validity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public CertificateInformationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class CertificateWithPrivateKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string certificateIDField;
        
        private BinaryData certificateField;
        
        private BinaryData privateKeyField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string CertificateID {
            get {
                return this.certificateIDField;
            }
            set {
                this.certificateIDField = value;
                this.RaisePropertyChanged("CertificateID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public BinaryData Certificate {
            get {
                return this.certificateField;
            }
            set {
                this.certificateField = value;
                this.RaisePropertyChanged("Certificate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public BinaryData PrivateKey {
            get {
                return this.privateKeyField;
            }
            set {
                this.privateKeyField = value;
                this.RaisePropertyChanged("PrivateKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class BinaryData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] dataField;
        
        private string contentTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("Data");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/2005/05/xmlmime")]
        public string contentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
                this.RaisePropertyChanged("contentType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class CertificateStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string certificateIDField;
        
        private bool statusField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string CertificateID {
            get {
                return this.certificateIDField;
            }
            set {
                this.certificateIDField = value;
                this.RaisePropertyChanged("CertificateID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Certificate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string certificateIDField;
        
        private BinaryData certificate1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string CertificateID {
            get {
                return this.certificateIDField;
            }
            set {
                this.certificateIDField = value;
                this.RaisePropertyChanged("CertificateID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Certificate", Order=1)]
        public BinaryData Certificate1 {
            get {
                return this.certificate1Field;
            }
            set {
                this.certificate1Field = value;
                this.RaisePropertyChanged("Certificate1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class LocalOrientation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private float panField;
        
        private bool panFieldSpecified;
        
        private float tiltField;
        
        private bool tiltFieldSpecified;
        
        private float rollField;
        
        private bool rollFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float pan {
            get {
                return this.panField;
            }
            set {
                this.panField = value;
                this.RaisePropertyChanged("pan");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool panSpecified {
            get {
                return this.panFieldSpecified;
            }
            set {
                this.panFieldSpecified = value;
                this.RaisePropertyChanged("panSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float tilt {
            get {
                return this.tiltField;
            }
            set {
                this.tiltField = value;
                this.RaisePropertyChanged("tilt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tiltSpecified {
            get {
                return this.tiltFieldSpecified;
            }
            set {
                this.tiltFieldSpecified = value;
                this.RaisePropertyChanged("tiltSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float roll {
            get {
                return this.rollField;
            }
            set {
                this.rollField = value;
                this.RaisePropertyChanged("roll");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rollSpecified {
            get {
                return this.rollFieldSpecified;
            }
            set {
                this.rollFieldSpecified = value;
                this.RaisePropertyChanged("rollSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class LocalLocation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private float xField;
        
        private bool xFieldSpecified;
        
        private float yField;
        
        private bool yFieldSpecified;
        
        private float zField;
        
        private bool zFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
                this.RaisePropertyChanged("x");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xSpecified {
            get {
                return this.xFieldSpecified;
            }
            set {
                this.xFieldSpecified = value;
                this.RaisePropertyChanged("xSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
                this.RaisePropertyChanged("y");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ySpecified {
            get {
                return this.yFieldSpecified;
            }
            set {
                this.yFieldSpecified = value;
                this.RaisePropertyChanged("ySpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float z {
            get {
                return this.zField;
            }
            set {
                this.zField = value;
                this.RaisePropertyChanged("z");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool zSpecified {
            get {
                return this.zFieldSpecified;
            }
            set {
                this.zFieldSpecified = value;
                this.RaisePropertyChanged("zSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class GeoOrientation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private float rollField;
        
        private bool rollFieldSpecified;
        
        private float pitchField;
        
        private bool pitchFieldSpecified;
        
        private float yawField;
        
        private bool yawFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float roll {
            get {
                return this.rollField;
            }
            set {
                this.rollField = value;
                this.RaisePropertyChanged("roll");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rollSpecified {
            get {
                return this.rollFieldSpecified;
            }
            set {
                this.rollFieldSpecified = value;
                this.RaisePropertyChanged("rollSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float pitch {
            get {
                return this.pitchField;
            }
            set {
                this.pitchField = value;
                this.RaisePropertyChanged("pitch");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pitchSpecified {
            get {
                return this.pitchFieldSpecified;
            }
            set {
                this.pitchFieldSpecified = value;
                this.RaisePropertyChanged("pitchSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float yaw {
            get {
                return this.yawField;
            }
            set {
                this.yawField = value;
                this.RaisePropertyChanged("yaw");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool yawSpecified {
            get {
                return this.yawFieldSpecified;
            }
            set {
                this.yawFieldSpecified = value;
                this.RaisePropertyChanged("yawSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class GeoLocation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private double lonField;
        
        private bool lonFieldSpecified;
        
        private double latField;
        
        private bool latFieldSpecified;
        
        private float elevationField;
        
        private bool elevationFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double lon {
            get {
                return this.lonField;
            }
            set {
                this.lonField = value;
                this.RaisePropertyChanged("lon");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lonSpecified {
            get {
                return this.lonFieldSpecified;
            }
            set {
                this.lonFieldSpecified = value;
                this.RaisePropertyChanged("lonSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double lat {
            get {
                return this.latField;
            }
            set {
                this.latField = value;
                this.RaisePropertyChanged("lat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latSpecified {
            get {
                return this.latFieldSpecified;
            }
            set {
                this.latFieldSpecified = value;
                this.RaisePropertyChanged("latSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float elevation {
            get {
                return this.elevationField;
            }
            set {
                this.elevationField = value;
                this.RaisePropertyChanged("elevation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool elevationSpecified {
            get {
                return this.elevationFieldSpecified;
            }
            set {
                this.elevationFieldSpecified = value;
                this.RaisePropertyChanged("elevationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class LocationEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GeoLocation geoLocationField;
        
        private GeoOrientation geoOrientationField;
        
        private LocalLocation localLocationField;
        
        private LocalOrientation localOrientationField;
        
        private string entityField;
        
        private string tokenField;
        
        private bool fixedField;
        
        private bool fixedFieldSpecified;
        
        private string geoSourceField;
        
        private bool autoGeoField;
        
        private bool autoGeoFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GeoLocation GeoLocation {
            get {
                return this.geoLocationField;
            }
            set {
                this.geoLocationField = value;
                this.RaisePropertyChanged("GeoLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public GeoOrientation GeoOrientation {
            get {
                return this.geoOrientationField;
            }
            set {
                this.geoOrientationField = value;
                this.RaisePropertyChanged("GeoOrientation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public LocalLocation LocalLocation {
            get {
                return this.localLocationField;
            }
            set {
                this.localLocationField = value;
                this.RaisePropertyChanged("LocalLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public LocalOrientation LocalOrientation {
            get {
                return this.localOrientationField;
            }
            set {
                this.localOrientationField = value;
                this.RaisePropertyChanged("LocalOrientation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Entity {
            get {
                return this.entityField;
            }
            set {
                this.entityField = value;
                this.RaisePropertyChanged("Entity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
                this.RaisePropertyChanged("Token");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Fixed {
            get {
                return this.fixedField;
            }
            set {
                this.fixedField = value;
                this.RaisePropertyChanged("Fixed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedSpecified {
            get {
                return this.fixedFieldSpecified;
            }
            set {
                this.fixedFieldSpecified = value;
                this.RaisePropertyChanged("FixedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string GeoSource {
            get {
                return this.geoSourceField;
            }
            set {
                this.geoSourceField = value;
                this.RaisePropertyChanged("GeoSource");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool AutoGeo {
            get {
                return this.autoGeoField;
            }
            set {
                this.autoGeoField = value;
                this.RaisePropertyChanged("AutoGeo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoGeoSpecified {
            get {
                return this.autoGeoFieldSpecified;
            }
            set {
                this.autoGeoFieldSpecified = value;
                this.RaisePropertyChanged("AutoGeoSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemLogUri : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SystemLogType typeField;
        
        private string uriField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public SystemLogType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=1)]
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
                this.RaisePropertyChanged("Uri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum SystemLogType {
        
        /// <remarks/>
        System,
        
        /// <remarks/>
        Access,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot11AvailableNetworksExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot11AvailableNetworks : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] sSIDField;
        
        private string bSSIDField;
        
        private Dot11AuthAndMangementSuite[] authAndMangementSuiteField;
        
        private Dot11Cipher[] pairCipherField;
        
        private Dot11Cipher[] groupCipherField;
        
        private Dot11SignalStrength signalStrengthField;
        
        private bool signalStrengthFieldSpecified;
        
        private Dot11AvailableNetworksExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary", Order=0)]
        public byte[] SSID {
            get {
                return this.sSIDField;
            }
            set {
                this.sSIDField = value;
                this.RaisePropertyChanged("SSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BSSID {
            get {
                return this.bSSIDField;
            }
            set {
                this.bSSIDField = value;
                this.RaisePropertyChanged("BSSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AuthAndMangementSuite", Order=2)]
        public Dot11AuthAndMangementSuite[] AuthAndMangementSuite {
            get {
                return this.authAndMangementSuiteField;
            }
            set {
                this.authAndMangementSuiteField = value;
                this.RaisePropertyChanged("AuthAndMangementSuite");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PairCipher", Order=3)]
        public Dot11Cipher[] PairCipher {
            get {
                return this.pairCipherField;
            }
            set {
                this.pairCipherField = value;
                this.RaisePropertyChanged("PairCipher");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GroupCipher", Order=4)]
        public Dot11Cipher[] GroupCipher {
            get {
                return this.groupCipherField;
            }
            set {
                this.groupCipherField = value;
                this.RaisePropertyChanged("GroupCipher");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public Dot11SignalStrength SignalStrength {
            get {
                return this.signalStrengthField;
            }
            set {
                this.signalStrengthField = value;
                this.RaisePropertyChanged("SignalStrength");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalStrengthSpecified {
            get {
                return this.signalStrengthFieldSpecified;
            }
            set {
                this.signalStrengthFieldSpecified = value;
                this.RaisePropertyChanged("SignalStrengthSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public Dot11AvailableNetworksExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum Dot11AuthAndMangementSuite {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Dot1X,
        
        /// <remarks/>
        PSK,
        
        /// <remarks/>
        Extended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum Dot11Cipher {
        
        /// <remarks/>
        CCMP,
        
        /// <remarks/>
        TKIP,
        
        /// <remarks/>
        Any,
        
        /// <remarks/>
        Extended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum Dot11SignalStrength {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Very Bad")]
        VeryBad,
        
        /// <remarks/>
        Bad,
        
        /// <remarks/>
        Good,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Very Good")]
        VeryGood,
        
        /// <remarks/>
        Extended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot11Status : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] sSIDField;
        
        private string bSSIDField;
        
        private Dot11Cipher pairCipherField;
        
        private bool pairCipherFieldSpecified;
        
        private Dot11Cipher groupCipherField;
        
        private bool groupCipherFieldSpecified;
        
        private Dot11SignalStrength signalStrengthField;
        
        private bool signalStrengthFieldSpecified;
        
        private string activeConfigAliasField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary", Order=0)]
        public byte[] SSID {
            get {
                return this.sSIDField;
            }
            set {
                this.sSIDField = value;
                this.RaisePropertyChanged("SSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BSSID {
            get {
                return this.bSSIDField;
            }
            set {
                this.bSSIDField = value;
                this.RaisePropertyChanged("BSSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Dot11Cipher PairCipher {
            get {
                return this.pairCipherField;
            }
            set {
                this.pairCipherField = value;
                this.RaisePropertyChanged("PairCipher");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PairCipherSpecified {
            get {
                return this.pairCipherFieldSpecified;
            }
            set {
                this.pairCipherFieldSpecified = value;
                this.RaisePropertyChanged("PairCipherSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public Dot11Cipher GroupCipher {
            get {
                return this.groupCipherField;
            }
            set {
                this.groupCipherField = value;
                this.RaisePropertyChanged("GroupCipher");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupCipherSpecified {
            get {
                return this.groupCipherFieldSpecified;
            }
            set {
                this.groupCipherFieldSpecified = value;
                this.RaisePropertyChanged("GroupCipherSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Dot11SignalStrength SignalStrength {
            get {
                return this.signalStrengthField;
            }
            set {
                this.signalStrengthField = value;
                this.RaisePropertyChanged("SignalStrength");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignalStrengthSpecified {
            get {
                return this.signalStrengthFieldSpecified;
            }
            set {
                this.signalStrengthFieldSpecified = value;
                this.RaisePropertyChanged("SignalStrengthSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ActiveConfigAlias {
            get {
                return this.activeConfigAliasField;
            }
            set {
                this.activeConfigAliasField = value;
                this.RaisePropertyChanged("ActiveConfigAlias");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=6)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot11Capabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool tKIPField;
        
        private bool scanAvailableNetworksField;
        
        private bool multipleConfigurationField;
        
        private bool adHocStationModeField;
        
        private bool wEPField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool TKIP {
            get {
                return this.tKIPField;
            }
            set {
                this.tKIPField = value;
                this.RaisePropertyChanged("TKIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool ScanAvailableNetworks {
            get {
                return this.scanAvailableNetworksField;
            }
            set {
                this.scanAvailableNetworksField = value;
                this.RaisePropertyChanged("ScanAvailableNetworks");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool MultipleConfiguration {
            get {
                return this.multipleConfigurationField;
            }
            set {
                this.multipleConfigurationField = value;
                this.RaisePropertyChanged("MultipleConfiguration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool AdHocStationMode {
            get {
                return this.adHocStationModeField;
            }
            set {
                this.adHocStationModeField = value;
                this.RaisePropertyChanged("AdHocStationMode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool WEP {
            get {
                return this.wEPField;
            }
            set {
                this.wEPField = value;
                this.RaisePropertyChanged("WEP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=5)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPAddressFilterExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPAddressFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IPAddressFilterType typeField;
        
        private PrefixedIPv4Address[] iPv4AddressField;
        
        private PrefixedIPv6Address[] iPv6AddressField;
        
        private IPAddressFilterExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public IPAddressFilterType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPv4Address", Order=1)]
        public PrefixedIPv4Address[] IPv4Address {
            get {
                return this.iPv4AddressField;
            }
            set {
                this.iPv4AddressField = value;
                this.RaisePropertyChanged("IPv4Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPv6Address", Order=2)]
        public PrefixedIPv6Address[] IPv6Address {
            get {
                return this.iPv6AddressField;
            }
            set {
                this.iPv6AddressField = value;
                this.RaisePropertyChanged("IPv6Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IPAddressFilterExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum IPAddressFilterType {
        
        /// <remarks/>
        Allow,
        
        /// <remarks/>
        Deny,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PrefixedIPv4Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string addressField;
        
        private int prefixLengthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int PrefixLength {
            get {
                return this.prefixLengthField;
            }
            set {
                this.prefixLengthField = value;
                this.RaisePropertyChanged("PrefixLength");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PrefixedIPv6Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string addressField;
        
        private int prefixLengthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int PrefixLength {
            get {
                return this.prefixLengthField;
            }
            set {
                this.prefixLengthField = value;
                this.RaisePropertyChanged("PrefixLength");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkZeroConfigurationExtension2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkZeroConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private NetworkZeroConfiguration[] additionalField;
        
        private NetworkZeroConfigurationExtension2 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Additional", Order=1)]
        public NetworkZeroConfiguration[] Additional {
            get {
                return this.additionalField;
            }
            set {
                this.additionalField = value;
                this.RaisePropertyChanged("Additional");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public NetworkZeroConfigurationExtension2 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkZeroConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string interfaceTokenField;
        
        private bool enabledField;
        
        private string[] addressesField;
        
        private NetworkZeroConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string InterfaceToken {
            get {
                return this.interfaceTokenField;
            }
            set {
                this.interfaceTokenField = value;
                this.RaisePropertyChanged("InterfaceToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Addresses", DataType="token", Order=2)]
        public string[] Addresses {
            get {
                return this.addressesField;
            }
            set {
                this.addressesField = value;
                this.RaisePropertyChanged("Addresses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public NetworkZeroConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkGateway : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] iPv4AddressField;
        
        private string[] iPv6AddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPv4Address", DataType="token", Order=0)]
        public string[] IPv4Address {
            get {
                return this.iPv4AddressField;
            }
            set {
                this.iPv4AddressField = value;
                this.RaisePropertyChanged("IPv4Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPv6Address", DataType="token", Order=1)]
        public string[] IPv6Address {
            get {
                return this.iPv6AddressField;
            }
            set {
                this.iPv6AddressField = value;
                this.RaisePropertyChanged("IPv6Address");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkProtocolExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkProtocol : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NetworkProtocolType nameField;
        
        private bool enabledField;
        
        private int[] portField;
        
        private NetworkProtocolExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public NetworkProtocolType Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Port", Order=2)]
        public int[] Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
                this.RaisePropertyChanged("Port");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public NetworkProtocolExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum NetworkProtocolType {
        
        /// <remarks/>
        HTTP,
        
        /// <remarks/>
        HTTPS,
        
        /// <remarks/>
        RTSP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceSetConfigurationExtension2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceSetConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private Dot3Configuration[] dot3Field;
        
        private Dot11Configuration[] dot11Field;
        
        private NetworkInterfaceSetConfigurationExtension2 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Dot3", Order=1)]
        public Dot3Configuration[] Dot3 {
            get {
                return this.dot3Field;
            }
            set {
                this.dot3Field = value;
                this.RaisePropertyChanged("Dot3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Dot11", Order=2)]
        public Dot11Configuration[] Dot11 {
            get {
                return this.dot11Field;
            }
            set {
                this.dot11Field = value;
                this.RaisePropertyChanged("Dot11");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public NetworkInterfaceSetConfigurationExtension2 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot3Configuration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot11Configuration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] sSIDField;
        
        private Dot11StationMode modeField;
        
        private string aliasField;
        
        private string priorityField;
        
        private Dot11SecurityConfiguration securityField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary", Order=0)]
        public byte[] SSID {
            get {
                return this.sSIDField;
            }
            set {
                this.sSIDField = value;
                this.RaisePropertyChanged("SSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Dot11StationMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
                this.RaisePropertyChanged("Alias");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=3)]
        public string Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Dot11SecurityConfiguration Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
                this.RaisePropertyChanged("Security");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=5)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum Dot11StationMode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ad-hoc")]
        Adhoc,
        
        /// <remarks/>
        Infrastructure,
        
        /// <remarks/>
        Extended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot11SecurityConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Dot11SecurityMode modeField;
        
        private Dot11Cipher algorithmField;
        
        private bool algorithmFieldSpecified;
        
        private Dot11PSKSet pSKField;
        
        private string dot1XField;
        
        private Dot11SecurityConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Dot11SecurityMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Dot11Cipher Algorithm {
            get {
                return this.algorithmField;
            }
            set {
                this.algorithmField = value;
                this.RaisePropertyChanged("Algorithm");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlgorithmSpecified {
            get {
                return this.algorithmFieldSpecified;
            }
            set {
                this.algorithmFieldSpecified = value;
                this.RaisePropertyChanged("AlgorithmSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Dot11PSKSet PSK {
            get {
                return this.pSKField;
            }
            set {
                this.pSKField = value;
                this.RaisePropertyChanged("PSK");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Dot1X {
            get {
                return this.dot1XField;
            }
            set {
                this.dot1XField = value;
                this.RaisePropertyChanged("Dot1X");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Dot11SecurityConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum Dot11SecurityMode {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        WEP,
        
        /// <remarks/>
        PSK,
        
        /// <remarks/>
        Dot1X,
        
        /// <remarks/>
        Extended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot11PSKSet : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] keyField;
        
        private string passphraseField;
        
        private Dot11PSKSetExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary", Order=0)]
        public byte[] Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("Key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Passphrase {
            get {
                return this.passphraseField;
            }
            set {
                this.passphraseField = value;
                this.RaisePropertyChanged("Passphrase");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Dot11PSKSetExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot11PSKSetExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Dot11SecurityConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv6NetworkInterfaceSetConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private bool acceptRouterAdvertField;
        
        private bool acceptRouterAdvertFieldSpecified;
        
        private PrefixedIPv6Address[] manualField;
        
        private IPv6DHCPConfiguration dHCPField;
        
        private bool dHCPFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
                this.RaisePropertyChanged("EnabledSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool AcceptRouterAdvert {
            get {
                return this.acceptRouterAdvertField;
            }
            set {
                this.acceptRouterAdvertField = value;
                this.RaisePropertyChanged("AcceptRouterAdvert");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AcceptRouterAdvertSpecified {
            get {
                return this.acceptRouterAdvertFieldSpecified;
            }
            set {
                this.acceptRouterAdvertFieldSpecified = value;
                this.RaisePropertyChanged("AcceptRouterAdvertSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Manual", Order=2)]
        public PrefixedIPv6Address[] Manual {
            get {
                return this.manualField;
            }
            set {
                this.manualField = value;
                this.RaisePropertyChanged("Manual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IPv6DHCPConfiguration DHCP {
            get {
                return this.dHCPField;
            }
            set {
                this.dHCPField = value;
                this.RaisePropertyChanged("DHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DHCPSpecified {
            get {
                return this.dHCPFieldSpecified;
            }
            set {
                this.dHCPFieldSpecified = value;
                this.RaisePropertyChanged("DHCPSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum IPv6DHCPConfiguration {
        
        /// <remarks/>
        Auto,
        
        /// <remarks/>
        Stateful,
        
        /// <remarks/>
        Stateless,
        
        /// <remarks/>
        Off,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv4NetworkInterfaceSetConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private PrefixedIPv4Address[] manualField;
        
        private bool dHCPField;
        
        private bool dHCPFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
                this.RaisePropertyChanged("EnabledSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Manual", Order=1)]
        public PrefixedIPv4Address[] Manual {
            get {
                return this.manualField;
            }
            set {
                this.manualField = value;
                this.RaisePropertyChanged("Manual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool DHCP {
            get {
                return this.dHCPField;
            }
            set {
                this.dHCPField = value;
                this.RaisePropertyChanged("DHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DHCPSpecified {
            get {
                return this.dHCPFieldSpecified;
            }
            set {
                this.dHCPFieldSpecified = value;
                this.RaisePropertyChanged("DHCPSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceSetConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private NetworkInterfaceConnectionSetting linkField;
        
        private int mTUField;
        
        private bool mTUFieldSpecified;
        
        private IPv4NetworkInterfaceSetConfiguration iPv4Field;
        
        private IPv6NetworkInterfaceSetConfiguration iPv6Field;
        
        private NetworkInterfaceSetConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
                this.RaisePropertyChanged("EnabledSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public NetworkInterfaceConnectionSetting Link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
                this.RaisePropertyChanged("Link");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int MTU {
            get {
                return this.mTUField;
            }
            set {
                this.mTUField = value;
                this.RaisePropertyChanged("MTU");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MTUSpecified {
            get {
                return this.mTUFieldSpecified;
            }
            set {
                this.mTUFieldSpecified = value;
                this.RaisePropertyChanged("MTUSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IPv4NetworkInterfaceSetConfiguration IPv4 {
            get {
                return this.iPv4Field;
            }
            set {
                this.iPv4Field = value;
                this.RaisePropertyChanged("IPv4");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public IPv6NetworkInterfaceSetConfiguration IPv6 {
            get {
                return this.iPv6Field;
            }
            set {
                this.iPv6Field = value;
                this.RaisePropertyChanged("IPv6");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public NetworkInterfaceSetConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceConnectionSetting : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool autoNegotiationField;
        
        private int speedField;
        
        private Duplex duplexField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool AutoNegotiation {
            get {
                return this.autoNegotiationField;
            }
            set {
                this.autoNegotiationField = value;
                this.RaisePropertyChanged("AutoNegotiation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
                this.RaisePropertyChanged("Speed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Duplex Duplex {
            get {
                return this.duplexField;
            }
            set {
                this.duplexField = value;
                this.RaisePropertyChanged("Duplex");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum Duplex {
        
        /// <remarks/>
        Full,
        
        /// <remarks/>
        Half,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OSDConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OSDImgConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OSDImgConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string imgPathField;
        
        private OSDImgConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string ImgPath {
            get {
                return this.imgPathField;
            }
            set {
                this.imgPathField = value;
                this.RaisePropertyChanged("ImgPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public OSDImgConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OSDTextConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Color : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float xField;
        
        private float yField;
        
        private float zField;
        
        private string colorspaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
                this.RaisePropertyChanged("X");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
                this.RaisePropertyChanged("Y");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Z {
            get {
                return this.zField;
            }
            set {
                this.zField = value;
                this.RaisePropertyChanged("Z");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string Colorspace {
            get {
                return this.colorspaceField;
            }
            set {
                this.colorspaceField = value;
                this.RaisePropertyChanged("Colorspace");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OSDColor : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Color colorField;
        
        private int transparentField;
        
        private bool transparentFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Color Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
                this.RaisePropertyChanged("Color");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Transparent {
            get {
                return this.transparentField;
            }
            set {
                this.transparentField = value;
                this.RaisePropertyChanged("Transparent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparentSpecified {
            get {
                return this.transparentFieldSpecified;
            }
            set {
                this.transparentFieldSpecified = value;
                this.RaisePropertyChanged("TransparentSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OSDTextConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string typeField;
        
        private string dateFormatField;
        
        private string timeFormatField;
        
        private int fontSizeField;
        
        private bool fontSizeFieldSpecified;
        
        private OSDColor fontColorField;
        
        private OSDColor backgroundColorField;
        
        private string plainTextField;
        
        private OSDTextConfigurationExtension extensionField;
        
        private bool isPersistentTextField;
        
        private bool isPersistentTextFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DateFormat {
            get {
                return this.dateFormatField;
            }
            set {
                this.dateFormatField = value;
                this.RaisePropertyChanged("DateFormat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TimeFormat {
            get {
                return this.timeFormatField;
            }
            set {
                this.timeFormatField = value;
                this.RaisePropertyChanged("TimeFormat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int FontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
                this.RaisePropertyChanged("FontSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeSpecified {
            get {
                return this.fontSizeFieldSpecified;
            }
            set {
                this.fontSizeFieldSpecified = value;
                this.RaisePropertyChanged("FontSizeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public OSDColor FontColor {
            get {
                return this.fontColorField;
            }
            set {
                this.fontColorField = value;
                this.RaisePropertyChanged("FontColor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public OSDColor BackgroundColor {
            get {
                return this.backgroundColorField;
            }
            set {
                this.backgroundColorField = value;
                this.RaisePropertyChanged("BackgroundColor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string PlainText {
            get {
                return this.plainTextField;
            }
            set {
                this.plainTextField = value;
                this.RaisePropertyChanged("PlainText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public OSDTextConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsPersistentText {
            get {
                return this.isPersistentTextField;
            }
            set {
                this.isPersistentTextField = value;
                this.RaisePropertyChanged("IsPersistentText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPersistentTextSpecified {
            get {
                return this.isPersistentTextFieldSpecified;
            }
            set {
                this.isPersistentTextFieldSpecified = value;
                this.RaisePropertyChanged("IsPersistentTextSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OSDPosConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Vector : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float xField;
        
        private bool xFieldSpecified;
        
        private float yField;
        
        private bool yFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
                this.RaisePropertyChanged("x");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xSpecified {
            get {
                return this.xFieldSpecified;
            }
            set {
                this.xFieldSpecified = value;
                this.RaisePropertyChanged("xSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
                this.RaisePropertyChanged("y");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ySpecified {
            get {
                return this.yFieldSpecified;
            }
            set {
                this.yFieldSpecified = value;
                this.RaisePropertyChanged("ySpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OSDPosConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string typeField;
        
        private Vector posField;
        
        private OSDPosConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Vector Pos {
            get {
                return this.posField;
            }
            set {
                this.posField = value;
                this.RaisePropertyChanged("Pos");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public OSDPosConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OSDReference : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZNodeExtension2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZPresetTourSupportedExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZPresetTourSupported : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int maximumNumberOfPresetToursField;
        
        private PTZPresetTourOperation[] pTZPresetTourOperationField;
        
        private PTZPresetTourSupportedExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int MaximumNumberOfPresetTours {
            get {
                return this.maximumNumberOfPresetToursField;
            }
            set {
                this.maximumNumberOfPresetToursField = value;
                this.RaisePropertyChanged("MaximumNumberOfPresetTours");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PTZPresetTourOperation", Order=1)]
        public PTZPresetTourOperation[] PTZPresetTourOperation {
            get {
                return this.pTZPresetTourOperationField;
            }
            set {
                this.pTZPresetTourOperationField = value;
                this.RaisePropertyChanged("PTZPresetTourOperation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public PTZPresetTourSupportedExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum PTZPresetTourOperation {
        
        /// <remarks/>
        Start,
        
        /// <remarks/>
        Stop,
        
        /// <remarks/>
        Pause,
        
        /// <remarks/>
        Extended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZNodeExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private PTZPresetTourSupported supportedPresetTourField;
        
        private PTZNodeExtension2 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public PTZPresetTourSupported SupportedPresetTour {
            get {
                return this.supportedPresetTourField;
            }
            set {
                this.supportedPresetTourField = value;
                this.RaisePropertyChanged("SupportedPresetTour");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public PTZNodeExtension2 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZSpacesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Space1DDescription : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uRIField;
        
        private FloatRange xRangeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
                this.RaisePropertyChanged("URI");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange XRange {
            get {
                return this.xRangeField;
            }
            set {
                this.xRangeField = value;
                this.RaisePropertyChanged("XRange");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FloatRange : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float minField;
        
        private float maxField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
                this.RaisePropertyChanged("Min");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
                this.RaisePropertyChanged("Max");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Space2DDescription : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uRIField;
        
        private FloatRange xRangeField;
        
        private FloatRange yRangeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
                this.RaisePropertyChanged("URI");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange XRange {
            get {
                return this.xRangeField;
            }
            set {
                this.xRangeField = value;
                this.RaisePropertyChanged("XRange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FloatRange YRange {
            get {
                return this.yRangeField;
            }
            set {
                this.yRangeField = value;
                this.RaisePropertyChanged("YRange");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZSpaces : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Space2DDescription[] absolutePanTiltPositionSpaceField;
        
        private Space1DDescription[] absoluteZoomPositionSpaceField;
        
        private Space2DDescription[] relativePanTiltTranslationSpaceField;
        
        private Space1DDescription[] relativeZoomTranslationSpaceField;
        
        private Space2DDescription[] continuousPanTiltVelocitySpaceField;
        
        private Space1DDescription[] continuousZoomVelocitySpaceField;
        
        private Space1DDescription[] panTiltSpeedSpaceField;
        
        private Space1DDescription[] zoomSpeedSpaceField;
        
        private PTZSpacesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AbsolutePanTiltPositionSpace", Order=0)]
        public Space2DDescription[] AbsolutePanTiltPositionSpace {
            get {
                return this.absolutePanTiltPositionSpaceField;
            }
            set {
                this.absolutePanTiltPositionSpaceField = value;
                this.RaisePropertyChanged("AbsolutePanTiltPositionSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AbsoluteZoomPositionSpace", Order=1)]
        public Space1DDescription[] AbsoluteZoomPositionSpace {
            get {
                return this.absoluteZoomPositionSpaceField;
            }
            set {
                this.absoluteZoomPositionSpaceField = value;
                this.RaisePropertyChanged("AbsoluteZoomPositionSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelativePanTiltTranslationSpace", Order=2)]
        public Space2DDescription[] RelativePanTiltTranslationSpace {
            get {
                return this.relativePanTiltTranslationSpaceField;
            }
            set {
                this.relativePanTiltTranslationSpaceField = value;
                this.RaisePropertyChanged("RelativePanTiltTranslationSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelativeZoomTranslationSpace", Order=3)]
        public Space1DDescription[] RelativeZoomTranslationSpace {
            get {
                return this.relativeZoomTranslationSpaceField;
            }
            set {
                this.relativeZoomTranslationSpaceField = value;
                this.RaisePropertyChanged("RelativeZoomTranslationSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ContinuousPanTiltVelocitySpace", Order=4)]
        public Space2DDescription[] ContinuousPanTiltVelocitySpace {
            get {
                return this.continuousPanTiltVelocitySpaceField;
            }
            set {
                this.continuousPanTiltVelocitySpaceField = value;
                this.RaisePropertyChanged("ContinuousPanTiltVelocitySpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ContinuousZoomVelocitySpace", Order=5)]
        public Space1DDescription[] ContinuousZoomVelocitySpace {
            get {
                return this.continuousZoomVelocitySpaceField;
            }
            set {
                this.continuousZoomVelocitySpaceField = value;
                this.RaisePropertyChanged("ContinuousZoomVelocitySpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PanTiltSpeedSpace", Order=6)]
        public Space1DDescription[] PanTiltSpeedSpace {
            get {
                return this.panTiltSpeedSpaceField;
            }
            set {
                this.panTiltSpeedSpaceField = value;
                this.RaisePropertyChanged("PanTiltSpeedSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ZoomSpeedSpace", Order=7)]
        public Space1DDescription[] ZoomSpeedSpace {
            get {
                return this.zoomSpeedSpaceField;
            }
            set {
                this.zoomSpeedSpaceField = value;
                this.RaisePropertyChanged("ZoomSpeedSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public PTZSpacesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RelayOutputSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private RelayMode modeField;
        
        private string delayTimeField;
        
        private RelayIdleState idleStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public RelayMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=1)]
        public string DelayTime {
            get {
                return this.delayTimeField;
            }
            set {
                this.delayTimeField = value;
                this.RaisePropertyChanged("DelayTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public RelayIdleState IdleState {
            get {
                return this.idleStateField;
            }
            set {
                this.idleStateField = value;
                this.RaisePropertyChanged("IdleState");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum RelayMode {
        
        /// <remarks/>
        Monostable,
        
        /// <remarks/>
        Bistable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum RelayIdleState {
        
        /// <remarks/>
        closed,
        
        /// <remarks/>
        open,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceExtension2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private int interfaceTypeField;
        
        private Dot3Configuration[] dot3Field;
        
        private Dot11Configuration[] dot11Field;
        
        private NetworkInterfaceExtension2 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
                this.RaisePropertyChanged("InterfaceType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Dot3", Order=2)]
        public Dot3Configuration[] Dot3 {
            get {
                return this.dot3Field;
            }
            set {
                this.dot3Field = value;
                this.RaisePropertyChanged("Dot3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Dot11", Order=3)]
        public Dot11Configuration[] Dot11 {
            get {
                return this.dot11Field;
            }
            set {
                this.dot11Field = value;
                this.RaisePropertyChanged("Dot11");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public NetworkInterfaceExtension2 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv6ConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv6Configuration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool acceptRouterAdvertField;
        
        private bool acceptRouterAdvertFieldSpecified;
        
        private IPv6DHCPConfiguration dHCPField;
        
        private PrefixedIPv6Address[] manualField;
        
        private PrefixedIPv6Address[] linkLocalField;
        
        private PrefixedIPv6Address[] fromDHCPField;
        
        private PrefixedIPv6Address[] fromRAField;
        
        private IPv6ConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool AcceptRouterAdvert {
            get {
                return this.acceptRouterAdvertField;
            }
            set {
                this.acceptRouterAdvertField = value;
                this.RaisePropertyChanged("AcceptRouterAdvert");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AcceptRouterAdvertSpecified {
            get {
                return this.acceptRouterAdvertFieldSpecified;
            }
            set {
                this.acceptRouterAdvertFieldSpecified = value;
                this.RaisePropertyChanged("AcceptRouterAdvertSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public IPv6DHCPConfiguration DHCP {
            get {
                return this.dHCPField;
            }
            set {
                this.dHCPField = value;
                this.RaisePropertyChanged("DHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Manual", Order=2)]
        public PrefixedIPv6Address[] Manual {
            get {
                return this.manualField;
            }
            set {
                this.manualField = value;
                this.RaisePropertyChanged("Manual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LinkLocal", Order=3)]
        public PrefixedIPv6Address[] LinkLocal {
            get {
                return this.linkLocalField;
            }
            set {
                this.linkLocalField = value;
                this.RaisePropertyChanged("LinkLocal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FromDHCP", Order=4)]
        public PrefixedIPv6Address[] FromDHCP {
            get {
                return this.fromDHCPField;
            }
            set {
                this.fromDHCPField = value;
                this.RaisePropertyChanged("FromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FromRA", Order=5)]
        public PrefixedIPv6Address[] FromRA {
            get {
                return this.fromRAField;
            }
            set {
                this.fromRAField = value;
                this.RaisePropertyChanged("FromRA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public IPv6ConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv6NetworkInterface : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool enabledField;
        
        private IPv6Configuration configField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public IPv6Configuration Config {
            get {
                return this.configField;
            }
            set {
                this.configField = value;
                this.RaisePropertyChanged("Config");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv4Configuration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PrefixedIPv4Address[] manualField;
        
        private PrefixedIPv4Address linkLocalField;
        
        private PrefixedIPv4Address fromDHCPField;
        
        private bool dHCPField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Manual", Order=0)]
        public PrefixedIPv4Address[] Manual {
            get {
                return this.manualField;
            }
            set {
                this.manualField = value;
                this.RaisePropertyChanged("Manual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public PrefixedIPv4Address LinkLocal {
            get {
                return this.linkLocalField;
            }
            set {
                this.linkLocalField = value;
                this.RaisePropertyChanged("LinkLocal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public PrefixedIPv4Address FromDHCP {
            get {
                return this.fromDHCPField;
            }
            set {
                this.fromDHCPField = value;
                this.RaisePropertyChanged("FromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool DHCP {
            get {
                return this.dHCPField;
            }
            set {
                this.dHCPField = value;
                this.RaisePropertyChanged("DHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv4NetworkInterface : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool enabledField;
        
        private IPv4Configuration configField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public IPv4Configuration Config {
            get {
                return this.configField;
            }
            set {
                this.configField = value;
                this.RaisePropertyChanged("Config");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceLink : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NetworkInterfaceConnectionSetting adminSettingsField;
        
        private NetworkInterfaceConnectionSetting operSettingsField;
        
        private int interfaceTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public NetworkInterfaceConnectionSetting AdminSettings {
            get {
                return this.adminSettingsField;
            }
            set {
                this.adminSettingsField = value;
                this.RaisePropertyChanged("AdminSettings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public NetworkInterfaceConnectionSetting OperSettings {
            get {
                return this.operSettingsField;
            }
            set {
                this.operSettingsField = value;
                this.RaisePropertyChanged("OperSettings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
                this.RaisePropertyChanged("InterfaceType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string hwAddressField;
        
        private int mTUField;
        
        private bool mTUFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=1)]
        public string HwAddress {
            get {
                return this.hwAddressField;
            }
            set {
                this.hwAddressField = value;
                this.RaisePropertyChanged("HwAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int MTU {
            get {
                return this.mTUField;
            }
            set {
                this.mTUField = value;
                this.RaisePropertyChanged("MTU");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MTUSpecified {
            get {
                return this.mTUFieldSpecified;
            }
            set {
                this.mTUFieldSpecified = value;
                this.RaisePropertyChanged("MTUSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class VideoOutputExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class LayoutExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PaneLayout : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string paneField;
        
        private Rectangle areaField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Pane {
            get {
                return this.paneField;
            }
            set {
                this.paneField = value;
                this.RaisePropertyChanged("Pane");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Rectangle Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
                this.RaisePropertyChanged("Area");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Rectangle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float bottomField;
        
        private bool bottomFieldSpecified;
        
        private float topField;
        
        private bool topFieldSpecified;
        
        private float rightField;
        
        private bool rightFieldSpecified;
        
        private float leftField;
        
        private bool leftFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
                this.RaisePropertyChanged("bottom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bottomSpecified {
            get {
                return this.bottomFieldSpecified;
            }
            set {
                this.bottomFieldSpecified = value;
                this.RaisePropertyChanged("bottomSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
                this.RaisePropertyChanged("top");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool topSpecified {
            get {
                return this.topFieldSpecified;
            }
            set {
                this.topFieldSpecified = value;
                this.RaisePropertyChanged("topSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
                this.RaisePropertyChanged("right");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rightSpecified {
            get {
                return this.rightFieldSpecified;
            }
            set {
                this.rightFieldSpecified = value;
                this.RaisePropertyChanged("rightSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
                this.RaisePropertyChanged("left");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool leftSpecified {
            get {
                return this.leftFieldSpecified;
            }
            set {
                this.leftFieldSpecified = value;
                this.RaisePropertyChanged("leftSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Layout : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PaneLayout[] paneLayoutField;
        
        private LayoutExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PaneLayout", Order=0)]
        public PaneLayout[] PaneLayout {
            get {
                return this.paneLayoutField;
            }
            set {
                this.paneLayoutField = value;
                this.RaisePropertyChanged("PaneLayout");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LayoutExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class VideoSourceExtension2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettingsExtension204 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NoiseReduction : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float levelField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DefoggingExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Defogging : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string modeField;
        
        private float levelField;
        
        private bool levelFieldSpecified;
        
        private DefoggingExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified {
            get {
                return this.levelFieldSpecified;
            }
            set {
                this.levelFieldSpecified = value;
                this.RaisePropertyChanged("LevelSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public DefoggingExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ToneCompensationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ToneCompensation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string modeField;
        
        private float levelField;
        
        private bool levelFieldSpecified;
        
        private ToneCompensationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified {
            get {
                return this.levelFieldSpecified;
            }
            set {
                this.levelFieldSpecified = value;
                this.RaisePropertyChanged("LevelSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ToneCompensationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettingsExtension203 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ToneCompensation toneCompensationField;
        
        private Defogging defoggingField;
        
        private NoiseReduction noiseReductionField;
        
        private ImagingSettingsExtension204 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ToneCompensation ToneCompensation {
            get {
                return this.toneCompensationField;
            }
            set {
                this.toneCompensationField = value;
                this.RaisePropertyChanged("ToneCompensation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Defogging Defogging {
            get {
                return this.defoggingField;
            }
            set {
                this.defoggingField = value;
                this.RaisePropertyChanged("Defogging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public NoiseReduction NoiseReduction {
            get {
                return this.noiseReductionField;
            }
            set {
                this.noiseReductionField = value;
                this.RaisePropertyChanged("NoiseReduction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public ImagingSettingsExtension204 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IrCutFilterAutoAdjustmentExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IrCutFilterAutoAdjustment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string boundaryTypeField;
        
        private float boundaryOffsetField;
        
        private bool boundaryOffsetFieldSpecified;
        
        private string responseTimeField;
        
        private IrCutFilterAutoAdjustmentExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string BoundaryType {
            get {
                return this.boundaryTypeField;
            }
            set {
                this.boundaryTypeField = value;
                this.RaisePropertyChanged("BoundaryType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float BoundaryOffset {
            get {
                return this.boundaryOffsetField;
            }
            set {
                this.boundaryOffsetField = value;
                this.RaisePropertyChanged("BoundaryOffset");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoundaryOffsetSpecified {
            get {
                return this.boundaryOffsetFieldSpecified;
            }
            set {
                this.boundaryOffsetFieldSpecified = value;
                this.RaisePropertyChanged("BoundaryOffsetSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=2)]
        public string ResponseTime {
            get {
                return this.responseTimeField;
            }
            set {
                this.responseTimeField = value;
                this.RaisePropertyChanged("ResponseTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IrCutFilterAutoAdjustmentExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettingsExtension202 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IrCutFilterAutoAdjustment[] irCutFilterAutoAdjustmentField;
        
        private ImagingSettingsExtension203 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IrCutFilterAutoAdjustment", Order=0)]
        public IrCutFilterAutoAdjustment[] IrCutFilterAutoAdjustment {
            get {
                return this.irCutFilterAutoAdjustmentField;
            }
            set {
                this.irCutFilterAutoAdjustmentField = value;
                this.RaisePropertyChanged("IrCutFilterAutoAdjustment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ImagingSettingsExtension203 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImageStabilizationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImageStabilization : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ImageStabilizationMode modeField;
        
        private float levelField;
        
        private bool levelFieldSpecified;
        
        private ImageStabilizationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ImageStabilizationMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified {
            get {
                return this.levelFieldSpecified;
            }
            set {
                this.levelFieldSpecified = value;
                this.RaisePropertyChanged("LevelSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ImageStabilizationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum ImageStabilizationMode {
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        ON,
        
        /// <remarks/>
        AUTO,
        
        /// <remarks/>
        Extended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettingsExtension20 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private ImageStabilization imageStabilizationField;
        
        private ImagingSettingsExtension202 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ImageStabilization ImageStabilization {
            get {
                return this.imageStabilizationField;
            }
            set {
                this.imageStabilizationField = value;
                this.RaisePropertyChanged("ImageStabilization");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ImagingSettingsExtension202 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WhiteBalance20Extension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WhiteBalance20 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WhiteBalanceMode modeField;
        
        private float crGainField;
        
        private bool crGainFieldSpecified;
        
        private float cbGainField;
        
        private bool cbGainFieldSpecified;
        
        private WhiteBalance20Extension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WhiteBalanceMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float CrGain {
            get {
                return this.crGainField;
            }
            set {
                this.crGainField = value;
                this.RaisePropertyChanged("CrGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CrGainSpecified {
            get {
                return this.crGainFieldSpecified;
            }
            set {
                this.crGainFieldSpecified = value;
                this.RaisePropertyChanged("CrGainSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float CbGain {
            get {
                return this.cbGainField;
            }
            set {
                this.cbGainField = value;
                this.RaisePropertyChanged("CbGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CbGainSpecified {
            get {
                return this.cbGainFieldSpecified;
            }
            set {
                this.cbGainFieldSpecified = value;
                this.RaisePropertyChanged("CbGainSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public WhiteBalance20Extension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum WhiteBalanceMode {
        
        /// <remarks/>
        AUTO,
        
        /// <remarks/>
        MANUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WideDynamicRange20 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WideDynamicMode modeField;
        
        private float levelField;
        
        private bool levelFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WideDynamicMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified {
            get {
                return this.levelFieldSpecified;
            }
            set {
                this.levelFieldSpecified = value;
                this.RaisePropertyChanged("LevelSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum WideDynamicMode {
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        ON,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FocusConfiguration20Extension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FocusConfiguration20 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AutoFocusMode autoFocusModeField;
        
        private float defaultSpeedField;
        
        private bool defaultSpeedFieldSpecified;
        
        private float nearLimitField;
        
        private bool nearLimitFieldSpecified;
        
        private float farLimitField;
        
        private bool farLimitFieldSpecified;
        
        private FocusConfiguration20Extension extensionField;
        
        private string[] aFModeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AutoFocusMode AutoFocusMode {
            get {
                return this.autoFocusModeField;
            }
            set {
                this.autoFocusModeField = value;
                this.RaisePropertyChanged("AutoFocusMode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float DefaultSpeed {
            get {
                return this.defaultSpeedField;
            }
            set {
                this.defaultSpeedField = value;
                this.RaisePropertyChanged("DefaultSpeed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultSpeedSpecified {
            get {
                return this.defaultSpeedFieldSpecified;
            }
            set {
                this.defaultSpeedFieldSpecified = value;
                this.RaisePropertyChanged("DefaultSpeedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float NearLimit {
            get {
                return this.nearLimitField;
            }
            set {
                this.nearLimitField = value;
                this.RaisePropertyChanged("NearLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NearLimitSpecified {
            get {
                return this.nearLimitFieldSpecified;
            }
            set {
                this.nearLimitFieldSpecified = value;
                this.RaisePropertyChanged("NearLimitSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float FarLimit {
            get {
                return this.farLimitField;
            }
            set {
                this.farLimitField = value;
                this.RaisePropertyChanged("FarLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FarLimitSpecified {
            get {
                return this.farLimitFieldSpecified;
            }
            set {
                this.farLimitFieldSpecified = value;
                this.RaisePropertyChanged("FarLimitSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public FocusConfiguration20Extension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] AFMode {
            get {
                return this.aFModeField;
            }
            set {
                this.aFModeField = value;
                this.RaisePropertyChanged("AFMode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum AutoFocusMode {
        
        /// <remarks/>
        AUTO,
        
        /// <remarks/>
        MANUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Exposure20 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ExposureMode modeField;
        
        private ExposurePriority priorityField;
        
        private bool priorityFieldSpecified;
        
        private Rectangle windowField;
        
        private float minExposureTimeField;
        
        private bool minExposureTimeFieldSpecified;
        
        private float maxExposureTimeField;
        
        private bool maxExposureTimeFieldSpecified;
        
        private float minGainField;
        
        private bool minGainFieldSpecified;
        
        private float maxGainField;
        
        private bool maxGainFieldSpecified;
        
        private float minIrisField;
        
        private bool minIrisFieldSpecified;
        
        private float maxIrisField;
        
        private bool maxIrisFieldSpecified;
        
        private float exposureTimeField;
        
        private bool exposureTimeFieldSpecified;
        
        private float gainField;
        
        private bool gainFieldSpecified;
        
        private float irisField;
        
        private bool irisFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ExposureMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ExposurePriority Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
                this.RaisePropertyChanged("PrioritySpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Rectangle Window {
            get {
                return this.windowField;
            }
            set {
                this.windowField = value;
                this.RaisePropertyChanged("Window");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float MinExposureTime {
            get {
                return this.minExposureTimeField;
            }
            set {
                this.minExposureTimeField = value;
                this.RaisePropertyChanged("MinExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinExposureTimeSpecified {
            get {
                return this.minExposureTimeFieldSpecified;
            }
            set {
                this.minExposureTimeFieldSpecified = value;
                this.RaisePropertyChanged("MinExposureTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public float MaxExposureTime {
            get {
                return this.maxExposureTimeField;
            }
            set {
                this.maxExposureTimeField = value;
                this.RaisePropertyChanged("MaxExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxExposureTimeSpecified {
            get {
                return this.maxExposureTimeFieldSpecified;
            }
            set {
                this.maxExposureTimeFieldSpecified = value;
                this.RaisePropertyChanged("MaxExposureTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public float MinGain {
            get {
                return this.minGainField;
            }
            set {
                this.minGainField = value;
                this.RaisePropertyChanged("MinGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinGainSpecified {
            get {
                return this.minGainFieldSpecified;
            }
            set {
                this.minGainFieldSpecified = value;
                this.RaisePropertyChanged("MinGainSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public float MaxGain {
            get {
                return this.maxGainField;
            }
            set {
                this.maxGainField = value;
                this.RaisePropertyChanged("MaxGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxGainSpecified {
            get {
                return this.maxGainFieldSpecified;
            }
            set {
                this.maxGainFieldSpecified = value;
                this.RaisePropertyChanged("MaxGainSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public float MinIris {
            get {
                return this.minIrisField;
            }
            set {
                this.minIrisField = value;
                this.RaisePropertyChanged("MinIris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinIrisSpecified {
            get {
                return this.minIrisFieldSpecified;
            }
            set {
                this.minIrisFieldSpecified = value;
                this.RaisePropertyChanged("MinIrisSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public float MaxIris {
            get {
                return this.maxIrisField;
            }
            set {
                this.maxIrisField = value;
                this.RaisePropertyChanged("MaxIris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxIrisSpecified {
            get {
                return this.maxIrisFieldSpecified;
            }
            set {
                this.maxIrisFieldSpecified = value;
                this.RaisePropertyChanged("MaxIrisSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public float ExposureTime {
            get {
                return this.exposureTimeField;
            }
            set {
                this.exposureTimeField = value;
                this.RaisePropertyChanged("ExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExposureTimeSpecified {
            get {
                return this.exposureTimeFieldSpecified;
            }
            set {
                this.exposureTimeFieldSpecified = value;
                this.RaisePropertyChanged("ExposureTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public float Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
                this.RaisePropertyChanged("Gain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GainSpecified {
            get {
                return this.gainFieldSpecified;
            }
            set {
                this.gainFieldSpecified = value;
                this.RaisePropertyChanged("GainSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public float Iris {
            get {
                return this.irisField;
            }
            set {
                this.irisField = value;
                this.RaisePropertyChanged("Iris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IrisSpecified {
            get {
                return this.irisFieldSpecified;
            }
            set {
                this.irisFieldSpecified = value;
                this.RaisePropertyChanged("IrisSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum ExposureMode {
        
        /// <remarks/>
        AUTO,
        
        /// <remarks/>
        MANUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum ExposurePriority {
        
        /// <remarks/>
        LowNoise,
        
        /// <remarks/>
        FrameRate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class BacklightCompensation20 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BacklightCompensationMode modeField;
        
        private float levelField;
        
        private bool levelFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BacklightCompensationMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified {
            get {
                return this.levelFieldSpecified;
            }
            set {
                this.levelFieldSpecified = value;
                this.RaisePropertyChanged("LevelSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum BacklightCompensationMode {
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        ON,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettings20 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BacklightCompensation20 backlightCompensationField;
        
        private float brightnessField;
        
        private bool brightnessFieldSpecified;
        
        private float colorSaturationField;
        
        private bool colorSaturationFieldSpecified;
        
        private float contrastField;
        
        private bool contrastFieldSpecified;
        
        private Exposure20 exposureField;
        
        private FocusConfiguration20 focusField;
        
        private IrCutFilterMode irCutFilterField;
        
        private bool irCutFilterFieldSpecified;
        
        private float sharpnessField;
        
        private bool sharpnessFieldSpecified;
        
        private WideDynamicRange20 wideDynamicRangeField;
        
        private WhiteBalance20 whiteBalanceField;
        
        private ImagingSettingsExtension20 extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BacklightCompensation20 BacklightCompensation {
            get {
                return this.backlightCompensationField;
            }
            set {
                this.backlightCompensationField = value;
                this.RaisePropertyChanged("BacklightCompensation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Brightness {
            get {
                return this.brightnessField;
            }
            set {
                this.brightnessField = value;
                this.RaisePropertyChanged("Brightness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BrightnessSpecified {
            get {
                return this.brightnessFieldSpecified;
            }
            set {
                this.brightnessFieldSpecified = value;
                this.RaisePropertyChanged("BrightnessSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float ColorSaturation {
            get {
                return this.colorSaturationField;
            }
            set {
                this.colorSaturationField = value;
                this.RaisePropertyChanged("ColorSaturation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColorSaturationSpecified {
            get {
                return this.colorSaturationFieldSpecified;
            }
            set {
                this.colorSaturationFieldSpecified = value;
                this.RaisePropertyChanged("ColorSaturationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float Contrast {
            get {
                return this.contrastField;
            }
            set {
                this.contrastField = value;
                this.RaisePropertyChanged("Contrast");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContrastSpecified {
            get {
                return this.contrastFieldSpecified;
            }
            set {
                this.contrastFieldSpecified = value;
                this.RaisePropertyChanged("ContrastSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Exposure20 Exposure {
            get {
                return this.exposureField;
            }
            set {
                this.exposureField = value;
                this.RaisePropertyChanged("Exposure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public FocusConfiguration20 Focus {
            get {
                return this.focusField;
            }
            set {
                this.focusField = value;
                this.RaisePropertyChanged("Focus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public IrCutFilterMode IrCutFilter {
            get {
                return this.irCutFilterField;
            }
            set {
                this.irCutFilterField = value;
                this.RaisePropertyChanged("IrCutFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IrCutFilterSpecified {
            get {
                return this.irCutFilterFieldSpecified;
            }
            set {
                this.irCutFilterFieldSpecified = value;
                this.RaisePropertyChanged("IrCutFilterSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public float Sharpness {
            get {
                return this.sharpnessField;
            }
            set {
                this.sharpnessField = value;
                this.RaisePropertyChanged("Sharpness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharpnessSpecified {
            get {
                return this.sharpnessFieldSpecified;
            }
            set {
                this.sharpnessFieldSpecified = value;
                this.RaisePropertyChanged("SharpnessSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public WideDynamicRange20 WideDynamicRange {
            get {
                return this.wideDynamicRangeField;
            }
            set {
                this.wideDynamicRangeField = value;
                this.RaisePropertyChanged("WideDynamicRange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public WhiteBalance20 WhiteBalance {
            get {
                return this.whiteBalanceField;
            }
            set {
                this.whiteBalanceField = value;
                this.RaisePropertyChanged("WhiteBalance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public ImagingSettingsExtension20 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum IrCutFilterMode {
        
        /// <remarks/>
        ON,
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        AUTO,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class VideoSourceExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private ImagingSettings20 imagingField;
        
        private VideoSourceExtension2 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ImagingSettings20 Imaging {
            get {
                return this.imagingField;
            }
            set {
                this.imagingField = value;
                this.RaisePropertyChanged("Imaging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public VideoSourceExtension2 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettingsExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WhiteBalance : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WhiteBalanceMode modeField;
        
        private float crGainField;
        
        private float cbGainField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WhiteBalanceMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float CrGain {
            get {
                return this.crGainField;
            }
            set {
                this.crGainField = value;
                this.RaisePropertyChanged("CrGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float CbGain {
            get {
                return this.cbGainField;
            }
            set {
                this.cbGainField = value;
                this.RaisePropertyChanged("CbGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WideDynamicRange : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WideDynamicMode modeField;
        
        private float levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WideDynamicMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FocusConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AutoFocusMode autoFocusModeField;
        
        private float defaultSpeedField;
        
        private float nearLimitField;
        
        private float farLimitField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AutoFocusMode AutoFocusMode {
            get {
                return this.autoFocusModeField;
            }
            set {
                this.autoFocusModeField = value;
                this.RaisePropertyChanged("AutoFocusMode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float DefaultSpeed {
            get {
                return this.defaultSpeedField;
            }
            set {
                this.defaultSpeedField = value;
                this.RaisePropertyChanged("DefaultSpeed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float NearLimit {
            get {
                return this.nearLimitField;
            }
            set {
                this.nearLimitField = value;
                this.RaisePropertyChanged("NearLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float FarLimit {
            get {
                return this.farLimitField;
            }
            set {
                this.farLimitField = value;
                this.RaisePropertyChanged("FarLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Exposure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ExposureMode modeField;
        
        private ExposurePriority priorityField;
        
        private Rectangle windowField;
        
        private float minExposureTimeField;
        
        private float maxExposureTimeField;
        
        private float minGainField;
        
        private float maxGainField;
        
        private float minIrisField;
        
        private float maxIrisField;
        
        private float exposureTimeField;
        
        private float gainField;
        
        private float irisField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ExposureMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ExposurePriority Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Rectangle Window {
            get {
                return this.windowField;
            }
            set {
                this.windowField = value;
                this.RaisePropertyChanged("Window");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float MinExposureTime {
            get {
                return this.minExposureTimeField;
            }
            set {
                this.minExposureTimeField = value;
                this.RaisePropertyChanged("MinExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public float MaxExposureTime {
            get {
                return this.maxExposureTimeField;
            }
            set {
                this.maxExposureTimeField = value;
                this.RaisePropertyChanged("MaxExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public float MinGain {
            get {
                return this.minGainField;
            }
            set {
                this.minGainField = value;
                this.RaisePropertyChanged("MinGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public float MaxGain {
            get {
                return this.maxGainField;
            }
            set {
                this.maxGainField = value;
                this.RaisePropertyChanged("MaxGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public float MinIris {
            get {
                return this.minIrisField;
            }
            set {
                this.minIrisField = value;
                this.RaisePropertyChanged("MinIris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public float MaxIris {
            get {
                return this.maxIrisField;
            }
            set {
                this.maxIrisField = value;
                this.RaisePropertyChanged("MaxIris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public float ExposureTime {
            get {
                return this.exposureTimeField;
            }
            set {
                this.exposureTimeField = value;
                this.RaisePropertyChanged("ExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public float Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
                this.RaisePropertyChanged("Gain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public float Iris {
            get {
                return this.irisField;
            }
            set {
                this.irisField = value;
                this.RaisePropertyChanged("Iris");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class BacklightCompensation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BacklightCompensationMode modeField;
        
        private float levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BacklightCompensationMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BacklightCompensation backlightCompensationField;
        
        private float brightnessField;
        
        private bool brightnessFieldSpecified;
        
        private float colorSaturationField;
        
        private bool colorSaturationFieldSpecified;
        
        private float contrastField;
        
        private bool contrastFieldSpecified;
        
        private Exposure exposureField;
        
        private FocusConfiguration focusField;
        
        private IrCutFilterMode irCutFilterField;
        
        private bool irCutFilterFieldSpecified;
        
        private float sharpnessField;
        
        private bool sharpnessFieldSpecified;
        
        private WideDynamicRange wideDynamicRangeField;
        
        private WhiteBalance whiteBalanceField;
        
        private ImagingSettingsExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BacklightCompensation BacklightCompensation {
            get {
                return this.backlightCompensationField;
            }
            set {
                this.backlightCompensationField = value;
                this.RaisePropertyChanged("BacklightCompensation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Brightness {
            get {
                return this.brightnessField;
            }
            set {
                this.brightnessField = value;
                this.RaisePropertyChanged("Brightness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BrightnessSpecified {
            get {
                return this.brightnessFieldSpecified;
            }
            set {
                this.brightnessFieldSpecified = value;
                this.RaisePropertyChanged("BrightnessSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float ColorSaturation {
            get {
                return this.colorSaturationField;
            }
            set {
                this.colorSaturationField = value;
                this.RaisePropertyChanged("ColorSaturation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColorSaturationSpecified {
            get {
                return this.colorSaturationFieldSpecified;
            }
            set {
                this.colorSaturationFieldSpecified = value;
                this.RaisePropertyChanged("ColorSaturationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float Contrast {
            get {
                return this.contrastField;
            }
            set {
                this.contrastField = value;
                this.RaisePropertyChanged("Contrast");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContrastSpecified {
            get {
                return this.contrastFieldSpecified;
            }
            set {
                this.contrastFieldSpecified = value;
                this.RaisePropertyChanged("ContrastSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Exposure Exposure {
            get {
                return this.exposureField;
            }
            set {
                this.exposureField = value;
                this.RaisePropertyChanged("Exposure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public FocusConfiguration Focus {
            get {
                return this.focusField;
            }
            set {
                this.focusField = value;
                this.RaisePropertyChanged("Focus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public IrCutFilterMode IrCutFilter {
            get {
                return this.irCutFilterField;
            }
            set {
                this.irCutFilterField = value;
                this.RaisePropertyChanged("IrCutFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IrCutFilterSpecified {
            get {
                return this.irCutFilterFieldSpecified;
            }
            set {
                this.irCutFilterFieldSpecified = value;
                this.RaisePropertyChanged("IrCutFilterSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public float Sharpness {
            get {
                return this.sharpnessField;
            }
            set {
                this.sharpnessField = value;
                this.RaisePropertyChanged("Sharpness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharpnessSpecified {
            get {
                return this.sharpnessFieldSpecified;
            }
            set {
                this.sharpnessFieldSpecified = value;
                this.RaisePropertyChanged("SharpnessSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public WideDynamicRange WideDynamicRange {
            get {
                return this.wideDynamicRangeField;
            }
            set {
                this.wideDynamicRangeField = value;
                this.RaisePropertyChanged("WideDynamicRange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public WhiteBalance WhiteBalance {
            get {
                return this.whiteBalanceField;
            }
            set {
                this.whiteBalanceField = value;
                this.RaisePropertyChanged("WhiteBalance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public ImagingSettingsExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class VideoResolution : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int widthField;
        
        private int heightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
                this.RaisePropertyChanged("Width");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
                this.RaisePropertyChanged("Height");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class UserCredential : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private string passwordField;
        
        private UserCredentialExtension extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public UserCredentialExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class UserCredentialExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class StorageConfigurationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string localPathField;
        
        private string storageUriField;
        
        private UserCredential userField;
        
        private StorageConfigurationDataExtension extensionField;
        
        private string typeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string LocalPath {
            get {
                return this.localPathField;
            }
            set {
                this.localPathField = value;
                this.RaisePropertyChanged("LocalPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=1)]
        public string StorageUri {
            get {
                return this.storageUriField;
            }
            set {
                this.storageUriField = value;
                this.RaisePropertyChanged("StorageUri");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public UserCredential User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
                this.RaisePropertyChanged("User");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public StorageConfigurationDataExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class StorageConfigurationDataExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OSDConfiguration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PTZNode))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DigitalInput))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RelayOutput))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NetworkInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AudioOutput))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VideoOutput))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AudioSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VideoSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StorageConfiguration))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DeviceEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
                this.RaisePropertyChanged("token");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OSDConfiguration : DeviceEntity {
        
        private OSDReference videoSourceConfigurationTokenField;
        
        private OSDType typeField;
        
        private OSDPosConfiguration positionField;
        
        private OSDTextConfiguration textStringField;
        
        private OSDImgConfiguration imageField;
        
        private OSDConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public OSDReference VideoSourceConfigurationToken {
            get {
                return this.videoSourceConfigurationTokenField;
            }
            set {
                this.videoSourceConfigurationTokenField = value;
                this.RaisePropertyChanged("VideoSourceConfigurationToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public OSDType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public OSDPosConfiguration Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("Position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public OSDTextConfiguration TextString {
            get {
                return this.textStringField;
            }
            set {
                this.textStringField = value;
                this.RaisePropertyChanged("TextString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public OSDImgConfiguration Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
                this.RaisePropertyChanged("Image");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public OSDConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum OSDType {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Image,
        
        /// <remarks/>
        Extended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZNode : DeviceEntity {
        
        private string nameField;
        
        private PTZSpaces supportedPTZSpacesField;
        
        private int maximumNumberOfPresetsField;
        
        private bool homeSupportedField;
        
        private string[] auxiliaryCommandsField;
        
        private PTZNodeExtension extensionField;
        
        private bool fixedHomePositionField;
        
        private bool fixedHomePositionFieldSpecified;
        
        private bool geoMoveField;
        
        private bool geoMoveFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public PTZSpaces SupportedPTZSpaces {
            get {
                return this.supportedPTZSpacesField;
            }
            set {
                this.supportedPTZSpacesField = value;
                this.RaisePropertyChanged("SupportedPTZSpaces");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int MaximumNumberOfPresets {
            get {
                return this.maximumNumberOfPresetsField;
            }
            set {
                this.maximumNumberOfPresetsField = value;
                this.RaisePropertyChanged("MaximumNumberOfPresets");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool HomeSupported {
            get {
                return this.homeSupportedField;
            }
            set {
                this.homeSupportedField = value;
                this.RaisePropertyChanged("HomeSupported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AuxiliaryCommands", Order=4)]
        public string[] AuxiliaryCommands {
            get {
                return this.auxiliaryCommandsField;
            }
            set {
                this.auxiliaryCommandsField = value;
                this.RaisePropertyChanged("AuxiliaryCommands");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public PTZNodeExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool FixedHomePosition {
            get {
                return this.fixedHomePositionField;
            }
            set {
                this.fixedHomePositionField = value;
                this.RaisePropertyChanged("FixedHomePosition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedHomePositionSpecified {
            get {
                return this.fixedHomePositionFieldSpecified;
            }
            set {
                this.fixedHomePositionFieldSpecified = value;
                this.RaisePropertyChanged("FixedHomePositionSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool GeoMove {
            get {
                return this.geoMoveField;
            }
            set {
                this.geoMoveField = value;
                this.RaisePropertyChanged("GeoMove");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeoMoveSpecified {
            get {
                return this.geoMoveFieldSpecified;
            }
            set {
                this.geoMoveFieldSpecified = value;
                this.RaisePropertyChanged("GeoMoveSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DigitalInput : DeviceEntity {
        
        private System.Xml.XmlElement[] anyField;
        
        private DigitalIdleState idleStateField;
        
        private bool idleStateFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DigitalIdleState IdleState {
            get {
                return this.idleStateField;
            }
            set {
                this.idleStateField = value;
                this.RaisePropertyChanged("IdleState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdleStateSpecified {
            get {
                return this.idleStateFieldSpecified;
            }
            set {
                this.idleStateFieldSpecified = value;
                this.RaisePropertyChanged("IdleStateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum DigitalIdleState {
        
        /// <remarks/>
        closed,
        
        /// <remarks/>
        open,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RelayOutput : DeviceEntity {
        
        private RelayOutputSettings propertiesField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public RelayOutputSettings Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
                this.RaisePropertyChanged("Properties");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterface : DeviceEntity {
        
        private bool enabledField;
        
        private NetworkInterfaceInfo infoField;
        
        private NetworkInterfaceLink linkField;
        
        private IPv4NetworkInterface iPv4Field;
        
        private IPv6NetworkInterface iPv6Field;
        
        private NetworkInterfaceExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public NetworkInterfaceInfo Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
                this.RaisePropertyChanged("Info");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public NetworkInterfaceLink Link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
                this.RaisePropertyChanged("Link");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IPv4NetworkInterface IPv4 {
            get {
                return this.iPv4Field;
            }
            set {
                this.iPv4Field = value;
                this.RaisePropertyChanged("IPv4");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public IPv6NetworkInterface IPv6 {
            get {
                return this.iPv6Field;
            }
            set {
                this.iPv6Field = value;
                this.RaisePropertyChanged("IPv6");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public NetworkInterfaceExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AudioOutput : DeviceEntity {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class VideoOutput : DeviceEntity {
        
        private Layout layoutField;
        
        private VideoResolution resolutionField;
        
        private float refreshRateField;
        
        private bool refreshRateFieldSpecified;
        
        private float aspectRatioField;
        
        private bool aspectRatioFieldSpecified;
        
        private VideoOutputExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Layout Layout {
            get {
                return this.layoutField;
            }
            set {
                this.layoutField = value;
                this.RaisePropertyChanged("Layout");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public VideoResolution Resolution {
            get {
                return this.resolutionField;
            }
            set {
                this.resolutionField = value;
                this.RaisePropertyChanged("Resolution");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float RefreshRate {
            get {
                return this.refreshRateField;
            }
            set {
                this.refreshRateField = value;
                this.RaisePropertyChanged("RefreshRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefreshRateSpecified {
            get {
                return this.refreshRateFieldSpecified;
            }
            set {
                this.refreshRateFieldSpecified = value;
                this.RaisePropertyChanged("RefreshRateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float AspectRatio {
            get {
                return this.aspectRatioField;
            }
            set {
                this.aspectRatioField = value;
                this.RaisePropertyChanged("AspectRatio");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AspectRatioSpecified {
            get {
                return this.aspectRatioFieldSpecified;
            }
            set {
                this.aspectRatioFieldSpecified = value;
                this.RaisePropertyChanged("AspectRatioSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public VideoOutputExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AudioSource : DeviceEntity {
        
        private int channelsField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Channels {
            get {
                return this.channelsField;
            }
            set {
                this.channelsField = value;
                this.RaisePropertyChanged("Channels");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class VideoSource : DeviceEntity {
        
        private float framerateField;
        
        private VideoResolution resolutionField;
        
        private ImagingSettings imagingField;
        
        private VideoSourceExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Framerate {
            get {
                return this.framerateField;
            }
            set {
                this.framerateField = value;
                this.RaisePropertyChanged("Framerate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public VideoResolution Resolution {
            get {
                return this.resolutionField;
            }
            set {
                this.resolutionField = value;
                this.RaisePropertyChanged("Resolution");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ImagingSettings Imaging {
            get {
                return this.imagingField;
            }
            set {
                this.imagingField = value;
                this.RaisePropertyChanged("Imaging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public VideoSourceExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class StorageConfiguration : DeviceEntity {
        
        private StorageConfigurationData dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public StorageConfigurationData Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("Data");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DynamicDNSInformationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DynamicDNSInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DynamicDNSType typeField;
        
        private string nameField;
        
        private string tTLField;
        
        private DynamicDNSInformationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DynamicDNSType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=2)]
        public string TTL {
            get {
                return this.tTLField;
            }
            set {
                this.tTLField = value;
                this.RaisePropertyChanged("TTL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public DynamicDNSInformationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum DynamicDNSType {
        
        /// <remarks/>
        NoUpdate,
        
        /// <remarks/>
        ClientUpdates,
        
        /// <remarks/>
        ServerUpdates,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NTPInformationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NTPInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool fromDHCPField;
        
        private NetworkHost[] nTPFromDHCPField;
        
        private NetworkHost[] nTPManualField;
        
        private NTPInformationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool FromDHCP {
            get {
                return this.fromDHCPField;
            }
            set {
                this.fromDHCPField = value;
                this.RaisePropertyChanged("FromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NTPFromDHCP", Order=1)]
        public NetworkHost[] NTPFromDHCP {
            get {
                return this.nTPFromDHCPField;
            }
            set {
                this.nTPFromDHCPField = value;
                this.RaisePropertyChanged("NTPFromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NTPManual", Order=2)]
        public NetworkHost[] NTPManual {
            get {
                return this.nTPManualField;
            }
            set {
                this.nTPManualField = value;
                this.RaisePropertyChanged("NTPManual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public NTPInformationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkHost : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NetworkHostType typeField;
        
        private string iPv4AddressField;
        
        private string iPv6AddressField;
        
        private string dNSnameField;
        
        private NetworkHostExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public NetworkHostType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=1)]
        public string IPv4Address {
            get {
                return this.iPv4AddressField;
            }
            set {
                this.iPv4AddressField = value;
                this.RaisePropertyChanged("IPv4Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=2)]
        public string IPv6Address {
            get {
                return this.iPv6AddressField;
            }
            set {
                this.iPv6AddressField = value;
                this.RaisePropertyChanged("IPv6Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=3)]
        public string DNSname {
            get {
                return this.dNSnameField;
            }
            set {
                this.dNSnameField = value;
                this.RaisePropertyChanged("DNSname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public NetworkHostExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum NetworkHostType {
        
        /// <remarks/>
        IPv4,
        
        /// <remarks/>
        IPv6,
        
        /// <remarks/>
        DNS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkHostExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DNSInformationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPAddress : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IPType typeField;
        
        private string iPv4AddressField;
        
        private string iPv6AddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public IPType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=1)]
        public string IPv4Address {
            get {
                return this.iPv4AddressField;
            }
            set {
                this.iPv4AddressField = value;
                this.RaisePropertyChanged("IPv4Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=2)]
        public string IPv6Address {
            get {
                return this.iPv6AddressField;
            }
            set {
                this.iPv6AddressField = value;
                this.RaisePropertyChanged("IPv6Address");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum IPType {
        
        /// <remarks/>
        IPv4,
        
        /// <remarks/>
        IPv6,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DNSInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool fromDHCPField;
        
        private string[] searchDomainField;
        
        private IPAddress[] dNSFromDHCPField;
        
        private IPAddress[] dNSManualField;
        
        private DNSInformationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool FromDHCP {
            get {
                return this.fromDHCPField;
            }
            set {
                this.fromDHCPField = value;
                this.RaisePropertyChanged("FromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SearchDomain", DataType="token", Order=1)]
        public string[] SearchDomain {
            get {
                return this.searchDomainField;
            }
            set {
                this.searchDomainField = value;
                this.RaisePropertyChanged("SearchDomain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DNSFromDHCP", Order=2)]
        public IPAddress[] DNSFromDHCP {
            get {
                return this.dNSFromDHCPField;
            }
            set {
                this.dNSFromDHCPField = value;
                this.RaisePropertyChanged("DNSFromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DNSManual", Order=3)]
        public IPAddress[] DNSManual {
            get {
                return this.dNSManualField;
            }
            set {
                this.dNSManualField = value;
                this.RaisePropertyChanged("DNSManual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public DNSInformationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class HostnameInformationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class HostnameInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool fromDHCPField;
        
        private string nameField;
        
        private HostnameInformationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool FromDHCP {
            get {
                return this.fromDHCPField;
            }
            set {
                this.fromDHCPField = value;
                this.RaisePropertyChanged("FromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public HostnameInformationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class CapabilitiesExtension2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AnalyticsDeviceExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AnalyticsDeviceCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private bool ruleSupportField;
        
        private bool ruleSupportFieldSpecified;
        
        private AnalyticsDeviceExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool RuleSupport {
            get {
                return this.ruleSupportField;
            }
            set {
                this.ruleSupportField = value;
                this.RaisePropertyChanged("RuleSupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RuleSupportSpecified {
            get {
                return this.ruleSupportFieldSpecified;
            }
            set {
                this.ruleSupportFieldSpecified = value;
                this.RaisePropertyChanged("RuleSupportSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public AnalyticsDeviceExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ReceiverCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private bool rTP_MulticastField;
        
        private bool rTP_TCPField;
        
        private bool rTP_RTSP_TCPField;
        
        private int supportedReceiversField;
        
        private int maximumRTSPURILengthField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool RTP_Multicast {
            get {
                return this.rTP_MulticastField;
            }
            set {
                this.rTP_MulticastField = value;
                this.RaisePropertyChanged("RTP_Multicast");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool RTP_TCP {
            get {
                return this.rTP_TCPField;
            }
            set {
                this.rTP_TCPField = value;
                this.RaisePropertyChanged("RTP_TCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool RTP_RTSP_TCP {
            get {
                return this.rTP_RTSP_TCPField;
            }
            set {
                this.rTP_RTSP_TCPField = value;
                this.RaisePropertyChanged("RTP_RTSP_TCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int SupportedReceivers {
            get {
                return this.supportedReceiversField;
            }
            set {
                this.supportedReceiversField = value;
                this.RaisePropertyChanged("SupportedReceivers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int MaximumRTSPURILength {
            get {
                return this.maximumRTSPURILengthField;
            }
            set {
                this.maximumRTSPURILengthField = value;
                this.RaisePropertyChanged("MaximumRTSPURILength");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=6)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ReplayCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SearchCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private bool metadataSearchField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool MetadataSearch {
            get {
                return this.metadataSearchField;
            }
            set {
                this.metadataSearchField = value;
                this.RaisePropertyChanged("MetadataSearch");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RecordingCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private bool receiverSourceField;
        
        private bool mediaProfileSourceField;
        
        private bool dynamicRecordingsField;
        
        private bool dynamicTracksField;
        
        private int maxStringLengthField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool ReceiverSource {
            get {
                return this.receiverSourceField;
            }
            set {
                this.receiverSourceField = value;
                this.RaisePropertyChanged("ReceiverSource");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool MediaProfileSource {
            get {
                return this.mediaProfileSourceField;
            }
            set {
                this.mediaProfileSourceField = value;
                this.RaisePropertyChanged("MediaProfileSource");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool DynamicRecordings {
            get {
                return this.dynamicRecordingsField;
            }
            set {
                this.dynamicRecordingsField = value;
                this.RaisePropertyChanged("DynamicRecordings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool DynamicTracks {
            get {
                return this.dynamicTracksField;
            }
            set {
                this.dynamicTracksField = value;
                this.RaisePropertyChanged("DynamicTracks");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int MaxStringLength {
            get {
                return this.maxStringLengthField;
            }
            set {
                this.maxStringLengthField = value;
                this.RaisePropertyChanged("MaxStringLength");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=6)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DisplayCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private bool fixedLayoutField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool FixedLayout {
            get {
                return this.fixedLayoutField;
            }
            set {
                this.fixedLayoutField = value;
                this.RaisePropertyChanged("FixedLayout");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DeviceIOCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private int videoSourcesField;
        
        private int videoOutputsField;
        
        private int audioSourcesField;
        
        private int audioOutputsField;
        
        private int relayOutputsField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int VideoSources {
            get {
                return this.videoSourcesField;
            }
            set {
                this.videoSourcesField = value;
                this.RaisePropertyChanged("VideoSources");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int VideoOutputs {
            get {
                return this.videoOutputsField;
            }
            set {
                this.videoOutputsField = value;
                this.RaisePropertyChanged("VideoOutputs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int AudioSources {
            get {
                return this.audioSourcesField;
            }
            set {
                this.audioSourcesField = value;
                this.RaisePropertyChanged("AudioSources");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int AudioOutputs {
            get {
                return this.audioOutputsField;
            }
            set {
                this.audioOutputsField = value;
                this.RaisePropertyChanged("AudioOutputs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int RelayOutputs {
            get {
                return this.relayOutputsField;
            }
            set {
                this.relayOutputsField = value;
                this.RaisePropertyChanged("RelayOutputs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=6)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class CapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private DeviceIOCapabilities deviceIOField;
        
        private DisplayCapabilities displayField;
        
        private RecordingCapabilities recordingField;
        
        private SearchCapabilities searchField;
        
        private ReplayCapabilities replayField;
        
        private ReceiverCapabilities receiverField;
        
        private AnalyticsDeviceCapabilities analyticsDeviceField;
        
        private CapabilitiesExtension2 extensionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DeviceIOCapabilities DeviceIO {
            get {
                return this.deviceIOField;
            }
            set {
                this.deviceIOField = value;
                this.RaisePropertyChanged("DeviceIO");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public DisplayCapabilities Display {
            get {
                return this.displayField;
            }
            set {
                this.displayField = value;
                this.RaisePropertyChanged("Display");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public RecordingCapabilities Recording {
            get {
                return this.recordingField;
            }
            set {
                this.recordingField = value;
                this.RaisePropertyChanged("Recording");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public SearchCapabilities Search {
            get {
                return this.searchField;
            }
            set {
                this.searchField = value;
                this.RaisePropertyChanged("Search");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public ReplayCapabilities Replay {
            get {
                return this.replayField;
            }
            set {
                this.replayField = value;
                this.RaisePropertyChanged("Replay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public ReceiverCapabilities Receiver {
            get {
                return this.receiverField;
            }
            set {
                this.receiverField = value;
                this.RaisePropertyChanged("Receiver");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public AnalyticsDeviceCapabilities AnalyticsDevice {
            get {
                return this.analyticsDeviceField;
            }
            set {
                this.analyticsDeviceField = value;
                this.RaisePropertyChanged("AnalyticsDevice");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public CapabilitiesExtension2 Extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
                this.RaisePropertyChanged("Extensions");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ProfileCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int maximumNumberOfProfilesField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int MaximumNumberOfProfiles {
            get {
                return this.maximumNumberOfProfilesField;
            }
            set {
                this.maximumNumberOfProfilesField = value;
                this.RaisePropertyChanged("MaximumNumberOfProfiles");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class MediaCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ProfileCapabilities profileCapabilitiesField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ProfileCapabilities ProfileCapabilities {
            get {
                return this.profileCapabilitiesField;
            }
            set {
                this.profileCapabilitiesField = value;
                this.RaisePropertyChanged("ProfileCapabilities");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RealTimeStreamingCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RealTimeStreamingCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool rTPMulticastField;
        
        private bool rTPMulticastFieldSpecified;
        
        private bool rTP_TCPField;
        
        private bool rTP_TCPFieldSpecified;
        
        private bool rTP_RTSP_TCPField;
        
        private bool rTP_RTSP_TCPFieldSpecified;
        
        private RealTimeStreamingCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool RTPMulticast {
            get {
                return this.rTPMulticastField;
            }
            set {
                this.rTPMulticastField = value;
                this.RaisePropertyChanged("RTPMulticast");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RTPMulticastSpecified {
            get {
                return this.rTPMulticastFieldSpecified;
            }
            set {
                this.rTPMulticastFieldSpecified = value;
                this.RaisePropertyChanged("RTPMulticastSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool RTP_TCP {
            get {
                return this.rTP_TCPField;
            }
            set {
                this.rTP_TCPField = value;
                this.RaisePropertyChanged("RTP_TCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RTP_TCPSpecified {
            get {
                return this.rTP_TCPFieldSpecified;
            }
            set {
                this.rTP_TCPFieldSpecified = value;
                this.RaisePropertyChanged("RTP_TCPSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool RTP_RTSP_TCP {
            get {
                return this.rTP_RTSP_TCPField;
            }
            set {
                this.rTP_RTSP_TCPField = value;
                this.RaisePropertyChanged("RTP_RTSP_TCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RTP_RTSP_TCPSpecified {
            get {
                return this.rTP_RTSP_TCPFieldSpecified;
            }
            set {
                this.rTP_RTSP_TCPFieldSpecified = value;
                this.RaisePropertyChanged("RTP_RTSP_TCPSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public RealTimeStreamingCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class MediaCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private RealTimeStreamingCapabilities streamingCapabilitiesField;
        
        private System.Xml.XmlElement[] anyField;
        
        private MediaCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RealTimeStreamingCapabilities StreamingCapabilities {
            get {
                return this.streamingCapabilitiesField;
            }
            set {
                this.streamingCapabilitiesField = value;
                this.RaisePropertyChanged("StreamingCapabilities");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public MediaCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class EventCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private bool wSSubscriptionPolicySupportField;
        
        private bool wSPullPointSupportField;
        
        private bool wSPausableSubscriptionManagerInterfaceSupportField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool WSSubscriptionPolicySupport {
            get {
                return this.wSSubscriptionPolicySupportField;
            }
            set {
                this.wSSubscriptionPolicySupportField = value;
                this.RaisePropertyChanged("WSSubscriptionPolicySupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool WSPullPointSupport {
            get {
                return this.wSPullPointSupportField;
            }
            set {
                this.wSPullPointSupportField = value;
                this.RaisePropertyChanged("WSPullPointSupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool WSPausableSubscriptionManagerInterfaceSupport {
            get {
                return this.wSPausableSubscriptionManagerInterfaceSupportField;
            }
            set {
                this.wSPausableSubscriptionManagerInterfaceSupportField = value;
                this.RaisePropertyChanged("WSPausableSubscriptionManagerInterfaceSupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DeviceCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SecurityCapabilitiesExtension2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool dot1XField;
        
        private int[] supportedEAPMethodField;
        
        private bool remoteUserHandlingField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Dot1X {
            get {
                return this.dot1XField;
            }
            set {
                this.dot1XField = value;
                this.RaisePropertyChanged("Dot1X");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SupportedEAPMethod", Order=1)]
        public int[] SupportedEAPMethod {
            get {
                return this.supportedEAPMethodField;
            }
            set {
                this.supportedEAPMethodField = value;
                this.RaisePropertyChanged("SupportedEAPMethod");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool RemoteUserHandling {
            get {
                return this.remoteUserHandlingField;
            }
            set {
                this.remoteUserHandlingField = value;
                this.RaisePropertyChanged("RemoteUserHandling");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SecurityCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool tLS10Field;
        
        private SecurityCapabilitiesExtension2 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TLS1.0", Order=0)]
        public bool TLS10 {
            get {
                return this.tLS10Field;
            }
            set {
                this.tLS10Field = value;
                this.RaisePropertyChanged("TLS10");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SecurityCapabilitiesExtension2 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="SecurityCapabilities", Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SecurityCapabilities1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool tLS11Field;
        
        private bool tLS12Field;
        
        private bool onboardKeyGenerationField;
        
        private bool accessPolicyConfigField;
        
        private bool x509TokenField;
        
        private bool sAMLTokenField;
        
        private bool kerberosTokenField;
        
        private bool rELTokenField;
        
        private System.Xml.XmlElement[] anyField;
        
        private SecurityCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TLS1.1", Order=0)]
        public bool TLS11 {
            get {
                return this.tLS11Field;
            }
            set {
                this.tLS11Field = value;
                this.RaisePropertyChanged("TLS11");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TLS1.2", Order=1)]
        public bool TLS12 {
            get {
                return this.tLS12Field;
            }
            set {
                this.tLS12Field = value;
                this.RaisePropertyChanged("TLS12");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool OnboardKeyGeneration {
            get {
                return this.onboardKeyGenerationField;
            }
            set {
                this.onboardKeyGenerationField = value;
                this.RaisePropertyChanged("OnboardKeyGeneration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool AccessPolicyConfig {
            get {
                return this.accessPolicyConfigField;
            }
            set {
                this.accessPolicyConfigField = value;
                this.RaisePropertyChanged("AccessPolicyConfig");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("X.509Token", Order=4)]
        public bool X509Token {
            get {
                return this.x509TokenField;
            }
            set {
                this.x509TokenField = value;
                this.RaisePropertyChanged("X509Token");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool SAMLToken {
            get {
                return this.sAMLTokenField;
            }
            set {
                this.sAMLTokenField = value;
                this.RaisePropertyChanged("SAMLToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool KerberosToken {
            get {
                return this.kerberosTokenField;
            }
            set {
                this.kerberosTokenField = value;
                this.RaisePropertyChanged("KerberosToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool RELToken {
            get {
                return this.rELTokenField;
            }
            set {
                this.rELTokenField = value;
                this.RaisePropertyChanged("RELToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=8)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public SecurityCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IOCapabilitiesExtension2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IOCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private bool auxiliaryField;
        
        private bool auxiliaryFieldSpecified;
        
        private string[] auxiliaryCommandsField;
        
        private IOCapabilitiesExtension2 extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Auxiliary {
            get {
                return this.auxiliaryField;
            }
            set {
                this.auxiliaryField = value;
                this.RaisePropertyChanged("Auxiliary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AuxiliarySpecified {
            get {
                return this.auxiliaryFieldSpecified;
            }
            set {
                this.auxiliaryFieldSpecified = value;
                this.RaisePropertyChanged("AuxiliarySpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AuxiliaryCommands", Order=2)]
        public string[] AuxiliaryCommands {
            get {
                return this.auxiliaryCommandsField;
            }
            set {
                this.auxiliaryCommandsField = value;
                this.RaisePropertyChanged("AuxiliaryCommands");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IOCapabilitiesExtension2 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IOCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int inputConnectorsField;
        
        private bool inputConnectorsFieldSpecified;
        
        private int relayOutputsField;
        
        private bool relayOutputsFieldSpecified;
        
        private IOCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int InputConnectors {
            get {
                return this.inputConnectorsField;
            }
            set {
                this.inputConnectorsField = value;
                this.RaisePropertyChanged("InputConnectors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InputConnectorsSpecified {
            get {
                return this.inputConnectorsFieldSpecified;
            }
            set {
                this.inputConnectorsFieldSpecified = value;
                this.RaisePropertyChanged("InputConnectorsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int RelayOutputs {
            get {
                return this.relayOutputsField;
            }
            set {
                this.relayOutputsField = value;
                this.RaisePropertyChanged("RelayOutputs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RelayOutputsSpecified {
            get {
                return this.relayOutputsFieldSpecified;
            }
            set {
                this.relayOutputsFieldSpecified = value;
                this.RaisePropertyChanged("RelayOutputsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public IOCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemCapabilitiesExtension2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private bool httpFirmwareUpgradeField;
        
        private bool httpFirmwareUpgradeFieldSpecified;
        
        private bool httpSystemBackupField;
        
        private bool httpSystemBackupFieldSpecified;
        
        private bool httpSystemLoggingField;
        
        private bool httpSystemLoggingFieldSpecified;
        
        private bool httpSupportInformationField;
        
        private bool httpSupportInformationFieldSpecified;
        
        private SystemCapabilitiesExtension2 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool HttpFirmwareUpgrade {
            get {
                return this.httpFirmwareUpgradeField;
            }
            set {
                this.httpFirmwareUpgradeField = value;
                this.RaisePropertyChanged("HttpFirmwareUpgrade");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HttpFirmwareUpgradeSpecified {
            get {
                return this.httpFirmwareUpgradeFieldSpecified;
            }
            set {
                this.httpFirmwareUpgradeFieldSpecified = value;
                this.RaisePropertyChanged("HttpFirmwareUpgradeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool HttpSystemBackup {
            get {
                return this.httpSystemBackupField;
            }
            set {
                this.httpSystemBackupField = value;
                this.RaisePropertyChanged("HttpSystemBackup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HttpSystemBackupSpecified {
            get {
                return this.httpSystemBackupFieldSpecified;
            }
            set {
                this.httpSystemBackupFieldSpecified = value;
                this.RaisePropertyChanged("HttpSystemBackupSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool HttpSystemLogging {
            get {
                return this.httpSystemLoggingField;
            }
            set {
                this.httpSystemLoggingField = value;
                this.RaisePropertyChanged("HttpSystemLogging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HttpSystemLoggingSpecified {
            get {
                return this.httpSystemLoggingFieldSpecified;
            }
            set {
                this.httpSystemLoggingFieldSpecified = value;
                this.RaisePropertyChanged("HttpSystemLoggingSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool HttpSupportInformation {
            get {
                return this.httpSupportInformationField;
            }
            set {
                this.httpSupportInformationField = value;
                this.RaisePropertyChanged("HttpSupportInformation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HttpSupportInformationSpecified {
            get {
                return this.httpSupportInformationFieldSpecified;
            }
            set {
                this.httpSupportInformationFieldSpecified = value;
                this.RaisePropertyChanged("HttpSupportInformationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public SystemCapabilitiesExtension2 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="SystemCapabilities", Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemCapabilities1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool discoveryResolveField;
        
        private bool discoveryByeField;
        
        private bool remoteDiscoveryField;
        
        private bool systemBackupField;
        
        private bool systemLoggingField;
        
        private bool firmwareUpgradeField;
        
        private OnvifVersion[] supportedVersionsField;
        
        private SystemCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool DiscoveryResolve {
            get {
                return this.discoveryResolveField;
            }
            set {
                this.discoveryResolveField = value;
                this.RaisePropertyChanged("DiscoveryResolve");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool DiscoveryBye {
            get {
                return this.discoveryByeField;
            }
            set {
                this.discoveryByeField = value;
                this.RaisePropertyChanged("DiscoveryBye");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool RemoteDiscovery {
            get {
                return this.remoteDiscoveryField;
            }
            set {
                this.remoteDiscoveryField = value;
                this.RaisePropertyChanged("RemoteDiscovery");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool SystemBackup {
            get {
                return this.systemBackupField;
            }
            set {
                this.systemBackupField = value;
                this.RaisePropertyChanged("SystemBackup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool SystemLogging {
            get {
                return this.systemLoggingField;
            }
            set {
                this.systemLoggingField = value;
                this.RaisePropertyChanged("SystemLogging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool FirmwareUpgrade {
            get {
                return this.firmwareUpgradeField;
            }
            set {
                this.firmwareUpgradeField = value;
                this.RaisePropertyChanged("FirmwareUpgrade");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SupportedVersions", Order=6)]
        public OnvifVersion[] SupportedVersions {
            get {
                return this.supportedVersionsField;
            }
            set {
                this.supportedVersionsField = value;
                this.RaisePropertyChanged("SupportedVersions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public SystemCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkCapabilitiesExtension2 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private bool dot11ConfigurationField;
        
        private bool dot11ConfigurationFieldSpecified;
        
        private NetworkCapabilitiesExtension2 extensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Dot11Configuration {
            get {
                return this.dot11ConfigurationField;
            }
            set {
                this.dot11ConfigurationField = value;
                this.RaisePropertyChanged("Dot11Configuration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Dot11ConfigurationSpecified {
            get {
                return this.dot11ConfigurationFieldSpecified;
            }
            set {
                this.dot11ConfigurationFieldSpecified = value;
                this.RaisePropertyChanged("Dot11ConfigurationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public NetworkCapabilitiesExtension2 Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NetworkCapabilities", Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkCapabilities1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool iPFilterField;
        
        private bool iPFilterFieldSpecified;
        
        private bool zeroConfigurationField;
        
        private bool zeroConfigurationFieldSpecified;
        
        private bool iPVersion6Field;
        
        private bool iPVersion6FieldSpecified;
        
        private bool dynDNSField;
        
        private bool dynDNSFieldSpecified;
        
        private NetworkCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IPFilter {
            get {
                return this.iPFilterField;
            }
            set {
                this.iPFilterField = value;
                this.RaisePropertyChanged("IPFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IPFilterSpecified {
            get {
                return this.iPFilterFieldSpecified;
            }
            set {
                this.iPFilterFieldSpecified = value;
                this.RaisePropertyChanged("IPFilterSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool ZeroConfiguration {
            get {
                return this.zeroConfigurationField;
            }
            set {
                this.zeroConfigurationField = value;
                this.RaisePropertyChanged("ZeroConfiguration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZeroConfigurationSpecified {
            get {
                return this.zeroConfigurationFieldSpecified;
            }
            set {
                this.zeroConfigurationFieldSpecified = value;
                this.RaisePropertyChanged("ZeroConfigurationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IPVersion6 {
            get {
                return this.iPVersion6Field;
            }
            set {
                this.iPVersion6Field = value;
                this.RaisePropertyChanged("IPVersion6");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IPVersion6Specified {
            get {
                return this.iPVersion6FieldSpecified;
            }
            set {
                this.iPVersion6FieldSpecified = value;
                this.RaisePropertyChanged("IPVersion6Specified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool DynDNS {
            get {
                return this.dynDNSField;
            }
            set {
                this.dynDNSField = value;
                this.RaisePropertyChanged("DynDNS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DynDNSSpecified {
            get {
                return this.dynDNSFieldSpecified;
            }
            set {
                this.dynDNSFieldSpecified = value;
                this.RaisePropertyChanged("DynDNSSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public NetworkCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DeviceCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private NetworkCapabilities1 networkField;
        
        private SystemCapabilities1 systemField;
        
        private IOCapabilities ioField;
        
        private SecurityCapabilities1 securityField;
        
        private DeviceCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public NetworkCapabilities1 Network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
                this.RaisePropertyChanged("Network");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public SystemCapabilities1 System {
            get {
                return this.systemField;
            }
            set {
                this.systemField = value;
                this.RaisePropertyChanged("System");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IOCapabilities IO {
            get {
                return this.ioField;
            }
            set {
                this.ioField = value;
                this.RaisePropertyChanged("IO");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public SecurityCapabilities1 Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
                this.RaisePropertyChanged("Security");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public DeviceCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AnalyticsCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private bool ruleSupportField;
        
        private bool analyticsModuleSupportField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool RuleSupport {
            get {
                return this.ruleSupportField;
            }
            set {
                this.ruleSupportField = value;
                this.RaisePropertyChanged("RuleSupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool AnalyticsModuleSupport {
            get {
                return this.analyticsModuleSupportField;
            }
            set {
                this.analyticsModuleSupportField = value;
                this.RaisePropertyChanged("AnalyticsModuleSupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Capabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AnalyticsCapabilities analyticsField;
        
        private DeviceCapabilities deviceField;
        
        private EventCapabilities eventsField;
        
        private ImagingCapabilities imagingField;
        
        private MediaCapabilities mediaField;
        
        private PTZCapabilities pTZField;
        
        private CapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AnalyticsCapabilities Analytics {
            get {
                return this.analyticsField;
            }
            set {
                this.analyticsField = value;
                this.RaisePropertyChanged("Analytics");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DeviceCapabilities Device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
                this.RaisePropertyChanged("Device");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public EventCapabilities Events {
            get {
                return this.eventsField;
            }
            set {
                this.eventsField = value;
                this.RaisePropertyChanged("Events");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public ImagingCapabilities Imaging {
            get {
                return this.imagingField;
            }
            set {
                this.imagingField = value;
                this.RaisePropertyChanged("Imaging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public MediaCapabilities Media {
            get {
                return this.mediaField;
            }
            set {
                this.mediaField = value;
                this.RaisePropertyChanged("Media");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public PTZCapabilities PTZ {
            get {
                return this.pTZField;
            }
            set {
                this.pTZField = value;
                this.RaisePropertyChanged("PTZ");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public CapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class UserExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private UserLevel userLevelField;
        
        private UserExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public UserLevel UserLevel {
            get {
                return this.userLevelField;
            }
            set {
                this.userLevelField = value;
                this.RaisePropertyChanged("UserLevel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public UserExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum UserLevel {
        
        /// <remarks/>
        Administrator,
        
        /// <remarks/>
        Operator,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Anonymous,
        
        /// <remarks/>
        Extended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RemoteUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private bool useDerivedPasswordField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool UseDerivedPassword {
            get {
                return this.useDerivedPasswordField;
            }
            set {
                this.useDerivedPasswordField = value;
                this.RaisePropertyChanged("UseDerivedPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Scope : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ScopeDefinition scopeDefField;
        
        private string scopeItemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ScopeDefinition ScopeDef {
            get {
                return this.scopeDefField;
            }
            set {
                this.scopeDefField = value;
                this.RaisePropertyChanged("ScopeDef");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=1)]
        public string ScopeItem {
            get {
                return this.scopeItemField;
            }
            set {
                this.scopeItemField = value;
                this.RaisePropertyChanged("ScopeItem");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum ScopeDefinition {
        
        /// <remarks/>
        Fixed,
        
        /// <remarks/>
        Configurable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SupportInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AttachmentData binaryField;
        
        private string stringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AttachmentData Binary {
            get {
                return this.binaryField;
            }
            set {
                this.binaryField = value;
                this.RaisePropertyChanged("Binary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string String {
            get {
                return this.stringField;
            }
            set {
                this.stringField = value;
                this.RaisePropertyChanged("String");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AttachmentData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Include includeField;
        
        private string contentTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.w3.org/2004/08/xop/include", Order=0)]
        public Include Include {
            get {
                return this.includeField;
            }
            set {
                this.includeField = value;
                this.RaisePropertyChanged("Include");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/2005/05/xmlmime")]
        public string contentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
                this.RaisePropertyChanged("contentType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.w3.org/2004/08/xop/include")]
    public partial class Include : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private string hrefField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string href {
            get {
                return this.hrefField;
            }
            set {
                this.hrefField = value;
                this.RaisePropertyChanged("href");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemLog : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AttachmentData binaryField;
        
        private string stringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AttachmentData Binary {
            get {
                return this.binaryField;
            }
            set {
                this.binaryField = value;
                this.RaisePropertyChanged("Binary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string String {
            get {
                return this.stringField;
            }
            set {
                this.stringField = value;
                this.RaisePropertyChanged("String");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class BackupFile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private AttachmentData dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public AttachmentData Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("Data");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemDateTimeExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemDateTime : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SetDateTimeType dateTimeTypeField;
        
        private bool daylightSavingsField;
        
        private TimeZone timeZoneField;
        
        private DateTime uTCDateTimeField;
        
        private DateTime localDateTimeField;
        
        private SystemDateTimeExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public SetDateTimeType DateTimeType {
            get {
                return this.dateTimeTypeField;
            }
            set {
                this.dateTimeTypeField = value;
                this.RaisePropertyChanged("DateTimeType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool DaylightSavings {
            get {
                return this.daylightSavingsField;
            }
            set {
                this.daylightSavingsField = value;
                this.RaisePropertyChanged("DaylightSavings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public TimeZone TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
                this.RaisePropertyChanged("TimeZone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public DateTime UTCDateTime {
            get {
                return this.uTCDateTimeField;
            }
            set {
                this.uTCDateTimeField = value;
                this.RaisePropertyChanged("UTCDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public DateTime LocalDateTime {
            get {
                return this.localDateTimeField;
            }
            set {
                this.localDateTimeField = value;
                this.RaisePropertyChanged("LocalDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public SystemDateTimeExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum SetDateTimeType {
        
        /// <remarks/>
        Manual,
        
        /// <remarks/>
        NTP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class TimeZone : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tzField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string TZ {
            get {
                return this.tzField;
            }
            set {
                this.tzField = value;
                this.RaisePropertyChanged("TZ");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DateTime : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Time timeField;
        
        private Date dateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Time Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Date Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Time : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int hourField;
        
        private int minuteField;
        
        private int secondField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Hour {
            get {
                return this.hourField;
            }
            set {
                this.hourField = value;
                this.RaisePropertyChanged("Hour");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Minute {
            get {
                return this.minuteField;
            }
            set {
                this.minuteField = value;
                this.RaisePropertyChanged("Minute");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Second {
            get {
                return this.secondField;
            }
            set {
                this.secondField = value;
                this.RaisePropertyChanged("Second");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Date : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int yearField;
        
        private int monthField;
        
        private int dayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
                this.RaisePropertyChanged("Year");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
                this.RaisePropertyChanged("Month");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
                this.RaisePropertyChanged("Day");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class MiscCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] auxiliaryCommandsField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] AuxiliaryCommands {
            get {
                return this.auxiliaryCommandsField;
            }
            set {
                this.auxiliaryCommandsField = value;
                this.RaisePropertyChanged("AuxiliaryCommands");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class SystemCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool discoveryResolveField;
        
        private bool discoveryResolveFieldSpecified;
        
        private bool discoveryByeField;
        
        private bool discoveryByeFieldSpecified;
        
        private bool remoteDiscoveryField;
        
        private bool remoteDiscoveryFieldSpecified;
        
        private bool systemBackupField;
        
        private bool systemBackupFieldSpecified;
        
        private bool systemLoggingField;
        
        private bool systemLoggingFieldSpecified;
        
        private bool firmwareUpgradeField;
        
        private bool firmwareUpgradeFieldSpecified;
        
        private bool httpFirmwareUpgradeField;
        
        private bool httpFirmwareUpgradeFieldSpecified;
        
        private bool httpSystemBackupField;
        
        private bool httpSystemBackupFieldSpecified;
        
        private bool httpSystemLoggingField;
        
        private bool httpSystemLoggingFieldSpecified;
        
        private bool httpSupportInformationField;
        
        private bool httpSupportInformationFieldSpecified;
        
        private bool storageConfigurationField;
        
        private bool storageConfigurationFieldSpecified;
        
        private int maxStorageConfigurationsField;
        
        private bool maxStorageConfigurationsFieldSpecified;
        
        private int geoLocationEntriesField;
        
        private bool geoLocationEntriesFieldSpecified;
        
        private string[] autoGeoField;
        
        private string[] storageTypesSupportedField;
        
        private bool discoveryNotSupportedField;
        
        private bool discoveryNotSupportedFieldSpecified;
        
        private bool networkConfigNotSupportedField;
        
        private bool networkConfigNotSupportedFieldSpecified;
        
        private bool userConfigNotSupportedField;
        
        private bool userConfigNotSupportedFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool DiscoveryResolve {
            get {
                return this.discoveryResolveField;
            }
            set {
                this.discoveryResolveField = value;
                this.RaisePropertyChanged("DiscoveryResolve");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscoveryResolveSpecified {
            get {
                return this.discoveryResolveFieldSpecified;
            }
            set {
                this.discoveryResolveFieldSpecified = value;
                this.RaisePropertyChanged("DiscoveryResolveSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool DiscoveryBye {
            get {
                return this.discoveryByeField;
            }
            set {
                this.discoveryByeField = value;
                this.RaisePropertyChanged("DiscoveryBye");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscoveryByeSpecified {
            get {
                return this.discoveryByeFieldSpecified;
            }
            set {
                this.discoveryByeFieldSpecified = value;
                this.RaisePropertyChanged("DiscoveryByeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool RemoteDiscovery {
            get {
                return this.remoteDiscoveryField;
            }
            set {
                this.remoteDiscoveryField = value;
                this.RaisePropertyChanged("RemoteDiscovery");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoteDiscoverySpecified {
            get {
                return this.remoteDiscoveryFieldSpecified;
            }
            set {
                this.remoteDiscoveryFieldSpecified = value;
                this.RaisePropertyChanged("RemoteDiscoverySpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SystemBackup {
            get {
                return this.systemBackupField;
            }
            set {
                this.systemBackupField = value;
                this.RaisePropertyChanged("SystemBackup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SystemBackupSpecified {
            get {
                return this.systemBackupFieldSpecified;
            }
            set {
                this.systemBackupFieldSpecified = value;
                this.RaisePropertyChanged("SystemBackupSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SystemLogging {
            get {
                return this.systemLoggingField;
            }
            set {
                this.systemLoggingField = value;
                this.RaisePropertyChanged("SystemLogging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SystemLoggingSpecified {
            get {
                return this.systemLoggingFieldSpecified;
            }
            set {
                this.systemLoggingFieldSpecified = value;
                this.RaisePropertyChanged("SystemLoggingSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool FirmwareUpgrade {
            get {
                return this.firmwareUpgradeField;
            }
            set {
                this.firmwareUpgradeField = value;
                this.RaisePropertyChanged("FirmwareUpgrade");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirmwareUpgradeSpecified {
            get {
                return this.firmwareUpgradeFieldSpecified;
            }
            set {
                this.firmwareUpgradeFieldSpecified = value;
                this.RaisePropertyChanged("FirmwareUpgradeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HttpFirmwareUpgrade {
            get {
                return this.httpFirmwareUpgradeField;
            }
            set {
                this.httpFirmwareUpgradeField = value;
                this.RaisePropertyChanged("HttpFirmwareUpgrade");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HttpFirmwareUpgradeSpecified {
            get {
                return this.httpFirmwareUpgradeFieldSpecified;
            }
            set {
                this.httpFirmwareUpgradeFieldSpecified = value;
                this.RaisePropertyChanged("HttpFirmwareUpgradeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HttpSystemBackup {
            get {
                return this.httpSystemBackupField;
            }
            set {
                this.httpSystemBackupField = value;
                this.RaisePropertyChanged("HttpSystemBackup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HttpSystemBackupSpecified {
            get {
                return this.httpSystemBackupFieldSpecified;
            }
            set {
                this.httpSystemBackupFieldSpecified = value;
                this.RaisePropertyChanged("HttpSystemBackupSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HttpSystemLogging {
            get {
                return this.httpSystemLoggingField;
            }
            set {
                this.httpSystemLoggingField = value;
                this.RaisePropertyChanged("HttpSystemLogging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HttpSystemLoggingSpecified {
            get {
                return this.httpSystemLoggingFieldSpecified;
            }
            set {
                this.httpSystemLoggingFieldSpecified = value;
                this.RaisePropertyChanged("HttpSystemLoggingSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HttpSupportInformation {
            get {
                return this.httpSupportInformationField;
            }
            set {
                this.httpSupportInformationField = value;
                this.RaisePropertyChanged("HttpSupportInformation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HttpSupportInformationSpecified {
            get {
                return this.httpSupportInformationFieldSpecified;
            }
            set {
                this.httpSupportInformationFieldSpecified = value;
                this.RaisePropertyChanged("HttpSupportInformationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool StorageConfiguration {
            get {
                return this.storageConfigurationField;
            }
            set {
                this.storageConfigurationField = value;
                this.RaisePropertyChanged("StorageConfiguration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StorageConfigurationSpecified {
            get {
                return this.storageConfigurationFieldSpecified;
            }
            set {
                this.storageConfigurationFieldSpecified = value;
                this.RaisePropertyChanged("StorageConfigurationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxStorageConfigurations {
            get {
                return this.maxStorageConfigurationsField;
            }
            set {
                this.maxStorageConfigurationsField = value;
                this.RaisePropertyChanged("MaxStorageConfigurations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxStorageConfigurationsSpecified {
            get {
                return this.maxStorageConfigurationsFieldSpecified;
            }
            set {
                this.maxStorageConfigurationsFieldSpecified = value;
                this.RaisePropertyChanged("MaxStorageConfigurationsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int GeoLocationEntries {
            get {
                return this.geoLocationEntriesField;
            }
            set {
                this.geoLocationEntriesField = value;
                this.RaisePropertyChanged("GeoLocationEntries");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeoLocationEntriesSpecified {
            get {
                return this.geoLocationEntriesFieldSpecified;
            }
            set {
                this.geoLocationEntriesFieldSpecified = value;
                this.RaisePropertyChanged("GeoLocationEntriesSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] AutoGeo {
            get {
                return this.autoGeoField;
            }
            set {
                this.autoGeoField = value;
                this.RaisePropertyChanged("AutoGeo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] StorageTypesSupported {
            get {
                return this.storageTypesSupportedField;
            }
            set {
                this.storageTypesSupportedField = value;
                this.RaisePropertyChanged("StorageTypesSupported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool DiscoveryNotSupported {
            get {
                return this.discoveryNotSupportedField;
            }
            set {
                this.discoveryNotSupportedField = value;
                this.RaisePropertyChanged("DiscoveryNotSupported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscoveryNotSupportedSpecified {
            get {
                return this.discoveryNotSupportedFieldSpecified;
            }
            set {
                this.discoveryNotSupportedFieldSpecified = value;
                this.RaisePropertyChanged("DiscoveryNotSupportedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool NetworkConfigNotSupported {
            get {
                return this.networkConfigNotSupportedField;
            }
            set {
                this.networkConfigNotSupportedField = value;
                this.RaisePropertyChanged("NetworkConfigNotSupported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetworkConfigNotSupportedSpecified {
            get {
                return this.networkConfigNotSupportedFieldSpecified;
            }
            set {
                this.networkConfigNotSupportedFieldSpecified = value;
                this.RaisePropertyChanged("NetworkConfigNotSupportedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool UserConfigNotSupported {
            get {
                return this.userConfigNotSupportedField;
            }
            set {
                this.userConfigNotSupportedField = value;
                this.RaisePropertyChanged("UserConfigNotSupported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserConfigNotSupportedSpecified {
            get {
                return this.userConfigNotSupportedFieldSpecified;
            }
            set {
                this.userConfigNotSupportedFieldSpecified = value;
                this.RaisePropertyChanged("UserConfigNotSupportedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class SecurityCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool tLS10Field;
        
        private bool tLS10FieldSpecified;
        
        private bool tLS11Field;
        
        private bool tLS11FieldSpecified;
        
        private bool tLS12Field;
        
        private bool tLS12FieldSpecified;
        
        private bool onboardKeyGenerationField;
        
        private bool onboardKeyGenerationFieldSpecified;
        
        private bool accessPolicyConfigField;
        
        private bool accessPolicyConfigFieldSpecified;
        
        private bool defaultAccessPolicyField;
        
        private bool defaultAccessPolicyFieldSpecified;
        
        private bool dot1XField;
        
        private bool dot1XFieldSpecified;
        
        private bool remoteUserHandlingField;
        
        private bool remoteUserHandlingFieldSpecified;
        
        private bool x509TokenField;
        
        private bool x509TokenFieldSpecified;
        
        private bool sAMLTokenField;
        
        private bool sAMLTokenFieldSpecified;
        
        private bool kerberosTokenField;
        
        private bool kerberosTokenFieldSpecified;
        
        private bool usernameTokenField;
        
        private bool usernameTokenFieldSpecified;
        
        private bool httpDigestField;
        
        private bool httpDigestFieldSpecified;
        
        private bool rELTokenField;
        
        private bool rELTokenFieldSpecified;
        
        private int[] supportedEAPMethodsField;
        
        private int maxUsersField;
        
        private bool maxUsersFieldSpecified;
        
        private int maxUserNameLengthField;
        
        private bool maxUserNameLengthFieldSpecified;
        
        private int maxPasswordLengthField;
        
        private bool maxPasswordLengthFieldSpecified;
        
        private string[] securityPoliciesField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("TLS1.0")]
        public bool TLS10 {
            get {
                return this.tLS10Field;
            }
            set {
                this.tLS10Field = value;
                this.RaisePropertyChanged("TLS10");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TLS10Specified {
            get {
                return this.tLS10FieldSpecified;
            }
            set {
                this.tLS10FieldSpecified = value;
                this.RaisePropertyChanged("TLS10Specified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("TLS1.1")]
        public bool TLS11 {
            get {
                return this.tLS11Field;
            }
            set {
                this.tLS11Field = value;
                this.RaisePropertyChanged("TLS11");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TLS11Specified {
            get {
                return this.tLS11FieldSpecified;
            }
            set {
                this.tLS11FieldSpecified = value;
                this.RaisePropertyChanged("TLS11Specified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("TLS1.2")]
        public bool TLS12 {
            get {
                return this.tLS12Field;
            }
            set {
                this.tLS12Field = value;
                this.RaisePropertyChanged("TLS12");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TLS12Specified {
            get {
                return this.tLS12FieldSpecified;
            }
            set {
                this.tLS12FieldSpecified = value;
                this.RaisePropertyChanged("TLS12Specified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool OnboardKeyGeneration {
            get {
                return this.onboardKeyGenerationField;
            }
            set {
                this.onboardKeyGenerationField = value;
                this.RaisePropertyChanged("OnboardKeyGeneration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnboardKeyGenerationSpecified {
            get {
                return this.onboardKeyGenerationFieldSpecified;
            }
            set {
                this.onboardKeyGenerationFieldSpecified = value;
                this.RaisePropertyChanged("OnboardKeyGenerationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool AccessPolicyConfig {
            get {
                return this.accessPolicyConfigField;
            }
            set {
                this.accessPolicyConfigField = value;
                this.RaisePropertyChanged("AccessPolicyConfig");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccessPolicyConfigSpecified {
            get {
                return this.accessPolicyConfigFieldSpecified;
            }
            set {
                this.accessPolicyConfigFieldSpecified = value;
                this.RaisePropertyChanged("AccessPolicyConfigSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool DefaultAccessPolicy {
            get {
                return this.defaultAccessPolicyField;
            }
            set {
                this.defaultAccessPolicyField = value;
                this.RaisePropertyChanged("DefaultAccessPolicy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultAccessPolicySpecified {
            get {
                return this.defaultAccessPolicyFieldSpecified;
            }
            set {
                this.defaultAccessPolicyFieldSpecified = value;
                this.RaisePropertyChanged("DefaultAccessPolicySpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Dot1X {
            get {
                return this.dot1XField;
            }
            set {
                this.dot1XField = value;
                this.RaisePropertyChanged("Dot1X");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Dot1XSpecified {
            get {
                return this.dot1XFieldSpecified;
            }
            set {
                this.dot1XFieldSpecified = value;
                this.RaisePropertyChanged("Dot1XSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool RemoteUserHandling {
            get {
                return this.remoteUserHandlingField;
            }
            set {
                this.remoteUserHandlingField = value;
                this.RaisePropertyChanged("RemoteUserHandling");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoteUserHandlingSpecified {
            get {
                return this.remoteUserHandlingFieldSpecified;
            }
            set {
                this.remoteUserHandlingFieldSpecified = value;
                this.RaisePropertyChanged("RemoteUserHandlingSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("X.509Token")]
        public bool X509Token {
            get {
                return this.x509TokenField;
            }
            set {
                this.x509TokenField = value;
                this.RaisePropertyChanged("X509Token");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool X509TokenSpecified {
            get {
                return this.x509TokenFieldSpecified;
            }
            set {
                this.x509TokenFieldSpecified = value;
                this.RaisePropertyChanged("X509TokenSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SAMLToken {
            get {
                return this.sAMLTokenField;
            }
            set {
                this.sAMLTokenField = value;
                this.RaisePropertyChanged("SAMLToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SAMLTokenSpecified {
            get {
                return this.sAMLTokenFieldSpecified;
            }
            set {
                this.sAMLTokenFieldSpecified = value;
                this.RaisePropertyChanged("SAMLTokenSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool KerberosToken {
            get {
                return this.kerberosTokenField;
            }
            set {
                this.kerberosTokenField = value;
                this.RaisePropertyChanged("KerberosToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KerberosTokenSpecified {
            get {
                return this.kerberosTokenFieldSpecified;
            }
            set {
                this.kerberosTokenFieldSpecified = value;
                this.RaisePropertyChanged("KerberosTokenSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool UsernameToken {
            get {
                return this.usernameTokenField;
            }
            set {
                this.usernameTokenField = value;
                this.RaisePropertyChanged("UsernameToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsernameTokenSpecified {
            get {
                return this.usernameTokenFieldSpecified;
            }
            set {
                this.usernameTokenFieldSpecified = value;
                this.RaisePropertyChanged("UsernameTokenSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HttpDigest {
            get {
                return this.httpDigestField;
            }
            set {
                this.httpDigestField = value;
                this.RaisePropertyChanged("HttpDigest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HttpDigestSpecified {
            get {
                return this.httpDigestFieldSpecified;
            }
            set {
                this.httpDigestFieldSpecified = value;
                this.RaisePropertyChanged("HttpDigestSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool RELToken {
            get {
                return this.rELTokenField;
            }
            set {
                this.rELTokenField = value;
                this.RaisePropertyChanged("RELToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RELTokenSpecified {
            get {
                return this.rELTokenFieldSpecified;
            }
            set {
                this.rELTokenFieldSpecified = value;
                this.RaisePropertyChanged("RELTokenSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int[] SupportedEAPMethods {
            get {
                return this.supportedEAPMethodsField;
            }
            set {
                this.supportedEAPMethodsField = value;
                this.RaisePropertyChanged("SupportedEAPMethods");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxUsers {
            get {
                return this.maxUsersField;
            }
            set {
                this.maxUsersField = value;
                this.RaisePropertyChanged("MaxUsers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxUsersSpecified {
            get {
                return this.maxUsersFieldSpecified;
            }
            set {
                this.maxUsersFieldSpecified = value;
                this.RaisePropertyChanged("MaxUsersSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxUserNameLength {
            get {
                return this.maxUserNameLengthField;
            }
            set {
                this.maxUserNameLengthField = value;
                this.RaisePropertyChanged("MaxUserNameLength");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxUserNameLengthSpecified {
            get {
                return this.maxUserNameLengthFieldSpecified;
            }
            set {
                this.maxUserNameLengthFieldSpecified = value;
                this.RaisePropertyChanged("MaxUserNameLengthSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxPasswordLength {
            get {
                return this.maxPasswordLengthField;
            }
            set {
                this.maxPasswordLengthField = value;
                this.RaisePropertyChanged("MaxPasswordLength");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxPasswordLengthSpecified {
            get {
                return this.maxPasswordLengthFieldSpecified;
            }
            set {
                this.maxPasswordLengthFieldSpecified = value;
                this.RaisePropertyChanged("MaxPasswordLengthSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string[] SecurityPolicies {
            get {
                return this.securityPoliciesField;
            }
            set {
                this.securityPoliciesField = value;
                this.RaisePropertyChanged("SecurityPolicies");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class NetworkCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool iPFilterField;
        
        private bool iPFilterFieldSpecified;
        
        private bool zeroConfigurationField;
        
        private bool zeroConfigurationFieldSpecified;
        
        private bool iPVersion6Field;
        
        private bool iPVersion6FieldSpecified;
        
        private bool dynDNSField;
        
        private bool dynDNSFieldSpecified;
        
        private bool dot11ConfigurationField;
        
        private bool dot11ConfigurationFieldSpecified;
        
        private int dot1XConfigurationsField;
        
        private bool dot1XConfigurationsFieldSpecified;
        
        private bool hostnameFromDHCPField;
        
        private bool hostnameFromDHCPFieldSpecified;
        
        private int nTPField;
        
        private bool nTPFieldSpecified;
        
        private bool dHCPv6Field;
        
        private bool dHCPv6FieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IPFilter {
            get {
                return this.iPFilterField;
            }
            set {
                this.iPFilterField = value;
                this.RaisePropertyChanged("IPFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IPFilterSpecified {
            get {
                return this.iPFilterFieldSpecified;
            }
            set {
                this.iPFilterFieldSpecified = value;
                this.RaisePropertyChanged("IPFilterSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ZeroConfiguration {
            get {
                return this.zeroConfigurationField;
            }
            set {
                this.zeroConfigurationField = value;
                this.RaisePropertyChanged("ZeroConfiguration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZeroConfigurationSpecified {
            get {
                return this.zeroConfigurationFieldSpecified;
            }
            set {
                this.zeroConfigurationFieldSpecified = value;
                this.RaisePropertyChanged("ZeroConfigurationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IPVersion6 {
            get {
                return this.iPVersion6Field;
            }
            set {
                this.iPVersion6Field = value;
                this.RaisePropertyChanged("IPVersion6");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IPVersion6Specified {
            get {
                return this.iPVersion6FieldSpecified;
            }
            set {
                this.iPVersion6FieldSpecified = value;
                this.RaisePropertyChanged("IPVersion6Specified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool DynDNS {
            get {
                return this.dynDNSField;
            }
            set {
                this.dynDNSField = value;
                this.RaisePropertyChanged("DynDNS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DynDNSSpecified {
            get {
                return this.dynDNSFieldSpecified;
            }
            set {
                this.dynDNSFieldSpecified = value;
                this.RaisePropertyChanged("DynDNSSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Dot11Configuration {
            get {
                return this.dot11ConfigurationField;
            }
            set {
                this.dot11ConfigurationField = value;
                this.RaisePropertyChanged("Dot11Configuration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Dot11ConfigurationSpecified {
            get {
                return this.dot11ConfigurationFieldSpecified;
            }
            set {
                this.dot11ConfigurationFieldSpecified = value;
                this.RaisePropertyChanged("Dot11ConfigurationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Dot1XConfigurations {
            get {
                return this.dot1XConfigurationsField;
            }
            set {
                this.dot1XConfigurationsField = value;
                this.RaisePropertyChanged("Dot1XConfigurations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Dot1XConfigurationsSpecified {
            get {
                return this.dot1XConfigurationsFieldSpecified;
            }
            set {
                this.dot1XConfigurationsFieldSpecified = value;
                this.RaisePropertyChanged("Dot1XConfigurationsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HostnameFromDHCP {
            get {
                return this.hostnameFromDHCPField;
            }
            set {
                this.hostnameFromDHCPField = value;
                this.RaisePropertyChanged("HostnameFromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HostnameFromDHCPSpecified {
            get {
                return this.hostnameFromDHCPFieldSpecified;
            }
            set {
                this.hostnameFromDHCPFieldSpecified = value;
                this.RaisePropertyChanged("HostnameFromDHCPSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int NTP {
            get {
                return this.nTPField;
            }
            set {
                this.nTPField = value;
                this.RaisePropertyChanged("NTP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NTPSpecified {
            get {
                return this.nTPFieldSpecified;
            }
            set {
                this.nTPFieldSpecified = value;
                this.RaisePropertyChanged("NTPSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool DHCPv6 {
            get {
                return this.dHCPv6Field;
            }
            set {
                this.dHCPv6Field = value;
                this.RaisePropertyChanged("DHCPv6");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DHCPv6Specified {
            get {
                return this.dHCPv6FieldSpecified;
            }
            set {
                this.dHCPv6FieldSpecified = value;
                this.RaisePropertyChanged("DHCPv6Specified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class DeviceServiceCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NetworkCapabilities networkField;
        
        private SecurityCapabilities securityField;
        
        private SystemCapabilities systemField;
        
        private MiscCapabilities miscField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public NetworkCapabilities Network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
                this.RaisePropertyChanged("Network");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SecurityCapabilities Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
                this.RaisePropertyChanged("Security");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public SystemCapabilities System {
            get {
                return this.systemField;
            }
            set {
                this.systemField = value;
                this.RaisePropertyChanged("System");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public MiscCapabilities Misc {
            get {
                return this.miscField;
            }
            set {
                this.miscField = value;
                this.RaisePropertyChanged("Misc");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServices", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetServicesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public bool IncludeCapability;
        
        public GetServicesRequest() {
        }
        
        public GetServicesRequest(bool IncludeCapability) {
            this.IncludeCapability = IncludeCapability;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServicesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetServicesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Service")]
        public OnvifBasic.device.Service[] Service;
        
        public GetServicesResponse() {
        }
        
        public GetServicesResponse(OnvifBasic.device.Service[] Service) {
            this.Service = Service;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum FactoryDefaultType {
        
        /// <remarks/>
        Hard,
        
        /// <remarks/>
        Soft,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RestoreSystem", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class RestoreSystemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("BackupFiles")]
        public OnvifBasic.device.BackupFile[] BackupFiles;
        
        public RestoreSystemRequest() {
        }
        
        public RestoreSystemRequest(OnvifBasic.device.BackupFile[] BackupFiles) {
            this.BackupFiles = BackupFiles;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RestoreSystemResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class RestoreSystemResponse {
        
        public RestoreSystemResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemBackup", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemBackupRequest {
        
        public GetSystemBackupRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemBackupResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemBackupResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("BackupFiles")]
        public OnvifBasic.device.BackupFile[] BackupFiles;
        
        public GetSystemBackupResponse() {
        }
        
        public GetSystemBackupResponse(OnvifBasic.device.BackupFile[] BackupFiles) {
            this.BackupFiles = BackupFiles;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetScopes", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetScopesRequest {
        
        public GetScopesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetScopesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetScopesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Scopes")]
        public OnvifBasic.device.Scope[] Scopes;
        
        public GetScopesResponse() {
        }
        
        public GetScopesResponse(OnvifBasic.device.Scope[] Scopes) {
            this.Scopes = Scopes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetScopes", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetScopesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Scopes", DataType="anyURI")]
        public string[] Scopes;
        
        public SetScopesRequest() {
        }
        
        public SetScopesRequest(string[] Scopes) {
            this.Scopes = Scopes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetScopesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetScopesResponse {
        
        public SetScopesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddScopes", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class AddScopesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ScopeItem", DataType="anyURI")]
        public string[] ScopeItem;
        
        public AddScopesRequest() {
        }
        
        public AddScopesRequest(string[] ScopeItem) {
            this.ScopeItem = ScopeItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddScopesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class AddScopesResponse {
        
        public AddScopesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveScopes", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class RemoveScopesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ScopeItem", DataType="anyURI")]
        public string[] ScopeItem;
        
        public RemoveScopesRequest() {
        }
        
        public RemoveScopesRequest(string[] ScopeItem) {
            this.ScopeItem = ScopeItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveScopesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class RemoveScopesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ScopeItem", DataType="anyURI")]
        public string[] ScopeItem;
        
        public RemoveScopesResponse() {
        }
        
        public RemoveScopesResponse(string[] ScopeItem) {
            this.ScopeItem = ScopeItem;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum DiscoveryMode {
        
        /// <remarks/>
        Discoverable,
        
        /// <remarks/>
        NonDiscoverable,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDPAddresses", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDPAddressesRequest {
        
        public GetDPAddressesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDPAddressesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDPAddressesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("DPAddress")]
        public OnvifBasic.device.NetworkHost[] DPAddress;
        
        public GetDPAddressesResponse() {
        }
        
        public GetDPAddressesResponse(OnvifBasic.device.NetworkHost[] DPAddress) {
            this.DPAddress = DPAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDPAddresses", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDPAddressesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("DPAddress")]
        public OnvifBasic.device.NetworkHost[] DPAddress;
        
        public SetDPAddressesRequest() {
        }
        
        public SetDPAddressesRequest(OnvifBasic.device.NetworkHost[] DPAddress) {
            this.DPAddress = DPAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDPAddressesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDPAddressesResponse {
        
        public SetDPAddressesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEndpointReference", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetEndpointReferenceRequest {
        
        public GetEndpointReferenceRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEndpointReferenceResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetEndpointReferenceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public string GUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        public GetEndpointReferenceResponse() {
        }
        
        public GetEndpointReferenceResponse(string GUID, System.Xml.XmlElement[] Any) {
            this.GUID = GUID;
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsers", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetUsersRequest {
        
        public GetUsersRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsersResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("User")]
        public OnvifBasic.device.User[] User;
        
        public GetUsersResponse() {
        }
        
        public GetUsersResponse(OnvifBasic.device.User[] User) {
            this.User = User;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUsers", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class CreateUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("User")]
        public OnvifBasic.device.User[] User;
        
        public CreateUsersRequest() {
        }
        
        public CreateUsersRequest(OnvifBasic.device.User[] User) {
            this.User = User;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUsersResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class CreateUsersResponse {
        
        public CreateUsersResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteUsers", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Username")]
        public string[] Username;
        
        public DeleteUsersRequest() {
        }
        
        public DeleteUsersRequest(string[] Username) {
            this.Username = Username;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteUsersResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteUsersResponse {
        
        public DeleteUsersResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUser", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("User")]
        public OnvifBasic.device.User[] User;
        
        public SetUserRequest() {
        }
        
        public SetUserRequest(OnvifBasic.device.User[] User) {
            this.User = User;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUserResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetUserResponse {
        
        public SetUserResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWsdlUrl", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetWsdlUrlRequest {
        
        public GetWsdlUrlRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWsdlUrlResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetWsdlUrlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string WsdlUrl;
        
        public GetWsdlUrlResponse() {
        }
        
        public GetWsdlUrlResponse(string WsdlUrl) {
            this.WsdlUrl = WsdlUrl;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum CapabilityCategory {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Analytics,
        
        /// <remarks/>
        Device,
        
        /// <remarks/>
        Events,
        
        /// <remarks/>
        Imaging,
        
        /// <remarks/>
        Media,
        
        /// <remarks/>
        PTZ,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCapabilities", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCapabilitiesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Category")]
        public OnvifBasic.device.CapabilityCategory[] Category;
        
        public GetCapabilitiesRequest() {
        }
        
        public GetCapabilitiesRequest(OnvifBasic.device.CapabilityCategory[] Category) {
            this.Category = Category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCapabilitiesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCapabilitiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public OnvifBasic.device.Capabilities Capabilities;
        
        public GetCapabilitiesResponse() {
        }
        
        public GetCapabilitiesResponse(OnvifBasic.device.Capabilities Capabilities) {
            this.Capabilities = Capabilities;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetHostname", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetHostnameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
        public string Name;
        
        public SetHostnameRequest() {
        }
        
        public SetHostnameRequest(string Name) {
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetHostnameResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetHostnameResponse {
        
        public SetHostnameResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDNS", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDNSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public bool FromDHCP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("SearchDomain", DataType="token")]
        public string[] SearchDomain;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("DNSManual")]
        public OnvifBasic.device.IPAddress[] DNSManual;
        
        public SetDNSRequest() {
        }
        
        public SetDNSRequest(bool FromDHCP, string[] SearchDomain, OnvifBasic.device.IPAddress[] DNSManual) {
            this.FromDHCP = FromDHCP;
            this.SearchDomain = SearchDomain;
            this.DNSManual = DNSManual;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDNSResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDNSResponse {
        
        public SetDNSResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNTP", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNTPRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public bool FromDHCP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("NTPManual")]
        public OnvifBasic.device.NetworkHost[] NTPManual;
        
        public SetNTPRequest() {
        }
        
        public SetNTPRequest(bool FromDHCP, OnvifBasic.device.NetworkHost[] NTPManual) {
            this.FromDHCP = FromDHCP;
            this.NTPManual = NTPManual;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNTPResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNTPResponse {
        
        public SetNTPResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDynamicDNS", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDynamicDNSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public OnvifBasic.device.DynamicDNSType Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration")]
        public string TTL;
        
        public SetDynamicDNSRequest() {
        }
        
        public SetDynamicDNSRequest(OnvifBasic.device.DynamicDNSType Type, string Name, string TTL) {
            this.Type = Type;
            this.Name = Name;
            this.TTL = TTL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDynamicDNSResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDynamicDNSResponse {
        
        public SetDynamicDNSResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNetworkInterfaces", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNetworkInterfacesRequest {
        
        public GetNetworkInterfacesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNetworkInterfacesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNetworkInterfacesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkInterfaces")]
        public OnvifBasic.device.NetworkInterface[] NetworkInterfaces;
        
        public GetNetworkInterfacesResponse() {
        }
        
        public GetNetworkInterfacesResponse(OnvifBasic.device.NetworkInterface[] NetworkInterfaces) {
            this.NetworkInterfaces = NetworkInterfaces;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNetworkProtocols", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNetworkProtocolsRequest {
        
        public GetNetworkProtocolsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNetworkProtocolsResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNetworkProtocolsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkProtocols")]
        public OnvifBasic.device.NetworkProtocol[] NetworkProtocols;
        
        public GetNetworkProtocolsResponse() {
        }
        
        public GetNetworkProtocolsResponse(OnvifBasic.device.NetworkProtocol[] NetworkProtocols) {
            this.NetworkProtocols = NetworkProtocols;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNetworkProtocols", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNetworkProtocolsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkProtocols")]
        public OnvifBasic.device.NetworkProtocol[] NetworkProtocols;
        
        public SetNetworkProtocolsRequest() {
        }
        
        public SetNetworkProtocolsRequest(OnvifBasic.device.NetworkProtocol[] NetworkProtocols) {
            this.NetworkProtocols = NetworkProtocols;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNetworkProtocolsResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNetworkProtocolsResponse {
        
        public SetNetworkProtocolsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNetworkDefaultGateway", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNetworkDefaultGatewayRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("IPv4Address", DataType="token")]
        public string[] IPv4Address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("IPv6Address", DataType="token")]
        public string[] IPv6Address;
        
        public SetNetworkDefaultGatewayRequest() {
        }
        
        public SetNetworkDefaultGatewayRequest(string[] IPv4Address, string[] IPv6Address) {
            this.IPv4Address = IPv4Address;
            this.IPv6Address = IPv6Address;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNetworkDefaultGatewayResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNetworkDefaultGatewayResponse {
        
        public SetNetworkDefaultGatewayResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRelayOutputs", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetRelayOutputsRequest {
        
        public GetRelayOutputsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRelayOutputsResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetRelayOutputsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("RelayOutputs")]
        public OnvifBasic.device.RelayOutput[] RelayOutputs;
        
        public GetRelayOutputsResponse() {
        }
        
        public GetRelayOutputsResponse(OnvifBasic.device.RelayOutput[] RelayOutputs) {
            this.RelayOutputs = RelayOutputs;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum RelayLogicalState {
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        inactive,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDot11Capabilities", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDot11CapabilitiesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
        
        public GetDot11CapabilitiesRequest() {
        }
        
        public GetDot11CapabilitiesRequest(System.Xml.XmlElement[] Any) {
            this.Any = Any;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDot11CapabilitiesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDot11CapabilitiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public OnvifBasic.device.Dot11Capabilities Capabilities;
        
        public GetDot11CapabilitiesResponse() {
        }
        
        public GetDot11CapabilitiesResponse(OnvifBasic.device.Dot11Capabilities Capabilities) {
            this.Capabilities = Capabilities;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ScanAvailableDot11Networks", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class ScanAvailableDot11NetworksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public string InterfaceToken;
        
        public ScanAvailableDot11NetworksRequest() {
        }
        
        public ScanAvailableDot11NetworksRequest(string InterfaceToken) {
            this.InterfaceToken = InterfaceToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ScanAvailableDot11NetworksResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class ScanAvailableDot11NetworksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Networks")]
        public OnvifBasic.device.Dot11AvailableNetworks[] Networks;
        
        public ScanAvailableDot11NetworksResponse() {
        }
        
        public ScanAvailableDot11NetworksResponse(OnvifBasic.device.Dot11AvailableNetworks[] Networks) {
            this.Networks = Networks;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.onvif.org/ver10/device/wsdl")]
    public partial class GetSystemUrisResponseExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemUris", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemUrisRequest {
        
        public GetSystemUrisRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemUrisResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemUrisResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("SystemLog", Namespace="http://www.onvif.org/ver10/schema", IsNullable=false)]
        public OnvifBasic.device.SystemLogUri[] SystemLogUris;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string SupportInfoUri;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string SystemBackupUri;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=3)]
        public OnvifBasic.device.GetSystemUrisResponseExtension Extension;
        
        public GetSystemUrisResponse() {
        }
        
        public GetSystemUrisResponse(OnvifBasic.device.SystemLogUri[] SystemLogUris, string SupportInfoUri, string SystemBackupUri, OnvifBasic.device.GetSystemUrisResponseExtension Extension) {
            this.SystemLogUris = SystemLogUris;
            this.SupportInfoUri = SupportInfoUri;
            this.SystemBackupUri = SystemBackupUri;
            this.Extension = Extension;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartFirmwareUpgrade", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class StartFirmwareUpgradeRequest {
        
        public StartFirmwareUpgradeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartFirmwareUpgradeResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class StartFirmwareUpgradeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string UploadUri;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration")]
        public string UploadDelay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration")]
        public string ExpectedDownTime;
        
        public StartFirmwareUpgradeResponse() {
        }
        
        public StartFirmwareUpgradeResponse(string UploadUri, string UploadDelay, string ExpectedDownTime) {
            this.UploadUri = UploadUri;
            this.UploadDelay = UploadDelay;
            this.ExpectedDownTime = ExpectedDownTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartSystemRestore", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class StartSystemRestoreRequest {
        
        public StartSystemRestoreRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartSystemRestoreResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class StartSystemRestoreResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string UploadUri;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration")]
        public string ExpectedDownTime;
        
        public StartSystemRestoreResponse() {
        }
        
        public StartSystemRestoreResponse(string UploadUri, string ExpectedDownTime) {
            this.UploadUri = UploadUri;
            this.ExpectedDownTime = ExpectedDownTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStorageConfigurations", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetStorageConfigurationsRequest {
        
        public GetStorageConfigurationsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStorageConfigurationsResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetStorageConfigurationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("StorageConfigurations")]
        public OnvifBasic.device.StorageConfiguration[] StorageConfigurations;
        
        public GetStorageConfigurationsResponse() {
        }
        
        public GetStorageConfigurationsResponse(OnvifBasic.device.StorageConfiguration[] StorageConfigurations) {
            this.StorageConfigurations = StorageConfigurations;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGeoLocation", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetGeoLocationRequest {
        
        public GetGeoLocationRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGeoLocationResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetGeoLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Location")]
        public OnvifBasic.device.LocationEntity[] Location;
        
        public GetGeoLocationResponse() {
        }
        
        public GetGeoLocationResponse(OnvifBasic.device.LocationEntity[] Location) {
            this.Location = Location;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetGeoLocation", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetGeoLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Location")]
        public OnvifBasic.device.LocationEntity[] Location;
        
        public SetGeoLocationRequest() {
        }
        
        public SetGeoLocationRequest(OnvifBasic.device.LocationEntity[] Location) {
            this.Location = Location;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetGeoLocationResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetGeoLocationResponse {
        
        public SetGeoLocationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteGeoLocation", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteGeoLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Location")]
        public OnvifBasic.device.LocationEntity[] Location;
        
        public DeleteGeoLocationRequest() {
        }
        
        public DeleteGeoLocationRequest(OnvifBasic.device.LocationEntity[] Location) {
            this.Location = Location;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteGeoLocationResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteGeoLocationResponse {
        
        public DeleteGeoLocationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCertificate", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class CreateCertificateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
        public string CertificateID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        public string Subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        public System.DateTime ValidNotBefore;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=3)]
        public System.DateTime ValidNotAfter;
        
        public CreateCertificateRequest() {
        }
        
        public CreateCertificateRequest(string CertificateID, string Subject, System.DateTime ValidNotBefore, System.DateTime ValidNotAfter) {
            this.CertificateID = CertificateID;
            this.Subject = Subject;
            this.ValidNotBefore = ValidNotBefore;
            this.ValidNotAfter = ValidNotAfter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCertificateResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class CreateCertificateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public OnvifBasic.device.Certificate NvtCertificate;
        
        public CreateCertificateResponse() {
        }
        
        public CreateCertificateResponse(OnvifBasic.device.Certificate NvtCertificate) {
            this.NvtCertificate = NvtCertificate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCertificates", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCertificatesRequest {
        
        public GetCertificatesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCertificatesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCertificatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NvtCertificate")]
        public OnvifBasic.device.Certificate[] NvtCertificate;
        
        public GetCertificatesResponse() {
        }
        
        public GetCertificatesResponse(OnvifBasic.device.Certificate[] NvtCertificate) {
            this.NvtCertificate = NvtCertificate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCertificatesStatus", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCertificatesStatusRequest {
        
        public GetCertificatesStatusRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCertificatesStatusResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCertificatesStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateStatus")]
        public OnvifBasic.device.CertificateStatus[] CertificateStatus;
        
        public GetCertificatesStatusResponse() {
        }
        
        public GetCertificatesStatusResponse(OnvifBasic.device.CertificateStatus[] CertificateStatus) {
            this.CertificateStatus = CertificateStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCertificatesStatus", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetCertificatesStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateStatus")]
        public OnvifBasic.device.CertificateStatus[] CertificateStatus;
        
        public SetCertificatesStatusRequest() {
        }
        
        public SetCertificatesStatusRequest(OnvifBasic.device.CertificateStatus[] CertificateStatus) {
            this.CertificateStatus = CertificateStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCertificatesStatusResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetCertificatesStatusResponse {
        
        public SetCertificatesStatusResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCertificates", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteCertificatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateID", DataType="token")]
        public string[] CertificateID;
        
        public DeleteCertificatesRequest() {
        }
        
        public DeleteCertificatesRequest(string[] CertificateID) {
            this.CertificateID = CertificateID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCertificatesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteCertificatesResponse {
        
        public DeleteCertificatesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPkcs10Request", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetPkcs10RequestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
        public string CertificateID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        public string Subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        public OnvifBasic.device.BinaryData Attributes;
        
        public GetPkcs10RequestRequest() {
        }
        
        public GetPkcs10RequestRequest(string CertificateID, string Subject, OnvifBasic.device.BinaryData Attributes) {
            this.CertificateID = CertificateID;
            this.Subject = Subject;
            this.Attributes = Attributes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPkcs10RequestResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetPkcs10RequestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public OnvifBasic.device.BinaryData Pkcs10Request;
        
        public GetPkcs10RequestResponse() {
        }
        
        public GetPkcs10RequestResponse(OnvifBasic.device.BinaryData Pkcs10Request) {
            this.Pkcs10Request = Pkcs10Request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadCertificates", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class LoadCertificatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NVTCertificate")]
        public OnvifBasic.device.Certificate[] NVTCertificate;
        
        public LoadCertificatesRequest() {
        }
        
        public LoadCertificatesRequest(OnvifBasic.device.Certificate[] NVTCertificate) {
            this.NVTCertificate = NVTCertificate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadCertificatesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class LoadCertificatesResponse {
        
        public LoadCertificatesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCACertificates", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCACertificatesRequest {
        
        public GetCACertificatesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCACertificatesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCACertificatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("CACertificate")]
        public OnvifBasic.device.Certificate[] CACertificate;
        
        public GetCACertificatesResponse() {
        }
        
        public GetCACertificatesResponse(OnvifBasic.device.Certificate[] CACertificate) {
            this.CACertificate = CACertificate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadCertificateWithPrivateKey", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class LoadCertificateWithPrivateKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateWithPrivateKey")]
        public OnvifBasic.device.CertificateWithPrivateKey[] CertificateWithPrivateKey;
        
        public LoadCertificateWithPrivateKeyRequest() {
        }
        
        public LoadCertificateWithPrivateKeyRequest(OnvifBasic.device.CertificateWithPrivateKey[] CertificateWithPrivateKey) {
            this.CertificateWithPrivateKey = CertificateWithPrivateKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadCertificateWithPrivateKeyResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class LoadCertificateWithPrivateKeyResponse {
        
        public LoadCertificateWithPrivateKeyResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCertificateInformation", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCertificateInformationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
        public string CertificateID;
        
        public GetCertificateInformationRequest() {
        }
        
        public GetCertificateInformationRequest(string CertificateID) {
            this.CertificateID = CertificateID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCertificateInformationResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCertificateInformationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public OnvifBasic.device.CertificateInformation CertificateInformation;
        
        public GetCertificateInformationResponse() {
        }
        
        public GetCertificateInformationResponse(OnvifBasic.device.CertificateInformation CertificateInformation) {
            this.CertificateInformation = CertificateInformation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadCACertificates", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class LoadCACertificatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("CACertificate")]
        public OnvifBasic.device.Certificate[] CACertificate;
        
        public LoadCACertificatesRequest() {
        }
        
        public LoadCACertificatesRequest(OnvifBasic.device.Certificate[] CACertificate) {
            this.CACertificate = CACertificate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadCACertificatesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class LoadCACertificatesResponse {
        
        public LoadCACertificatesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDot1XConfigurations", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDot1XConfigurationsRequest {
        
        public GetDot1XConfigurationsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDot1XConfigurationsResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDot1XConfigurationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Dot1XConfiguration")]
        public OnvifBasic.device.Dot1XConfiguration[] Dot1XConfiguration;
        
        public GetDot1XConfigurationsResponse() {
        }
        
        public GetDot1XConfigurationsResponse(OnvifBasic.device.Dot1XConfiguration[] Dot1XConfiguration) {
            this.Dot1XConfiguration = Dot1XConfiguration;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteDot1XConfiguration", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteDot1XConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Dot1XConfigurationToken")]
        public string[] Dot1XConfigurationToken;
        
        public DeleteDot1XConfigurationRequest() {
        }
        
        public DeleteDot1XConfigurationRequest(string[] Dot1XConfigurationToken) {
            this.Dot1XConfigurationToken = Dot1XConfigurationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteDot1XConfigurationResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteDot1XConfigurationResponse {
        
        public DeleteDot1XConfigurationResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DeviceChannel : OnvifBasic.device.Device, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Service[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Service[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServiceCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServiceCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.DeviceServiceCapabilities Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.DeviceServiceCapabilities)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeviceInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Model {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string FirmwareVersion {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public string SerialNumber {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        public string HardwareId {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemDateAndTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemDateAndTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.SystemDateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.SystemDateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpgradeSystemFirmwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpgradeSystemFirmwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SystemRebootCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SystemRebootCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemBackupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemBackupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.BackupFile[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.BackupFile[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.SystemLog Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.SystemLog)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemSupportInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemSupportInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.SupportInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.SupportInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScopesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetScopesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Scope[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Scope[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveScopesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveScopesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDiscoveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDiscoveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.DiscoveryMode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.DiscoveryMode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRemoteDiscoveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRemoteDiscoveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.DiscoveryMode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.DiscoveryMode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDPAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDPAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.NetworkHost[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.NetworkHost[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEndpointReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEndpointReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlElement[] Any {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement[])(this.results[0]));
            }
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRemoteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRemoteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.RemoteUser Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.RemoteUser)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.User[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.User[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWsdlUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWsdlUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Capabilities Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Capabilities)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHostnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHostnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.HostnameInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.HostnameInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetHostnameFromDHCPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetHostnameFromDHCPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.DNSInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.DNSInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.NTPInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.NTPInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDynamicDNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDynamicDNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.DynamicDNSInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.DynamicDNSInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkInterfacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkInterfacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.NetworkInterface[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.NetworkInterface[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetNetworkInterfacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetNetworkInterfacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkProtocolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkProtocolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.NetworkProtocol[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.NetworkProtocol[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkDefaultGatewayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkDefaultGatewayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.NetworkGateway Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.NetworkGateway)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetZeroConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetZeroConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.NetworkZeroConfiguration Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.NetworkZeroConfiguration)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIPAddressFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIPAddressFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.IPAddressFilter Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.IPAddressFilter)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccessPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccessPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.BinaryData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.BinaryData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRelayOutputsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRelayOutputsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.RelayOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.RelayOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendAuxiliaryCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendAuxiliaryCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDot11CapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDot11CapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Dot11Capabilities Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Dot11Capabilities)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDot11StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDot11StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Dot11Status Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Dot11Status)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScanAvailableDot11NetworksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ScanAvailableDot11NetworksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Dot11AvailableNetworks[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Dot11AvailableNetworks[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemUrisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemUrisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string SupportInfoUri {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string SystemBackupUri {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public OnvifBasic.device.GetSystemUrisResponseExtension Extension {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.GetSystemUrisResponseExtension)(this.results[2]));
            }
        }
        
        public OnvifBasic.device.SystemLogUri[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.SystemLogUri[])(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartFirmwareUpgradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartFirmwareUpgradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string UploadDelay {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string ExpectedDownTime {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartSystemRestoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartSystemRestoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string ExpectedDownTime {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStorageConfigurationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStorageConfigurationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.StorageConfiguration[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.StorageConfiguration[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateStorageConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateStorageConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStorageConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStorageConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.StorageConfiguration Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.StorageConfiguration)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGeoLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGeoLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.LocationEntity[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.LocationEntity[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Certificate Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Certificate)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCertificatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCertificatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Certificate[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Certificate[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCertificatesStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCertificatesStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.CertificateStatus[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.CertificateStatus[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPkcs10RequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPkcs10RequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.BinaryData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.BinaryData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientCertificateModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientCertificateModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCACertificatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCACertificatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Certificate[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Certificate[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCertificateInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCertificateInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.CertificateInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.CertificateInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDot1XConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDot1XConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Dot1XConfiguration Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Dot1XConfiguration)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDot1XConfigurationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDot1XConfigurationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OnvifBasic.device.Dot1XConfiguration[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OnvifBasic.device.Dot1XConfiguration[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceClient : System.ServiceModel.ClientBase<OnvifBasic.device.Device>, OnvifBasic.device.Device {
        
        private BeginOperationDelegate onBeginGetServicesDelegate;
        
        private EndOperationDelegate onEndGetServicesDelegate;
        
        private System.Threading.SendOrPostCallback onGetServicesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServiceCapabilitiesDelegate;
        
        private EndOperationDelegate onEndGetServiceCapabilitiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetServiceCapabilitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeviceInformationDelegate;
        
        private EndOperationDelegate onEndGetDeviceInformationDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSystemDateAndTimeDelegate;
        
        private EndOperationDelegate onEndSetSystemDateAndTimeDelegate;
        
        private System.Threading.SendOrPostCallback onSetSystemDateAndTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemDateAndTimeDelegate;
        
        private EndOperationDelegate onEndGetSystemDateAndTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemDateAndTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSystemFactoryDefaultDelegate;
        
        private EndOperationDelegate onEndSetSystemFactoryDefaultDelegate;
        
        private System.Threading.SendOrPostCallback onSetSystemFactoryDefaultCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpgradeSystemFirmwareDelegate;
        
        private EndOperationDelegate onEndUpgradeSystemFirmwareDelegate;
        
        private System.Threading.SendOrPostCallback onUpgradeSystemFirmwareCompletedDelegate;
        
        private BeginOperationDelegate onBeginSystemRebootDelegate;
        
        private EndOperationDelegate onEndSystemRebootDelegate;
        
        private System.Threading.SendOrPostCallback onSystemRebootCompletedDelegate;
        
        private BeginOperationDelegate onBeginRestoreSystemDelegate;
        
        private EndOperationDelegate onEndRestoreSystemDelegate;
        
        private System.Threading.SendOrPostCallback onRestoreSystemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemBackupDelegate;
        
        private EndOperationDelegate onEndGetSystemBackupDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemBackupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemLogDelegate;
        
        private EndOperationDelegate onEndGetSystemLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemSupportInformationDelegate;
        
        private EndOperationDelegate onEndGetSystemSupportInformationDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemSupportInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetScopesDelegate;
        
        private EndOperationDelegate onEndGetScopesDelegate;
        
        private System.Threading.SendOrPostCallback onGetScopesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetScopesDelegate;
        
        private EndOperationDelegate onEndSetScopesDelegate;
        
        private System.Threading.SendOrPostCallback onSetScopesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddScopesDelegate;
        
        private EndOperationDelegate onEndAddScopesDelegate;
        
        private System.Threading.SendOrPostCallback onAddScopesCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveScopesDelegate;
        
        private EndOperationDelegate onEndRemoveScopesDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveScopesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDiscoveryModeDelegate;
        
        private EndOperationDelegate onEndGetDiscoveryModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetDiscoveryModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDiscoveryModeDelegate;
        
        private EndOperationDelegate onEndSetDiscoveryModeDelegate;
        
        private System.Threading.SendOrPostCallback onSetDiscoveryModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRemoteDiscoveryModeDelegate;
        
        private EndOperationDelegate onEndGetRemoteDiscoveryModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetRemoteDiscoveryModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRemoteDiscoveryModeDelegate;
        
        private EndOperationDelegate onEndSetRemoteDiscoveryModeDelegate;
        
        private System.Threading.SendOrPostCallback onSetRemoteDiscoveryModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDPAddressesDelegate;
        
        private EndOperationDelegate onEndGetDPAddressesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDPAddressesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDPAddressesDelegate;
        
        private EndOperationDelegate onEndSetDPAddressesDelegate;
        
        private System.Threading.SendOrPostCallback onSetDPAddressesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEndpointReferenceDelegate;
        
        private EndOperationDelegate onEndGetEndpointReferenceDelegate;
        
        private System.Threading.SendOrPostCallback onGetEndpointReferenceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRemoteUserDelegate;
        
        private EndOperationDelegate onEndGetRemoteUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetRemoteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRemoteUserDelegate;
        
        private EndOperationDelegate onEndSetRemoteUserDelegate;
        
        private System.Threading.SendOrPostCallback onSetRemoteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateUsersDelegate;
        
        private EndOperationDelegate onEndCreateUsersDelegate;
        
        private System.Threading.SendOrPostCallback onCreateUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUsersDelegate;
        
        private EndOperationDelegate onEndDeleteUsersDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetUserDelegate;
        
        private EndOperationDelegate onEndSetUserDelegate;
        
        private System.Threading.SendOrPostCallback onSetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWsdlUrlDelegate;
        
        private EndOperationDelegate onEndGetWsdlUrlDelegate;
        
        private System.Threading.SendOrPostCallback onGetWsdlUrlCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapabilitiesDelegate;
        
        private EndOperationDelegate onEndGetCapabilitiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapabilitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHostnameDelegate;
        
        private EndOperationDelegate onEndGetHostnameDelegate;
        
        private System.Threading.SendOrPostCallback onGetHostnameCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetHostnameDelegate;
        
        private EndOperationDelegate onEndSetHostnameDelegate;
        
        private System.Threading.SendOrPostCallback onSetHostnameCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetHostnameFromDHCPDelegate;
        
        private EndOperationDelegate onEndSetHostnameFromDHCPDelegate;
        
        private System.Threading.SendOrPostCallback onSetHostnameFromDHCPCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDNSDelegate;
        
        private EndOperationDelegate onEndGetDNSDelegate;
        
        private System.Threading.SendOrPostCallback onGetDNSCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDNSDelegate;
        
        private EndOperationDelegate onEndSetDNSDelegate;
        
        private System.Threading.SendOrPostCallback onSetDNSCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNTPDelegate;
        
        private EndOperationDelegate onEndGetNTPDelegate;
        
        private System.Threading.SendOrPostCallback onGetNTPCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetNTPDelegate;
        
        private EndOperationDelegate onEndSetNTPDelegate;
        
        private System.Threading.SendOrPostCallback onSetNTPCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDynamicDNSDelegate;
        
        private EndOperationDelegate onEndGetDynamicDNSDelegate;
        
        private System.Threading.SendOrPostCallback onGetDynamicDNSCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDynamicDNSDelegate;
        
        private EndOperationDelegate onEndSetDynamicDNSDelegate;
        
        private System.Threading.SendOrPostCallback onSetDynamicDNSCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNetworkInterfacesDelegate;
        
        private EndOperationDelegate onEndGetNetworkInterfacesDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkInterfacesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetNetworkInterfacesDelegate;
        
        private EndOperationDelegate onEndSetNetworkInterfacesDelegate;
        
        private System.Threading.SendOrPostCallback onSetNetworkInterfacesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNetworkProtocolsDelegate;
        
        private EndOperationDelegate onEndGetNetworkProtocolsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkProtocolsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetNetworkProtocolsDelegate;
        
        private EndOperationDelegate onEndSetNetworkProtocolsDelegate;
        
        private System.Threading.SendOrPostCallback onSetNetworkProtocolsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNetworkDefaultGatewayDelegate;
        
        private EndOperationDelegate onEndGetNetworkDefaultGatewayDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkDefaultGatewayCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetNetworkDefaultGatewayDelegate;
        
        private EndOperationDelegate onEndSetNetworkDefaultGatewayDelegate;
        
        private System.Threading.SendOrPostCallback onSetNetworkDefaultGatewayCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetZeroConfigurationDelegate;
        
        private EndOperationDelegate onEndGetZeroConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onGetZeroConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetZeroConfigurationDelegate;
        
        private EndOperationDelegate onEndSetZeroConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onSetZeroConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIPAddressFilterDelegate;
        
        private EndOperationDelegate onEndGetIPAddressFilterDelegate;
        
        private System.Threading.SendOrPostCallback onGetIPAddressFilterCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetIPAddressFilterDelegate;
        
        private EndOperationDelegate onEndSetIPAddressFilterDelegate;
        
        private System.Threading.SendOrPostCallback onSetIPAddressFilterCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddIPAddressFilterDelegate;
        
        private EndOperationDelegate onEndAddIPAddressFilterDelegate;
        
        private System.Threading.SendOrPostCallback onAddIPAddressFilterCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveIPAddressFilterDelegate;
        
        private EndOperationDelegate onEndRemoveIPAddressFilterDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveIPAddressFilterCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccessPolicyDelegate;
        
        private EndOperationDelegate onEndGetAccessPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccessPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetAccessPolicyDelegate;
        
        private EndOperationDelegate onEndSetAccessPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onSetAccessPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRelayOutputsDelegate;
        
        private EndOperationDelegate onEndGetRelayOutputsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRelayOutputsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRelayOutputSettingsDelegate;
        
        private EndOperationDelegate onEndSetRelayOutputSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onSetRelayOutputSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRelayOutputStateDelegate;
        
        private EndOperationDelegate onEndSetRelayOutputStateDelegate;
        
        private System.Threading.SendOrPostCallback onSetRelayOutputStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendAuxiliaryCommandDelegate;
        
        private EndOperationDelegate onEndSendAuxiliaryCommandDelegate;
        
        private System.Threading.SendOrPostCallback onSendAuxiliaryCommandCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDot11CapabilitiesDelegate;
        
        private EndOperationDelegate onEndGetDot11CapabilitiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDot11CapabilitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDot11StatusDelegate;
        
        private EndOperationDelegate onEndGetDot11StatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetDot11StatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginScanAvailableDot11NetworksDelegate;
        
        private EndOperationDelegate onEndScanAvailableDot11NetworksDelegate;
        
        private System.Threading.SendOrPostCallback onScanAvailableDot11NetworksCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemUrisDelegate;
        
        private EndOperationDelegate onEndGetSystemUrisDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemUrisCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartFirmwareUpgradeDelegate;
        
        private EndOperationDelegate onEndStartFirmwareUpgradeDelegate;
        
        private System.Threading.SendOrPostCallback onStartFirmwareUpgradeCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartSystemRestoreDelegate;
        
        private EndOperationDelegate onEndStartSystemRestoreDelegate;
        
        private System.Threading.SendOrPostCallback onStartSystemRestoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStorageConfigurationsDelegate;
        
        private EndOperationDelegate onEndGetStorageConfigurationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStorageConfigurationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateStorageConfigurationDelegate;
        
        private EndOperationDelegate onEndCreateStorageConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onCreateStorageConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStorageConfigurationDelegate;
        
        private EndOperationDelegate onEndGetStorageConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onGetStorageConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetStorageConfigurationDelegate;
        
        private EndOperationDelegate onEndSetStorageConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onSetStorageConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteStorageConfigurationDelegate;
        
        private EndOperationDelegate onEndDeleteStorageConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteStorageConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGeoLocationDelegate;
        
        private EndOperationDelegate onEndGetGeoLocationDelegate;
        
        private System.Threading.SendOrPostCallback onGetGeoLocationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetGeoLocationDelegate;
        
        private EndOperationDelegate onEndSetGeoLocationDelegate;
        
        private System.Threading.SendOrPostCallback onSetGeoLocationCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteGeoLocationDelegate;
        
        private EndOperationDelegate onEndDeleteGeoLocationDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteGeoLocationCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateCertificateDelegate;
        
        private EndOperationDelegate onEndCreateCertificateDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCertificateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCertificatesDelegate;
        
        private EndOperationDelegate onEndGetCertificatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCertificatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCertificatesStatusDelegate;
        
        private EndOperationDelegate onEndGetCertificatesStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetCertificatesStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCertificatesStatusDelegate;
        
        private EndOperationDelegate onEndSetCertificatesStatusDelegate;
        
        private System.Threading.SendOrPostCallback onSetCertificatesStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCertificatesDelegate;
        
        private EndOperationDelegate onEndDeleteCertificatesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCertificatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPkcs10RequestDelegate;
        
        private EndOperationDelegate onEndGetPkcs10RequestDelegate;
        
        private System.Threading.SendOrPostCallback onGetPkcs10RequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadCertificatesDelegate;
        
        private EndOperationDelegate onEndLoadCertificatesDelegate;
        
        private System.Threading.SendOrPostCallback onLoadCertificatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientCertificateModeDelegate;
        
        private EndOperationDelegate onEndGetClientCertificateModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientCertificateModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetClientCertificateModeDelegate;
        
        private EndOperationDelegate onEndSetClientCertificateModeDelegate;
        
        private System.Threading.SendOrPostCallback onSetClientCertificateModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCACertificatesDelegate;
        
        private EndOperationDelegate onEndGetCACertificatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCACertificatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadCertificateWithPrivateKeyDelegate;
        
        private EndOperationDelegate onEndLoadCertificateWithPrivateKeyDelegate;
        
        private System.Threading.SendOrPostCallback onLoadCertificateWithPrivateKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCertificateInformationDelegate;
        
        private EndOperationDelegate onEndGetCertificateInformationDelegate;
        
        private System.Threading.SendOrPostCallback onGetCertificateInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadCACertificatesDelegate;
        
        private EndOperationDelegate onEndLoadCACertificatesDelegate;
        
        private System.Threading.SendOrPostCallback onLoadCACertificatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateDot1XConfigurationDelegate;
        
        private EndOperationDelegate onEndCreateDot1XConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onCreateDot1XConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDot1XConfigurationDelegate;
        
        private EndOperationDelegate onEndSetDot1XConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onSetDot1XConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDot1XConfigurationDelegate;
        
        private EndOperationDelegate onEndGetDot1XConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onGetDot1XConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDot1XConfigurationsDelegate;
        
        private EndOperationDelegate onEndGetDot1XConfigurationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDot1XConfigurationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDot1XConfigurationDelegate;
        
        private EndOperationDelegate onEndDeleteDot1XConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDot1XConfigurationCompletedDelegate;
        
        public DeviceClient() {
        }
        
        public DeviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetServicesCompletedEventArgs> GetServicesCompleted;
        
        public event System.EventHandler<GetServiceCapabilitiesCompletedEventArgs> GetServiceCapabilitiesCompleted;
        
        public event System.EventHandler<GetDeviceInformationCompletedEventArgs> GetDeviceInformationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetSystemDateAndTimeCompleted;
        
        public event System.EventHandler<GetSystemDateAndTimeCompletedEventArgs> GetSystemDateAndTimeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetSystemFactoryDefaultCompleted;
        
        public event System.EventHandler<UpgradeSystemFirmwareCompletedEventArgs> UpgradeSystemFirmwareCompleted;
        
        public event System.EventHandler<SystemRebootCompletedEventArgs> SystemRebootCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RestoreSystemCompleted;
        
        public event System.EventHandler<GetSystemBackupCompletedEventArgs> GetSystemBackupCompleted;
        
        public event System.EventHandler<GetSystemLogCompletedEventArgs> GetSystemLogCompleted;
        
        public event System.EventHandler<GetSystemSupportInformationCompletedEventArgs> GetSystemSupportInformationCompleted;
        
        public event System.EventHandler<GetScopesCompletedEventArgs> GetScopesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetScopesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddScopesCompleted;
        
        public event System.EventHandler<RemoveScopesCompletedEventArgs> RemoveScopesCompleted;
        
        public event System.EventHandler<GetDiscoveryModeCompletedEventArgs> GetDiscoveryModeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetDiscoveryModeCompleted;
        
        public event System.EventHandler<GetRemoteDiscoveryModeCompletedEventArgs> GetRemoteDiscoveryModeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetRemoteDiscoveryModeCompleted;
        
        public event System.EventHandler<GetDPAddressesCompletedEventArgs> GetDPAddressesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetDPAddressesCompleted;
        
        public event System.EventHandler<GetEndpointReferenceCompletedEventArgs> GetEndpointReferenceCompleted;
        
        public event System.EventHandler<GetRemoteUserCompletedEventArgs> GetRemoteUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetRemoteUserCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateUsersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteUsersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetUserCompleted;
        
        public event System.EventHandler<GetWsdlUrlCompletedEventArgs> GetWsdlUrlCompleted;
        
        public event System.EventHandler<GetCapabilitiesCompletedEventArgs> GetCapabilitiesCompleted;
        
        public event System.EventHandler<GetHostnameCompletedEventArgs> GetHostnameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetHostnameCompleted;
        
        public event System.EventHandler<SetHostnameFromDHCPCompletedEventArgs> SetHostnameFromDHCPCompleted;
        
        public event System.EventHandler<GetDNSCompletedEventArgs> GetDNSCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetDNSCompleted;
        
        public event System.EventHandler<GetNTPCompletedEventArgs> GetNTPCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetNTPCompleted;
        
        public event System.EventHandler<GetDynamicDNSCompletedEventArgs> GetDynamicDNSCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetDynamicDNSCompleted;
        
        public event System.EventHandler<GetNetworkInterfacesCompletedEventArgs> GetNetworkInterfacesCompleted;
        
        public event System.EventHandler<SetNetworkInterfacesCompletedEventArgs> SetNetworkInterfacesCompleted;
        
        public event System.EventHandler<GetNetworkProtocolsCompletedEventArgs> GetNetworkProtocolsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetNetworkProtocolsCompleted;
        
        public event System.EventHandler<GetNetworkDefaultGatewayCompletedEventArgs> GetNetworkDefaultGatewayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetNetworkDefaultGatewayCompleted;
        
        public event System.EventHandler<GetZeroConfigurationCompletedEventArgs> GetZeroConfigurationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetZeroConfigurationCompleted;
        
        public event System.EventHandler<GetIPAddressFilterCompletedEventArgs> GetIPAddressFilterCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetIPAddressFilterCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddIPAddressFilterCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveIPAddressFilterCompleted;
        
        public event System.EventHandler<GetAccessPolicyCompletedEventArgs> GetAccessPolicyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetAccessPolicyCompleted;
        
        public event System.EventHandler<GetRelayOutputsCompletedEventArgs> GetRelayOutputsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetRelayOutputSettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetRelayOutputStateCompleted;
        
        public event System.EventHandler<SendAuxiliaryCommandCompletedEventArgs> SendAuxiliaryCommandCompleted;
        
        public event System.EventHandler<GetDot11CapabilitiesCompletedEventArgs> GetDot11CapabilitiesCompleted;
        
        public event System.EventHandler<GetDot11StatusCompletedEventArgs> GetDot11StatusCompleted;
        
        public event System.EventHandler<ScanAvailableDot11NetworksCompletedEventArgs> ScanAvailableDot11NetworksCompleted;
        
        public event System.EventHandler<GetSystemUrisCompletedEventArgs> GetSystemUrisCompleted;
        
        public event System.EventHandler<StartFirmwareUpgradeCompletedEventArgs> StartFirmwareUpgradeCompleted;
        
        public event System.EventHandler<StartSystemRestoreCompletedEventArgs> StartSystemRestoreCompleted;
        
        public event System.EventHandler<GetStorageConfigurationsCompletedEventArgs> GetStorageConfigurationsCompleted;
        
        public event System.EventHandler<CreateStorageConfigurationCompletedEventArgs> CreateStorageConfigurationCompleted;
        
        public event System.EventHandler<GetStorageConfigurationCompletedEventArgs> GetStorageConfigurationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetStorageConfigurationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteStorageConfigurationCompleted;
        
        public event System.EventHandler<GetGeoLocationCompletedEventArgs> GetGeoLocationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetGeoLocationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteGeoLocationCompleted;
        
        public event System.EventHandler<CreateCertificateCompletedEventArgs> CreateCertificateCompleted;
        
        public event System.EventHandler<GetCertificatesCompletedEventArgs> GetCertificatesCompleted;
        
        public event System.EventHandler<GetCertificatesStatusCompletedEventArgs> GetCertificatesStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetCertificatesStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCertificatesCompleted;
        
        public event System.EventHandler<GetPkcs10RequestCompletedEventArgs> GetPkcs10RequestCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoadCertificatesCompleted;
        
        public event System.EventHandler<GetClientCertificateModeCompletedEventArgs> GetClientCertificateModeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetClientCertificateModeCompleted;
        
        public event System.EventHandler<GetCACertificatesCompletedEventArgs> GetCACertificatesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoadCertificateWithPrivateKeyCompleted;
        
        public event System.EventHandler<GetCertificateInformationCompletedEventArgs> GetCertificateInformationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoadCACertificatesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateDot1XConfigurationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetDot1XConfigurationCompleted;
        
        public event System.EventHandler<GetDot1XConfigurationCompletedEventArgs> GetDot1XConfigurationCompleted;
        
        public event System.EventHandler<GetDot1XConfigurationsCompletedEventArgs> GetDot1XConfigurationsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDot1XConfigurationCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetServicesResponse OnvifBasic.device.Device.GetServices(OnvifBasic.device.GetServicesRequest request) {
            return base.Channel.GetServices(request);
        }
        
        public OnvifBasic.device.Service[] GetServices(bool IncludeCapability) {
            OnvifBasic.device.GetServicesRequest inValue = new OnvifBasic.device.GetServicesRequest();
            inValue.IncludeCapability = IncludeCapability;
            OnvifBasic.device.GetServicesResponse retVal = ((OnvifBasic.device.Device)(this)).GetServices(inValue);
            return retVal.Service;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetServices(OnvifBasic.device.GetServicesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServices(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServices(bool IncludeCapability, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetServicesRequest inValue = new OnvifBasic.device.GetServicesRequest();
            inValue.IncludeCapability = IncludeCapability;
            return ((OnvifBasic.device.Device)(this)).BeginGetServices(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetServicesResponse OnvifBasic.device.Device.EndGetServices(System.IAsyncResult result) {
            return base.Channel.EndGetServices(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Service[] EndGetServices(System.IAsyncResult result) {
            OnvifBasic.device.GetServicesResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetServices(result);
            return retVal.Service;
        }
        
        private System.IAsyncResult OnBeginGetServices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool IncludeCapability = ((bool)(inValues[0]));
            return this.BeginGetServices(IncludeCapability, callback, asyncState);
        }
        
        private object[] OnEndGetServices(System.IAsyncResult result) {
            OnvifBasic.device.Service[] retVal = this.EndGetServices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServicesCompleted(object state) {
            if ((this.GetServicesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServicesCompleted(this, new GetServicesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServicesAsync(bool IncludeCapability) {
            this.GetServicesAsync(IncludeCapability, null);
        }
        
        public void GetServicesAsync(bool IncludeCapability, object userState) {
            if ((this.onBeginGetServicesDelegate == null)) {
                this.onBeginGetServicesDelegate = new BeginOperationDelegate(this.OnBeginGetServices);
            }
            if ((this.onEndGetServicesDelegate == null)) {
                this.onEndGetServicesDelegate = new EndOperationDelegate(this.OnEndGetServices);
            }
            if ((this.onGetServicesCompletedDelegate == null)) {
                this.onGetServicesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServicesCompleted);
            }
            base.InvokeAsync(this.onBeginGetServicesDelegate, new object[] {
                        IncludeCapability}, this.onEndGetServicesDelegate, this.onGetServicesCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.DeviceServiceCapabilities GetServiceCapabilities() {
            return base.Channel.GetServiceCapabilities();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServiceCapabilities(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServiceCapabilities(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.DeviceServiceCapabilities EndGetServiceCapabilities(System.IAsyncResult result) {
            return base.Channel.EndGetServiceCapabilities(result);
        }
        
        private System.IAsyncResult OnBeginGetServiceCapabilities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetServiceCapabilities(callback, asyncState);
        }
        
        private object[] OnEndGetServiceCapabilities(System.IAsyncResult result) {
            OnvifBasic.device.DeviceServiceCapabilities retVal = this.EndGetServiceCapabilities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServiceCapabilitiesCompleted(object state) {
            if ((this.GetServiceCapabilitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServiceCapabilitiesCompleted(this, new GetServiceCapabilitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServiceCapabilitiesAsync() {
            this.GetServiceCapabilitiesAsync(null);
        }
        
        public void GetServiceCapabilitiesAsync(object userState) {
            if ((this.onBeginGetServiceCapabilitiesDelegate == null)) {
                this.onBeginGetServiceCapabilitiesDelegate = new BeginOperationDelegate(this.OnBeginGetServiceCapabilities);
            }
            if ((this.onEndGetServiceCapabilitiesDelegate == null)) {
                this.onEndGetServiceCapabilitiesDelegate = new EndOperationDelegate(this.OnEndGetServiceCapabilities);
            }
            if ((this.onGetServiceCapabilitiesCompletedDelegate == null)) {
                this.onGetServiceCapabilitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServiceCapabilitiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetServiceCapabilitiesDelegate, null, this.onEndGetServiceCapabilitiesDelegate, this.onGetServiceCapabilitiesCompletedDelegate, userState);
        }
        
        public string GetDeviceInformation(out string Model, out string FirmwareVersion, out string SerialNumber, out string HardwareId) {
            return base.Channel.GetDeviceInformation(out Model, out FirmwareVersion, out SerialNumber, out HardwareId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeviceInformation(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceInformation(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDeviceInformation(out string Model, out string FirmwareVersion, out string SerialNumber, out string HardwareId, System.IAsyncResult result) {
            return base.Channel.EndGetDeviceInformation(out Model, out FirmwareVersion, out SerialNumber, out HardwareId, result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDeviceInformation(callback, asyncState);
        }
        
        private object[] OnEndGetDeviceInformation(System.IAsyncResult result) {
            string Model = this.GetDefaultValueForInitialization<string>();
            string FirmwareVersion = this.GetDefaultValueForInitialization<string>();
            string SerialNumber = this.GetDefaultValueForInitialization<string>();
            string HardwareId = this.GetDefaultValueForInitialization<string>();
            string retVal = this.EndGetDeviceInformation(out Model, out FirmwareVersion, out SerialNumber, out HardwareId, result);
            return new object[] {
                    Model,
                    FirmwareVersion,
                    SerialNumber,
                    HardwareId,
                    retVal};
        }
        
        private void OnGetDeviceInformationCompleted(object state) {
            if ((this.GetDeviceInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceInformationCompleted(this, new GetDeviceInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceInformationAsync() {
            this.GetDeviceInformationAsync(null);
        }
        
        public void GetDeviceInformationAsync(object userState) {
            if ((this.onBeginGetDeviceInformationDelegate == null)) {
                this.onBeginGetDeviceInformationDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceInformation);
            }
            if ((this.onEndGetDeviceInformationDelegate == null)) {
                this.onEndGetDeviceInformationDelegate = new EndOperationDelegate(this.OnEndGetDeviceInformation);
            }
            if ((this.onGetDeviceInformationCompletedDelegate == null)) {
                this.onGetDeviceInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceInformationCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceInformationDelegate, null, this.onEndGetDeviceInformationDelegate, this.onGetDeviceInformationCompletedDelegate, userState);
        }
        
        public void SetSystemDateAndTime(OnvifBasic.device.SetDateTimeType DateTimeType, bool DaylightSavings, OnvifBasic.device.TimeZone TimeZone, OnvifBasic.device.DateTime UTCDateTime) {
            base.Channel.SetSystemDateAndTime(DateTimeType, DaylightSavings, TimeZone, UTCDateTime);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSystemDateAndTime(OnvifBasic.device.SetDateTimeType DateTimeType, bool DaylightSavings, OnvifBasic.device.TimeZone TimeZone, OnvifBasic.device.DateTime UTCDateTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSystemDateAndTime(DateTimeType, DaylightSavings, TimeZone, UTCDateTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetSystemDateAndTime(System.IAsyncResult result) {
            base.Channel.EndSetSystemDateAndTime(result);
        }
        
        private System.IAsyncResult OnBeginSetSystemDateAndTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetDateTimeType DateTimeType = ((OnvifBasic.device.SetDateTimeType)(inValues[0]));
            bool DaylightSavings = ((bool)(inValues[1]));
            OnvifBasic.device.TimeZone TimeZone = ((OnvifBasic.device.TimeZone)(inValues[2]));
            OnvifBasic.device.DateTime UTCDateTime = ((OnvifBasic.device.DateTime)(inValues[3]));
            return this.BeginSetSystemDateAndTime(DateTimeType, DaylightSavings, TimeZone, UTCDateTime, callback, asyncState);
        }
        
        private object[] OnEndSetSystemDateAndTime(System.IAsyncResult result) {
            this.EndSetSystemDateAndTime(result);
            return null;
        }
        
        private void OnSetSystemDateAndTimeCompleted(object state) {
            if ((this.SetSystemDateAndTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSystemDateAndTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSystemDateAndTimeAsync(OnvifBasic.device.SetDateTimeType DateTimeType, bool DaylightSavings, OnvifBasic.device.TimeZone TimeZone, OnvifBasic.device.DateTime UTCDateTime) {
            this.SetSystemDateAndTimeAsync(DateTimeType, DaylightSavings, TimeZone, UTCDateTime, null);
        }
        
        public void SetSystemDateAndTimeAsync(OnvifBasic.device.SetDateTimeType DateTimeType, bool DaylightSavings, OnvifBasic.device.TimeZone TimeZone, OnvifBasic.device.DateTime UTCDateTime, object userState) {
            if ((this.onBeginSetSystemDateAndTimeDelegate == null)) {
                this.onBeginSetSystemDateAndTimeDelegate = new BeginOperationDelegate(this.OnBeginSetSystemDateAndTime);
            }
            if ((this.onEndSetSystemDateAndTimeDelegate == null)) {
                this.onEndSetSystemDateAndTimeDelegate = new EndOperationDelegate(this.OnEndSetSystemDateAndTime);
            }
            if ((this.onSetSystemDateAndTimeCompletedDelegate == null)) {
                this.onSetSystemDateAndTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSystemDateAndTimeCompleted);
            }
            base.InvokeAsync(this.onBeginSetSystemDateAndTimeDelegate, new object[] {
                        DateTimeType,
                        DaylightSavings,
                        TimeZone,
                        UTCDateTime}, this.onEndSetSystemDateAndTimeDelegate, this.onSetSystemDateAndTimeCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.SystemDateTime GetSystemDateAndTime() {
            return base.Channel.GetSystemDateAndTime();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemDateAndTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemDateAndTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.SystemDateTime EndGetSystemDateAndTime(System.IAsyncResult result) {
            return base.Channel.EndGetSystemDateAndTime(result);
        }
        
        private System.IAsyncResult OnBeginGetSystemDateAndTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSystemDateAndTime(callback, asyncState);
        }
        
        private object[] OnEndGetSystemDateAndTime(System.IAsyncResult result) {
            OnvifBasic.device.SystemDateTime retVal = this.EndGetSystemDateAndTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSystemDateAndTimeCompleted(object state) {
            if ((this.GetSystemDateAndTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemDateAndTimeCompleted(this, new GetSystemDateAndTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemDateAndTimeAsync() {
            this.GetSystemDateAndTimeAsync(null);
        }
        
        public void GetSystemDateAndTimeAsync(object userState) {
            if ((this.onBeginGetSystemDateAndTimeDelegate == null)) {
                this.onBeginGetSystemDateAndTimeDelegate = new BeginOperationDelegate(this.OnBeginGetSystemDateAndTime);
            }
            if ((this.onEndGetSystemDateAndTimeDelegate == null)) {
                this.onEndGetSystemDateAndTimeDelegate = new EndOperationDelegate(this.OnEndGetSystemDateAndTime);
            }
            if ((this.onGetSystemDateAndTimeCompletedDelegate == null)) {
                this.onGetSystemDateAndTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemDateAndTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemDateAndTimeDelegate, null, this.onEndGetSystemDateAndTimeDelegate, this.onGetSystemDateAndTimeCompletedDelegate, userState);
        }
        
        public void SetSystemFactoryDefault(OnvifBasic.device.FactoryDefaultType FactoryDefault) {
            base.Channel.SetSystemFactoryDefault(FactoryDefault);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSystemFactoryDefault(OnvifBasic.device.FactoryDefaultType FactoryDefault, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSystemFactoryDefault(FactoryDefault, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetSystemFactoryDefault(System.IAsyncResult result) {
            base.Channel.EndSetSystemFactoryDefault(result);
        }
        
        private System.IAsyncResult OnBeginSetSystemFactoryDefault(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.FactoryDefaultType FactoryDefault = ((OnvifBasic.device.FactoryDefaultType)(inValues[0]));
            return this.BeginSetSystemFactoryDefault(FactoryDefault, callback, asyncState);
        }
        
        private object[] OnEndSetSystemFactoryDefault(System.IAsyncResult result) {
            this.EndSetSystemFactoryDefault(result);
            return null;
        }
        
        private void OnSetSystemFactoryDefaultCompleted(object state) {
            if ((this.SetSystemFactoryDefaultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSystemFactoryDefaultCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSystemFactoryDefaultAsync(OnvifBasic.device.FactoryDefaultType FactoryDefault) {
            this.SetSystemFactoryDefaultAsync(FactoryDefault, null);
        }
        
        public void SetSystemFactoryDefaultAsync(OnvifBasic.device.FactoryDefaultType FactoryDefault, object userState) {
            if ((this.onBeginSetSystemFactoryDefaultDelegate == null)) {
                this.onBeginSetSystemFactoryDefaultDelegate = new BeginOperationDelegate(this.OnBeginSetSystemFactoryDefault);
            }
            if ((this.onEndSetSystemFactoryDefaultDelegate == null)) {
                this.onEndSetSystemFactoryDefaultDelegate = new EndOperationDelegate(this.OnEndSetSystemFactoryDefault);
            }
            if ((this.onSetSystemFactoryDefaultCompletedDelegate == null)) {
                this.onSetSystemFactoryDefaultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSystemFactoryDefaultCompleted);
            }
            base.InvokeAsync(this.onBeginSetSystemFactoryDefaultDelegate, new object[] {
                        FactoryDefault}, this.onEndSetSystemFactoryDefaultDelegate, this.onSetSystemFactoryDefaultCompletedDelegate, userState);
        }
        
        public string UpgradeSystemFirmware(OnvifBasic.device.AttachmentData Firmware) {
            return base.Channel.UpgradeSystemFirmware(Firmware);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpgradeSystemFirmware(OnvifBasic.device.AttachmentData Firmware, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpgradeSystemFirmware(Firmware, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUpgradeSystemFirmware(System.IAsyncResult result) {
            return base.Channel.EndUpgradeSystemFirmware(result);
        }
        
        private System.IAsyncResult OnBeginUpgradeSystemFirmware(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.AttachmentData Firmware = ((OnvifBasic.device.AttachmentData)(inValues[0]));
            return this.BeginUpgradeSystemFirmware(Firmware, callback, asyncState);
        }
        
        private object[] OnEndUpgradeSystemFirmware(System.IAsyncResult result) {
            string retVal = this.EndUpgradeSystemFirmware(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpgradeSystemFirmwareCompleted(object state) {
            if ((this.UpgradeSystemFirmwareCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpgradeSystemFirmwareCompleted(this, new UpgradeSystemFirmwareCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpgradeSystemFirmwareAsync(OnvifBasic.device.AttachmentData Firmware) {
            this.UpgradeSystemFirmwareAsync(Firmware, null);
        }
        
        public void UpgradeSystemFirmwareAsync(OnvifBasic.device.AttachmentData Firmware, object userState) {
            if ((this.onBeginUpgradeSystemFirmwareDelegate == null)) {
                this.onBeginUpgradeSystemFirmwareDelegate = new BeginOperationDelegate(this.OnBeginUpgradeSystemFirmware);
            }
            if ((this.onEndUpgradeSystemFirmwareDelegate == null)) {
                this.onEndUpgradeSystemFirmwareDelegate = new EndOperationDelegate(this.OnEndUpgradeSystemFirmware);
            }
            if ((this.onUpgradeSystemFirmwareCompletedDelegate == null)) {
                this.onUpgradeSystemFirmwareCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpgradeSystemFirmwareCompleted);
            }
            base.InvokeAsync(this.onBeginUpgradeSystemFirmwareDelegate, new object[] {
                        Firmware}, this.onEndUpgradeSystemFirmwareDelegate, this.onUpgradeSystemFirmwareCompletedDelegate, userState);
        }
        
        public string SystemReboot() {
            return base.Channel.SystemReboot();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSystemReboot(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSystemReboot(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSystemReboot(System.IAsyncResult result) {
            return base.Channel.EndSystemReboot(result);
        }
        
        private System.IAsyncResult OnBeginSystemReboot(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginSystemReboot(callback, asyncState);
        }
        
        private object[] OnEndSystemReboot(System.IAsyncResult result) {
            string retVal = this.EndSystemReboot(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSystemRebootCompleted(object state) {
            if ((this.SystemRebootCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SystemRebootCompleted(this, new SystemRebootCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SystemRebootAsync() {
            this.SystemRebootAsync(null);
        }
        
        public void SystemRebootAsync(object userState) {
            if ((this.onBeginSystemRebootDelegate == null)) {
                this.onBeginSystemRebootDelegate = new BeginOperationDelegate(this.OnBeginSystemReboot);
            }
            if ((this.onEndSystemRebootDelegate == null)) {
                this.onEndSystemRebootDelegate = new EndOperationDelegate(this.OnEndSystemReboot);
            }
            if ((this.onSystemRebootCompletedDelegate == null)) {
                this.onSystemRebootCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSystemRebootCompleted);
            }
            base.InvokeAsync(this.onBeginSystemRebootDelegate, null, this.onEndSystemRebootDelegate, this.onSystemRebootCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.RestoreSystemResponse OnvifBasic.device.Device.RestoreSystem(OnvifBasic.device.RestoreSystemRequest request) {
            return base.Channel.RestoreSystem(request);
        }
        
        public void RestoreSystem(OnvifBasic.device.BackupFile[] BackupFiles) {
            OnvifBasic.device.RestoreSystemRequest inValue = new OnvifBasic.device.RestoreSystemRequest();
            inValue.BackupFiles = BackupFiles;
            OnvifBasic.device.RestoreSystemResponse retVal = ((OnvifBasic.device.Device)(this)).RestoreSystem(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginRestoreSystem(OnvifBasic.device.RestoreSystemRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRestoreSystem(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRestoreSystem(OnvifBasic.device.BackupFile[] BackupFiles, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.RestoreSystemRequest inValue = new OnvifBasic.device.RestoreSystemRequest();
            inValue.BackupFiles = BackupFiles;
            return ((OnvifBasic.device.Device)(this)).BeginRestoreSystem(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.RestoreSystemResponse OnvifBasic.device.Device.EndRestoreSystem(System.IAsyncResult result) {
            return base.Channel.EndRestoreSystem(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRestoreSystem(System.IAsyncResult result) {
            OnvifBasic.device.RestoreSystemResponse retVal = ((OnvifBasic.device.Device)(this)).EndRestoreSystem(result);
        }
        
        private System.IAsyncResult OnBeginRestoreSystem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.BackupFile[] BackupFiles = ((OnvifBasic.device.BackupFile[])(inValues[0]));
            return this.BeginRestoreSystem(BackupFiles, callback, asyncState);
        }
        
        private object[] OnEndRestoreSystem(System.IAsyncResult result) {
            this.EndRestoreSystem(result);
            return null;
        }
        
        private void OnRestoreSystemCompleted(object state) {
            if ((this.RestoreSystemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RestoreSystemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RestoreSystemAsync(OnvifBasic.device.BackupFile[] BackupFiles) {
            this.RestoreSystemAsync(BackupFiles, null);
        }
        
        public void RestoreSystemAsync(OnvifBasic.device.BackupFile[] BackupFiles, object userState) {
            if ((this.onBeginRestoreSystemDelegate == null)) {
                this.onBeginRestoreSystemDelegate = new BeginOperationDelegate(this.OnBeginRestoreSystem);
            }
            if ((this.onEndRestoreSystemDelegate == null)) {
                this.onEndRestoreSystemDelegate = new EndOperationDelegate(this.OnEndRestoreSystem);
            }
            if ((this.onRestoreSystemCompletedDelegate == null)) {
                this.onRestoreSystemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRestoreSystemCompleted);
            }
            base.InvokeAsync(this.onBeginRestoreSystemDelegate, new object[] {
                        BackupFiles}, this.onEndRestoreSystemDelegate, this.onRestoreSystemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetSystemBackupResponse OnvifBasic.device.Device.GetSystemBackup(OnvifBasic.device.GetSystemBackupRequest request) {
            return base.Channel.GetSystemBackup(request);
        }
        
        public OnvifBasic.device.BackupFile[] GetSystemBackup() {
            OnvifBasic.device.GetSystemBackupRequest inValue = new OnvifBasic.device.GetSystemBackupRequest();
            OnvifBasic.device.GetSystemBackupResponse retVal = ((OnvifBasic.device.Device)(this)).GetSystemBackup(inValue);
            return retVal.BackupFiles;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetSystemBackup(OnvifBasic.device.GetSystemBackupRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemBackup(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemBackup(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetSystemBackupRequest inValue = new OnvifBasic.device.GetSystemBackupRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetSystemBackup(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetSystemBackupResponse OnvifBasic.device.Device.EndGetSystemBackup(System.IAsyncResult result) {
            return base.Channel.EndGetSystemBackup(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.BackupFile[] EndGetSystemBackup(System.IAsyncResult result) {
            OnvifBasic.device.GetSystemBackupResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetSystemBackup(result);
            return retVal.BackupFiles;
        }
        
        private System.IAsyncResult OnBeginGetSystemBackup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSystemBackup(callback, asyncState);
        }
        
        private object[] OnEndGetSystemBackup(System.IAsyncResult result) {
            OnvifBasic.device.BackupFile[] retVal = this.EndGetSystemBackup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSystemBackupCompleted(object state) {
            if ((this.GetSystemBackupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemBackupCompleted(this, new GetSystemBackupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemBackupAsync() {
            this.GetSystemBackupAsync(null);
        }
        
        public void GetSystemBackupAsync(object userState) {
            if ((this.onBeginGetSystemBackupDelegate == null)) {
                this.onBeginGetSystemBackupDelegate = new BeginOperationDelegate(this.OnBeginGetSystemBackup);
            }
            if ((this.onEndGetSystemBackupDelegate == null)) {
                this.onEndGetSystemBackupDelegate = new EndOperationDelegate(this.OnEndGetSystemBackup);
            }
            if ((this.onGetSystemBackupCompletedDelegate == null)) {
                this.onGetSystemBackupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemBackupCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemBackupDelegate, null, this.onEndGetSystemBackupDelegate, this.onGetSystemBackupCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.SystemLog GetSystemLog(OnvifBasic.device.SystemLogType LogType) {
            return base.Channel.GetSystemLog(LogType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemLog(OnvifBasic.device.SystemLogType LogType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemLog(LogType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.SystemLog EndGetSystemLog(System.IAsyncResult result) {
            return base.Channel.EndGetSystemLog(result);
        }
        
        private System.IAsyncResult OnBeginGetSystemLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SystemLogType LogType = ((OnvifBasic.device.SystemLogType)(inValues[0]));
            return this.BeginGetSystemLog(LogType, callback, asyncState);
        }
        
        private object[] OnEndGetSystemLog(System.IAsyncResult result) {
            OnvifBasic.device.SystemLog retVal = this.EndGetSystemLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSystemLogCompleted(object state) {
            if ((this.GetSystemLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemLogCompleted(this, new GetSystemLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemLogAsync(OnvifBasic.device.SystemLogType LogType) {
            this.GetSystemLogAsync(LogType, null);
        }
        
        public void GetSystemLogAsync(OnvifBasic.device.SystemLogType LogType, object userState) {
            if ((this.onBeginGetSystemLogDelegate == null)) {
                this.onBeginGetSystemLogDelegate = new BeginOperationDelegate(this.OnBeginGetSystemLog);
            }
            if ((this.onEndGetSystemLogDelegate == null)) {
                this.onEndGetSystemLogDelegate = new EndOperationDelegate(this.OnEndGetSystemLog);
            }
            if ((this.onGetSystemLogCompletedDelegate == null)) {
                this.onGetSystemLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemLogDelegate, new object[] {
                        LogType}, this.onEndGetSystemLogDelegate, this.onGetSystemLogCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.SupportInformation GetSystemSupportInformation() {
            return base.Channel.GetSystemSupportInformation();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemSupportInformation(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemSupportInformation(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.SupportInformation EndGetSystemSupportInformation(System.IAsyncResult result) {
            return base.Channel.EndGetSystemSupportInformation(result);
        }
        
        private System.IAsyncResult OnBeginGetSystemSupportInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSystemSupportInformation(callback, asyncState);
        }
        
        private object[] OnEndGetSystemSupportInformation(System.IAsyncResult result) {
            OnvifBasic.device.SupportInformation retVal = this.EndGetSystemSupportInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSystemSupportInformationCompleted(object state) {
            if ((this.GetSystemSupportInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemSupportInformationCompleted(this, new GetSystemSupportInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemSupportInformationAsync() {
            this.GetSystemSupportInformationAsync(null);
        }
        
        public void GetSystemSupportInformationAsync(object userState) {
            if ((this.onBeginGetSystemSupportInformationDelegate == null)) {
                this.onBeginGetSystemSupportInformationDelegate = new BeginOperationDelegate(this.OnBeginGetSystemSupportInformation);
            }
            if ((this.onEndGetSystemSupportInformationDelegate == null)) {
                this.onEndGetSystemSupportInformationDelegate = new EndOperationDelegate(this.OnEndGetSystemSupportInformation);
            }
            if ((this.onGetSystemSupportInformationCompletedDelegate == null)) {
                this.onGetSystemSupportInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemSupportInformationCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemSupportInformationDelegate, null, this.onEndGetSystemSupportInformationDelegate, this.onGetSystemSupportInformationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetScopesResponse OnvifBasic.device.Device.GetScopes(OnvifBasic.device.GetScopesRequest request) {
            return base.Channel.GetScopes(request);
        }
        
        public OnvifBasic.device.Scope[] GetScopes() {
            OnvifBasic.device.GetScopesRequest inValue = new OnvifBasic.device.GetScopesRequest();
            OnvifBasic.device.GetScopesResponse retVal = ((OnvifBasic.device.Device)(this)).GetScopes(inValue);
            return retVal.Scopes;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetScopes(OnvifBasic.device.GetScopesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetScopes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetScopes(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetScopesRequest inValue = new OnvifBasic.device.GetScopesRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetScopes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetScopesResponse OnvifBasic.device.Device.EndGetScopes(System.IAsyncResult result) {
            return base.Channel.EndGetScopes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Scope[] EndGetScopes(System.IAsyncResult result) {
            OnvifBasic.device.GetScopesResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetScopes(result);
            return retVal.Scopes;
        }
        
        private System.IAsyncResult OnBeginGetScopes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetScopes(callback, asyncState);
        }
        
        private object[] OnEndGetScopes(System.IAsyncResult result) {
            OnvifBasic.device.Scope[] retVal = this.EndGetScopes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetScopesCompleted(object state) {
            if ((this.GetScopesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetScopesCompleted(this, new GetScopesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetScopesAsync() {
            this.GetScopesAsync(null);
        }
        
        public void GetScopesAsync(object userState) {
            if ((this.onBeginGetScopesDelegate == null)) {
                this.onBeginGetScopesDelegate = new BeginOperationDelegate(this.OnBeginGetScopes);
            }
            if ((this.onEndGetScopesDelegate == null)) {
                this.onEndGetScopesDelegate = new EndOperationDelegate(this.OnEndGetScopes);
            }
            if ((this.onGetScopesCompletedDelegate == null)) {
                this.onGetScopesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetScopesCompleted);
            }
            base.InvokeAsync(this.onBeginGetScopesDelegate, null, this.onEndGetScopesDelegate, this.onGetScopesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetScopesResponse OnvifBasic.device.Device.SetScopes(OnvifBasic.device.SetScopesRequest request) {
            return base.Channel.SetScopes(request);
        }
        
        public void SetScopes(string[] Scopes) {
            OnvifBasic.device.SetScopesRequest inValue = new OnvifBasic.device.SetScopesRequest();
            inValue.Scopes = Scopes;
            OnvifBasic.device.SetScopesResponse retVal = ((OnvifBasic.device.Device)(this)).SetScopes(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetScopes(OnvifBasic.device.SetScopesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetScopes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetScopes(string[] Scopes, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetScopesRequest inValue = new OnvifBasic.device.SetScopesRequest();
            inValue.Scopes = Scopes;
            return ((OnvifBasic.device.Device)(this)).BeginSetScopes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetScopesResponse OnvifBasic.device.Device.EndSetScopes(System.IAsyncResult result) {
            return base.Channel.EndSetScopes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetScopes(System.IAsyncResult result) {
            OnvifBasic.device.SetScopesResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetScopes(result);
        }
        
        private System.IAsyncResult OnBeginSetScopes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] Scopes = ((string[])(inValues[0]));
            return this.BeginSetScopes(Scopes, callback, asyncState);
        }
        
        private object[] OnEndSetScopes(System.IAsyncResult result) {
            this.EndSetScopes(result);
            return null;
        }
        
        private void OnSetScopesCompleted(object state) {
            if ((this.SetScopesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetScopesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetScopesAsync(string[] Scopes) {
            this.SetScopesAsync(Scopes, null);
        }
        
        public void SetScopesAsync(string[] Scopes, object userState) {
            if ((this.onBeginSetScopesDelegate == null)) {
                this.onBeginSetScopesDelegate = new BeginOperationDelegate(this.OnBeginSetScopes);
            }
            if ((this.onEndSetScopesDelegate == null)) {
                this.onEndSetScopesDelegate = new EndOperationDelegate(this.OnEndSetScopes);
            }
            if ((this.onSetScopesCompletedDelegate == null)) {
                this.onSetScopesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetScopesCompleted);
            }
            base.InvokeAsync(this.onBeginSetScopesDelegate, new object[] {
                        Scopes}, this.onEndSetScopesDelegate, this.onSetScopesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.AddScopesResponse OnvifBasic.device.Device.AddScopes(OnvifBasic.device.AddScopesRequest request) {
            return base.Channel.AddScopes(request);
        }
        
        public void AddScopes(string[] ScopeItem) {
            OnvifBasic.device.AddScopesRequest inValue = new OnvifBasic.device.AddScopesRequest();
            inValue.ScopeItem = ScopeItem;
            OnvifBasic.device.AddScopesResponse retVal = ((OnvifBasic.device.Device)(this)).AddScopes(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginAddScopes(OnvifBasic.device.AddScopesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddScopes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddScopes(string[] ScopeItem, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.AddScopesRequest inValue = new OnvifBasic.device.AddScopesRequest();
            inValue.ScopeItem = ScopeItem;
            return ((OnvifBasic.device.Device)(this)).BeginAddScopes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.AddScopesResponse OnvifBasic.device.Device.EndAddScopes(System.IAsyncResult result) {
            return base.Channel.EndAddScopes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddScopes(System.IAsyncResult result) {
            OnvifBasic.device.AddScopesResponse retVal = ((OnvifBasic.device.Device)(this)).EndAddScopes(result);
        }
        
        private System.IAsyncResult OnBeginAddScopes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] ScopeItem = ((string[])(inValues[0]));
            return this.BeginAddScopes(ScopeItem, callback, asyncState);
        }
        
        private object[] OnEndAddScopes(System.IAsyncResult result) {
            this.EndAddScopes(result);
            return null;
        }
        
        private void OnAddScopesCompleted(object state) {
            if ((this.AddScopesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddScopesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddScopesAsync(string[] ScopeItem) {
            this.AddScopesAsync(ScopeItem, null);
        }
        
        public void AddScopesAsync(string[] ScopeItem, object userState) {
            if ((this.onBeginAddScopesDelegate == null)) {
                this.onBeginAddScopesDelegate = new BeginOperationDelegate(this.OnBeginAddScopes);
            }
            if ((this.onEndAddScopesDelegate == null)) {
                this.onEndAddScopesDelegate = new EndOperationDelegate(this.OnEndAddScopes);
            }
            if ((this.onAddScopesCompletedDelegate == null)) {
                this.onAddScopesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddScopesCompleted);
            }
            base.InvokeAsync(this.onBeginAddScopesDelegate, new object[] {
                        ScopeItem}, this.onEndAddScopesDelegate, this.onAddScopesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.RemoveScopesResponse OnvifBasic.device.Device.RemoveScopes(OnvifBasic.device.RemoveScopesRequest request) {
            return base.Channel.RemoveScopes(request);
        }
        
        public void RemoveScopes(ref string[] ScopeItem) {
            OnvifBasic.device.RemoveScopesRequest inValue = new OnvifBasic.device.RemoveScopesRequest();
            inValue.ScopeItem = ScopeItem;
            OnvifBasic.device.RemoveScopesResponse retVal = ((OnvifBasic.device.Device)(this)).RemoveScopes(inValue);
            ScopeItem = retVal.ScopeItem;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginRemoveScopes(OnvifBasic.device.RemoveScopesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveScopes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveScopes(string[] ScopeItem, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.RemoveScopesRequest inValue = new OnvifBasic.device.RemoveScopesRequest();
            inValue.ScopeItem = ScopeItem;
            return ((OnvifBasic.device.Device)(this)).BeginRemoveScopes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.RemoveScopesResponse OnvifBasic.device.Device.EndRemoveScopes(System.IAsyncResult result) {
            return base.Channel.EndRemoveScopes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string[] EndRemoveScopes(System.IAsyncResult result) {
            OnvifBasic.device.RemoveScopesResponse retVal = ((OnvifBasic.device.Device)(this)).EndRemoveScopes(result);
            return retVal.ScopeItem;
        }
        
        private System.IAsyncResult OnBeginRemoveScopes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] ScopeItem = ((string[])(inValues[0]));
            return this.BeginRemoveScopes(ScopeItem, callback, asyncState);
        }
        
        private object[] OnEndRemoveScopes(System.IAsyncResult result) {
            string[] retVal = this.EndRemoveScopes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveScopesCompleted(object state) {
            if ((this.RemoveScopesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveScopesCompleted(this, new RemoveScopesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveScopesAsync(string[] ScopeItem) {
            this.RemoveScopesAsync(ScopeItem, null);
        }
        
        public void RemoveScopesAsync(string[] ScopeItem, object userState) {
            if ((this.onBeginRemoveScopesDelegate == null)) {
                this.onBeginRemoveScopesDelegate = new BeginOperationDelegate(this.OnBeginRemoveScopes);
            }
            if ((this.onEndRemoveScopesDelegate == null)) {
                this.onEndRemoveScopesDelegate = new EndOperationDelegate(this.OnEndRemoveScopes);
            }
            if ((this.onRemoveScopesCompletedDelegate == null)) {
                this.onRemoveScopesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveScopesCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveScopesDelegate, new object[] {
                        ScopeItem}, this.onEndRemoveScopesDelegate, this.onRemoveScopesCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.DiscoveryMode GetDiscoveryMode() {
            return base.Channel.GetDiscoveryMode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDiscoveryMode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDiscoveryMode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.DiscoveryMode EndGetDiscoveryMode(System.IAsyncResult result) {
            return base.Channel.EndGetDiscoveryMode(result);
        }
        
        private System.IAsyncResult OnBeginGetDiscoveryMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDiscoveryMode(callback, asyncState);
        }
        
        private object[] OnEndGetDiscoveryMode(System.IAsyncResult result) {
            OnvifBasic.device.DiscoveryMode retVal = this.EndGetDiscoveryMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDiscoveryModeCompleted(object state) {
            if ((this.GetDiscoveryModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDiscoveryModeCompleted(this, new GetDiscoveryModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDiscoveryModeAsync() {
            this.GetDiscoveryModeAsync(null);
        }
        
        public void GetDiscoveryModeAsync(object userState) {
            if ((this.onBeginGetDiscoveryModeDelegate == null)) {
                this.onBeginGetDiscoveryModeDelegate = new BeginOperationDelegate(this.OnBeginGetDiscoveryMode);
            }
            if ((this.onEndGetDiscoveryModeDelegate == null)) {
                this.onEndGetDiscoveryModeDelegate = new EndOperationDelegate(this.OnEndGetDiscoveryMode);
            }
            if ((this.onGetDiscoveryModeCompletedDelegate == null)) {
                this.onGetDiscoveryModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDiscoveryModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetDiscoveryModeDelegate, null, this.onEndGetDiscoveryModeDelegate, this.onGetDiscoveryModeCompletedDelegate, userState);
        }
        
        public void SetDiscoveryMode(OnvifBasic.device.DiscoveryMode DiscoveryMode) {
            base.Channel.SetDiscoveryMode(DiscoveryMode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDiscoveryMode(OnvifBasic.device.DiscoveryMode DiscoveryMode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDiscoveryMode(DiscoveryMode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetDiscoveryMode(System.IAsyncResult result) {
            base.Channel.EndSetDiscoveryMode(result);
        }
        
        private System.IAsyncResult OnBeginSetDiscoveryMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.DiscoveryMode DiscoveryMode = ((OnvifBasic.device.DiscoveryMode)(inValues[0]));
            return this.BeginSetDiscoveryMode(DiscoveryMode, callback, asyncState);
        }
        
        private object[] OnEndSetDiscoveryMode(System.IAsyncResult result) {
            this.EndSetDiscoveryMode(result);
            return null;
        }
        
        private void OnSetDiscoveryModeCompleted(object state) {
            if ((this.SetDiscoveryModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDiscoveryModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDiscoveryModeAsync(OnvifBasic.device.DiscoveryMode DiscoveryMode) {
            this.SetDiscoveryModeAsync(DiscoveryMode, null);
        }
        
        public void SetDiscoveryModeAsync(OnvifBasic.device.DiscoveryMode DiscoveryMode, object userState) {
            if ((this.onBeginSetDiscoveryModeDelegate == null)) {
                this.onBeginSetDiscoveryModeDelegate = new BeginOperationDelegate(this.OnBeginSetDiscoveryMode);
            }
            if ((this.onEndSetDiscoveryModeDelegate == null)) {
                this.onEndSetDiscoveryModeDelegate = new EndOperationDelegate(this.OnEndSetDiscoveryMode);
            }
            if ((this.onSetDiscoveryModeCompletedDelegate == null)) {
                this.onSetDiscoveryModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDiscoveryModeCompleted);
            }
            base.InvokeAsync(this.onBeginSetDiscoveryModeDelegate, new object[] {
                        DiscoveryMode}, this.onEndSetDiscoveryModeDelegate, this.onSetDiscoveryModeCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.DiscoveryMode GetRemoteDiscoveryMode() {
            return base.Channel.GetRemoteDiscoveryMode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRemoteDiscoveryMode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRemoteDiscoveryMode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.DiscoveryMode EndGetRemoteDiscoveryMode(System.IAsyncResult result) {
            return base.Channel.EndGetRemoteDiscoveryMode(result);
        }
        
        private System.IAsyncResult OnBeginGetRemoteDiscoveryMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRemoteDiscoveryMode(callback, asyncState);
        }
        
        private object[] OnEndGetRemoteDiscoveryMode(System.IAsyncResult result) {
            OnvifBasic.device.DiscoveryMode retVal = this.EndGetRemoteDiscoveryMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRemoteDiscoveryModeCompleted(object state) {
            if ((this.GetRemoteDiscoveryModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRemoteDiscoveryModeCompleted(this, new GetRemoteDiscoveryModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRemoteDiscoveryModeAsync() {
            this.GetRemoteDiscoveryModeAsync(null);
        }
        
        public void GetRemoteDiscoveryModeAsync(object userState) {
            if ((this.onBeginGetRemoteDiscoveryModeDelegate == null)) {
                this.onBeginGetRemoteDiscoveryModeDelegate = new BeginOperationDelegate(this.OnBeginGetRemoteDiscoveryMode);
            }
            if ((this.onEndGetRemoteDiscoveryModeDelegate == null)) {
                this.onEndGetRemoteDiscoveryModeDelegate = new EndOperationDelegate(this.OnEndGetRemoteDiscoveryMode);
            }
            if ((this.onGetRemoteDiscoveryModeCompletedDelegate == null)) {
                this.onGetRemoteDiscoveryModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRemoteDiscoveryModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetRemoteDiscoveryModeDelegate, null, this.onEndGetRemoteDiscoveryModeDelegate, this.onGetRemoteDiscoveryModeCompletedDelegate, userState);
        }
        
        public void SetRemoteDiscoveryMode(OnvifBasic.device.DiscoveryMode RemoteDiscoveryMode) {
            base.Channel.SetRemoteDiscoveryMode(RemoteDiscoveryMode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRemoteDiscoveryMode(OnvifBasic.device.DiscoveryMode RemoteDiscoveryMode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRemoteDiscoveryMode(RemoteDiscoveryMode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetRemoteDiscoveryMode(System.IAsyncResult result) {
            base.Channel.EndSetRemoteDiscoveryMode(result);
        }
        
        private System.IAsyncResult OnBeginSetRemoteDiscoveryMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.DiscoveryMode RemoteDiscoveryMode = ((OnvifBasic.device.DiscoveryMode)(inValues[0]));
            return this.BeginSetRemoteDiscoveryMode(RemoteDiscoveryMode, callback, asyncState);
        }
        
        private object[] OnEndSetRemoteDiscoveryMode(System.IAsyncResult result) {
            this.EndSetRemoteDiscoveryMode(result);
            return null;
        }
        
        private void OnSetRemoteDiscoveryModeCompleted(object state) {
            if ((this.SetRemoteDiscoveryModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRemoteDiscoveryModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRemoteDiscoveryModeAsync(OnvifBasic.device.DiscoveryMode RemoteDiscoveryMode) {
            this.SetRemoteDiscoveryModeAsync(RemoteDiscoveryMode, null);
        }
        
        public void SetRemoteDiscoveryModeAsync(OnvifBasic.device.DiscoveryMode RemoteDiscoveryMode, object userState) {
            if ((this.onBeginSetRemoteDiscoveryModeDelegate == null)) {
                this.onBeginSetRemoteDiscoveryModeDelegate = new BeginOperationDelegate(this.OnBeginSetRemoteDiscoveryMode);
            }
            if ((this.onEndSetRemoteDiscoveryModeDelegate == null)) {
                this.onEndSetRemoteDiscoveryModeDelegate = new EndOperationDelegate(this.OnEndSetRemoteDiscoveryMode);
            }
            if ((this.onSetRemoteDiscoveryModeCompletedDelegate == null)) {
                this.onSetRemoteDiscoveryModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRemoteDiscoveryModeCompleted);
            }
            base.InvokeAsync(this.onBeginSetRemoteDiscoveryModeDelegate, new object[] {
                        RemoteDiscoveryMode}, this.onEndSetRemoteDiscoveryModeDelegate, this.onSetRemoteDiscoveryModeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetDPAddressesResponse OnvifBasic.device.Device.GetDPAddresses(OnvifBasic.device.GetDPAddressesRequest request) {
            return base.Channel.GetDPAddresses(request);
        }
        
        public OnvifBasic.device.NetworkHost[] GetDPAddresses() {
            OnvifBasic.device.GetDPAddressesRequest inValue = new OnvifBasic.device.GetDPAddressesRequest();
            OnvifBasic.device.GetDPAddressesResponse retVal = ((OnvifBasic.device.Device)(this)).GetDPAddresses(inValue);
            return retVal.DPAddress;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetDPAddresses(OnvifBasic.device.GetDPAddressesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDPAddresses(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDPAddresses(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetDPAddressesRequest inValue = new OnvifBasic.device.GetDPAddressesRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetDPAddresses(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetDPAddressesResponse OnvifBasic.device.Device.EndGetDPAddresses(System.IAsyncResult result) {
            return base.Channel.EndGetDPAddresses(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.NetworkHost[] EndGetDPAddresses(System.IAsyncResult result) {
            OnvifBasic.device.GetDPAddressesResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetDPAddresses(result);
            return retVal.DPAddress;
        }
        
        private System.IAsyncResult OnBeginGetDPAddresses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDPAddresses(callback, asyncState);
        }
        
        private object[] OnEndGetDPAddresses(System.IAsyncResult result) {
            OnvifBasic.device.NetworkHost[] retVal = this.EndGetDPAddresses(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDPAddressesCompleted(object state) {
            if ((this.GetDPAddressesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDPAddressesCompleted(this, new GetDPAddressesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDPAddressesAsync() {
            this.GetDPAddressesAsync(null);
        }
        
        public void GetDPAddressesAsync(object userState) {
            if ((this.onBeginGetDPAddressesDelegate == null)) {
                this.onBeginGetDPAddressesDelegate = new BeginOperationDelegate(this.OnBeginGetDPAddresses);
            }
            if ((this.onEndGetDPAddressesDelegate == null)) {
                this.onEndGetDPAddressesDelegate = new EndOperationDelegate(this.OnEndGetDPAddresses);
            }
            if ((this.onGetDPAddressesCompletedDelegate == null)) {
                this.onGetDPAddressesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDPAddressesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDPAddressesDelegate, null, this.onEndGetDPAddressesDelegate, this.onGetDPAddressesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetDPAddressesResponse OnvifBasic.device.Device.SetDPAddresses(OnvifBasic.device.SetDPAddressesRequest request) {
            return base.Channel.SetDPAddresses(request);
        }
        
        public void SetDPAddresses(OnvifBasic.device.NetworkHost[] DPAddress) {
            OnvifBasic.device.SetDPAddressesRequest inValue = new OnvifBasic.device.SetDPAddressesRequest();
            inValue.DPAddress = DPAddress;
            OnvifBasic.device.SetDPAddressesResponse retVal = ((OnvifBasic.device.Device)(this)).SetDPAddresses(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetDPAddresses(OnvifBasic.device.SetDPAddressesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDPAddresses(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDPAddresses(OnvifBasic.device.NetworkHost[] DPAddress, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetDPAddressesRequest inValue = new OnvifBasic.device.SetDPAddressesRequest();
            inValue.DPAddress = DPAddress;
            return ((OnvifBasic.device.Device)(this)).BeginSetDPAddresses(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetDPAddressesResponse OnvifBasic.device.Device.EndSetDPAddresses(System.IAsyncResult result) {
            return base.Channel.EndSetDPAddresses(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetDPAddresses(System.IAsyncResult result) {
            OnvifBasic.device.SetDPAddressesResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetDPAddresses(result);
        }
        
        private System.IAsyncResult OnBeginSetDPAddresses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.NetworkHost[] DPAddress = ((OnvifBasic.device.NetworkHost[])(inValues[0]));
            return this.BeginSetDPAddresses(DPAddress, callback, asyncState);
        }
        
        private object[] OnEndSetDPAddresses(System.IAsyncResult result) {
            this.EndSetDPAddresses(result);
            return null;
        }
        
        private void OnSetDPAddressesCompleted(object state) {
            if ((this.SetDPAddressesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDPAddressesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDPAddressesAsync(OnvifBasic.device.NetworkHost[] DPAddress) {
            this.SetDPAddressesAsync(DPAddress, null);
        }
        
        public void SetDPAddressesAsync(OnvifBasic.device.NetworkHost[] DPAddress, object userState) {
            if ((this.onBeginSetDPAddressesDelegate == null)) {
                this.onBeginSetDPAddressesDelegate = new BeginOperationDelegate(this.OnBeginSetDPAddresses);
            }
            if ((this.onEndSetDPAddressesDelegate == null)) {
                this.onEndSetDPAddressesDelegate = new EndOperationDelegate(this.OnEndSetDPAddresses);
            }
            if ((this.onSetDPAddressesCompletedDelegate == null)) {
                this.onSetDPAddressesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDPAddressesCompleted);
            }
            base.InvokeAsync(this.onBeginSetDPAddressesDelegate, new object[] {
                        DPAddress}, this.onEndSetDPAddressesDelegate, this.onSetDPAddressesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetEndpointReferenceResponse OnvifBasic.device.Device.GetEndpointReference(OnvifBasic.device.GetEndpointReferenceRequest request) {
            return base.Channel.GetEndpointReference(request);
        }
        
        public string GetEndpointReference(out System.Xml.XmlElement[] Any) {
            OnvifBasic.device.GetEndpointReferenceRequest inValue = new OnvifBasic.device.GetEndpointReferenceRequest();
            OnvifBasic.device.GetEndpointReferenceResponse retVal = ((OnvifBasic.device.Device)(this)).GetEndpointReference(inValue);
            Any = retVal.Any;
            return retVal.GUID;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetEndpointReference(OnvifBasic.device.GetEndpointReferenceRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEndpointReference(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEndpointReference(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetEndpointReferenceRequest inValue = new OnvifBasic.device.GetEndpointReferenceRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetEndpointReference(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetEndpointReferenceResponse OnvifBasic.device.Device.EndGetEndpointReference(System.IAsyncResult result) {
            return base.Channel.EndGetEndpointReference(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetEndpointReference(System.IAsyncResult result, out System.Xml.XmlElement[] Any) {
            OnvifBasic.device.GetEndpointReferenceResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetEndpointReference(result);
            Any = retVal.Any;
            return retVal.GUID;
        }
        
        private System.IAsyncResult OnBeginGetEndpointReference(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetEndpointReference(callback, asyncState);
        }
        
        private object[] OnEndGetEndpointReference(System.IAsyncResult result) {
            System.Xml.XmlElement[] Any = this.GetDefaultValueForInitialization<System.Xml.XmlElement[]>();
            string retVal = this.EndGetEndpointReference(result, out Any);
            return new object[] {
                    Any,
                    retVal};
        }
        
        private void OnGetEndpointReferenceCompleted(object state) {
            if ((this.GetEndpointReferenceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEndpointReferenceCompleted(this, new GetEndpointReferenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEndpointReferenceAsync() {
            this.GetEndpointReferenceAsync(null);
        }
        
        public void GetEndpointReferenceAsync(object userState) {
            if ((this.onBeginGetEndpointReferenceDelegate == null)) {
                this.onBeginGetEndpointReferenceDelegate = new BeginOperationDelegate(this.OnBeginGetEndpointReference);
            }
            if ((this.onEndGetEndpointReferenceDelegate == null)) {
                this.onEndGetEndpointReferenceDelegate = new EndOperationDelegate(this.OnEndGetEndpointReference);
            }
            if ((this.onGetEndpointReferenceCompletedDelegate == null)) {
                this.onGetEndpointReferenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEndpointReferenceCompleted);
            }
            base.InvokeAsync(this.onBeginGetEndpointReferenceDelegate, null, this.onEndGetEndpointReferenceDelegate, this.onGetEndpointReferenceCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.RemoteUser GetRemoteUser() {
            return base.Channel.GetRemoteUser();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRemoteUser(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRemoteUser(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.RemoteUser EndGetRemoteUser(System.IAsyncResult result) {
            return base.Channel.EndGetRemoteUser(result);
        }
        
        private System.IAsyncResult OnBeginGetRemoteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRemoteUser(callback, asyncState);
        }
        
        private object[] OnEndGetRemoteUser(System.IAsyncResult result) {
            OnvifBasic.device.RemoteUser retVal = this.EndGetRemoteUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRemoteUserCompleted(object state) {
            if ((this.GetRemoteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRemoteUserCompleted(this, new GetRemoteUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRemoteUserAsync() {
            this.GetRemoteUserAsync(null);
        }
        
        public void GetRemoteUserAsync(object userState) {
            if ((this.onBeginGetRemoteUserDelegate == null)) {
                this.onBeginGetRemoteUserDelegate = new BeginOperationDelegate(this.OnBeginGetRemoteUser);
            }
            if ((this.onEndGetRemoteUserDelegate == null)) {
                this.onEndGetRemoteUserDelegate = new EndOperationDelegate(this.OnEndGetRemoteUser);
            }
            if ((this.onGetRemoteUserCompletedDelegate == null)) {
                this.onGetRemoteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRemoteUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetRemoteUserDelegate, null, this.onEndGetRemoteUserDelegate, this.onGetRemoteUserCompletedDelegate, userState);
        }
        
        public void SetRemoteUser(OnvifBasic.device.RemoteUser RemoteUser) {
            base.Channel.SetRemoteUser(RemoteUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRemoteUser(OnvifBasic.device.RemoteUser RemoteUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRemoteUser(RemoteUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetRemoteUser(System.IAsyncResult result) {
            base.Channel.EndSetRemoteUser(result);
        }
        
        private System.IAsyncResult OnBeginSetRemoteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.RemoteUser RemoteUser = ((OnvifBasic.device.RemoteUser)(inValues[0]));
            return this.BeginSetRemoteUser(RemoteUser, callback, asyncState);
        }
        
        private object[] OnEndSetRemoteUser(System.IAsyncResult result) {
            this.EndSetRemoteUser(result);
            return null;
        }
        
        private void OnSetRemoteUserCompleted(object state) {
            if ((this.SetRemoteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRemoteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRemoteUserAsync(OnvifBasic.device.RemoteUser RemoteUser) {
            this.SetRemoteUserAsync(RemoteUser, null);
        }
        
        public void SetRemoteUserAsync(OnvifBasic.device.RemoteUser RemoteUser, object userState) {
            if ((this.onBeginSetRemoteUserDelegate == null)) {
                this.onBeginSetRemoteUserDelegate = new BeginOperationDelegate(this.OnBeginSetRemoteUser);
            }
            if ((this.onEndSetRemoteUserDelegate == null)) {
                this.onEndSetRemoteUserDelegate = new EndOperationDelegate(this.OnEndSetRemoteUser);
            }
            if ((this.onSetRemoteUserCompletedDelegate == null)) {
                this.onSetRemoteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRemoteUserCompleted);
            }
            base.InvokeAsync(this.onBeginSetRemoteUserDelegate, new object[] {
                        RemoteUser}, this.onEndSetRemoteUserDelegate, this.onSetRemoteUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetUsersResponse OnvifBasic.device.Device.GetUsers(OnvifBasic.device.GetUsersRequest request) {
            return base.Channel.GetUsers(request);
        }
        
        public OnvifBasic.device.User[] GetUsers() {
            OnvifBasic.device.GetUsersRequest inValue = new OnvifBasic.device.GetUsersRequest();
            OnvifBasic.device.GetUsersResponse retVal = ((OnvifBasic.device.Device)(this)).GetUsers(inValue);
            return retVal.User;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetUsers(OnvifBasic.device.GetUsersRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetUsersRequest inValue = new OnvifBasic.device.GetUsersRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetUsers(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetUsersResponse OnvifBasic.device.Device.EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.User[] EndGetUsers(System.IAsyncResult result) {
            OnvifBasic.device.GetUsersResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetUsers(result);
            return retVal.User;
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetUsers(callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            OnvifBasic.device.User[] retVal = this.EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        public void GetUsersAsync(object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, null, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.CreateUsersResponse OnvifBasic.device.Device.CreateUsers(OnvifBasic.device.CreateUsersRequest request) {
            return base.Channel.CreateUsers(request);
        }
        
        public void CreateUsers(OnvifBasic.device.User[] User) {
            OnvifBasic.device.CreateUsersRequest inValue = new OnvifBasic.device.CreateUsersRequest();
            inValue.User = User;
            OnvifBasic.device.CreateUsersResponse retVal = ((OnvifBasic.device.Device)(this)).CreateUsers(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginCreateUsers(OnvifBasic.device.CreateUsersRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateUsers(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateUsers(OnvifBasic.device.User[] User, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.CreateUsersRequest inValue = new OnvifBasic.device.CreateUsersRequest();
            inValue.User = User;
            return ((OnvifBasic.device.Device)(this)).BeginCreateUsers(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.CreateUsersResponse OnvifBasic.device.Device.EndCreateUsers(System.IAsyncResult result) {
            return base.Channel.EndCreateUsers(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCreateUsers(System.IAsyncResult result) {
            OnvifBasic.device.CreateUsersResponse retVal = ((OnvifBasic.device.Device)(this)).EndCreateUsers(result);
        }
        
        private System.IAsyncResult OnBeginCreateUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.User[] User = ((OnvifBasic.device.User[])(inValues[0]));
            return this.BeginCreateUsers(User, callback, asyncState);
        }
        
        private object[] OnEndCreateUsers(System.IAsyncResult result) {
            this.EndCreateUsers(result);
            return null;
        }
        
        private void OnCreateUsersCompleted(object state) {
            if ((this.CreateUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateUsersAsync(OnvifBasic.device.User[] User) {
            this.CreateUsersAsync(User, null);
        }
        
        public void CreateUsersAsync(OnvifBasic.device.User[] User, object userState) {
            if ((this.onBeginCreateUsersDelegate == null)) {
                this.onBeginCreateUsersDelegate = new BeginOperationDelegate(this.OnBeginCreateUsers);
            }
            if ((this.onEndCreateUsersDelegate == null)) {
                this.onEndCreateUsersDelegate = new EndOperationDelegate(this.OnEndCreateUsers);
            }
            if ((this.onCreateUsersCompletedDelegate == null)) {
                this.onCreateUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateUsersCompleted);
            }
            base.InvokeAsync(this.onBeginCreateUsersDelegate, new object[] {
                        User}, this.onEndCreateUsersDelegate, this.onCreateUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.DeleteUsersResponse OnvifBasic.device.Device.DeleteUsers(OnvifBasic.device.DeleteUsersRequest request) {
            return base.Channel.DeleteUsers(request);
        }
        
        public void DeleteUsers(string[] Username) {
            OnvifBasic.device.DeleteUsersRequest inValue = new OnvifBasic.device.DeleteUsersRequest();
            inValue.Username = Username;
            OnvifBasic.device.DeleteUsersResponse retVal = ((OnvifBasic.device.Device)(this)).DeleteUsers(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginDeleteUsers(OnvifBasic.device.DeleteUsersRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUsers(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteUsers(string[] Username, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.DeleteUsersRequest inValue = new OnvifBasic.device.DeleteUsersRequest();
            inValue.Username = Username;
            return ((OnvifBasic.device.Device)(this)).BeginDeleteUsers(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.DeleteUsersResponse OnvifBasic.device.Device.EndDeleteUsers(System.IAsyncResult result) {
            return base.Channel.EndDeleteUsers(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteUsers(System.IAsyncResult result) {
            OnvifBasic.device.DeleteUsersResponse retVal = ((OnvifBasic.device.Device)(this)).EndDeleteUsers(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] Username = ((string[])(inValues[0]));
            return this.BeginDeleteUsers(Username, callback, asyncState);
        }
        
        private object[] OnEndDeleteUsers(System.IAsyncResult result) {
            this.EndDeleteUsers(result);
            return null;
        }
        
        private void OnDeleteUsersCompleted(object state) {
            if ((this.DeleteUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUsersAsync(string[] Username) {
            this.DeleteUsersAsync(Username, null);
        }
        
        public void DeleteUsersAsync(string[] Username, object userState) {
            if ((this.onBeginDeleteUsersDelegate == null)) {
                this.onBeginDeleteUsersDelegate = new BeginOperationDelegate(this.OnBeginDeleteUsers);
            }
            if ((this.onEndDeleteUsersDelegate == null)) {
                this.onEndDeleteUsersDelegate = new EndOperationDelegate(this.OnEndDeleteUsers);
            }
            if ((this.onDeleteUsersCompletedDelegate == null)) {
                this.onDeleteUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUsersCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUsersDelegate, new object[] {
                        Username}, this.onEndDeleteUsersDelegate, this.onDeleteUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetUserResponse OnvifBasic.device.Device.SetUser(OnvifBasic.device.SetUserRequest request) {
            return base.Channel.SetUser(request);
        }
        
        public void SetUser(OnvifBasic.device.User[] User) {
            OnvifBasic.device.SetUserRequest inValue = new OnvifBasic.device.SetUserRequest();
            inValue.User = User;
            OnvifBasic.device.SetUserResponse retVal = ((OnvifBasic.device.Device)(this)).SetUser(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetUser(OnvifBasic.device.SetUserRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetUser(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetUser(OnvifBasic.device.User[] User, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetUserRequest inValue = new OnvifBasic.device.SetUserRequest();
            inValue.User = User;
            return ((OnvifBasic.device.Device)(this)).BeginSetUser(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetUserResponse OnvifBasic.device.Device.EndSetUser(System.IAsyncResult result) {
            return base.Channel.EndSetUser(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetUser(System.IAsyncResult result) {
            OnvifBasic.device.SetUserResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetUser(result);
        }
        
        private System.IAsyncResult OnBeginSetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.User[] User = ((OnvifBasic.device.User[])(inValues[0]));
            return this.BeginSetUser(User, callback, asyncState);
        }
        
        private object[] OnEndSetUser(System.IAsyncResult result) {
            this.EndSetUser(result);
            return null;
        }
        
        private void OnSetUserCompleted(object state) {
            if ((this.SetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetUserAsync(OnvifBasic.device.User[] User) {
            this.SetUserAsync(User, null);
        }
        
        public void SetUserAsync(OnvifBasic.device.User[] User, object userState) {
            if ((this.onBeginSetUserDelegate == null)) {
                this.onBeginSetUserDelegate = new BeginOperationDelegate(this.OnBeginSetUser);
            }
            if ((this.onEndSetUserDelegate == null)) {
                this.onEndSetUserDelegate = new EndOperationDelegate(this.OnEndSetUser);
            }
            if ((this.onSetUserCompletedDelegate == null)) {
                this.onSetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetUserCompleted);
            }
            base.InvokeAsync(this.onBeginSetUserDelegate, new object[] {
                        User}, this.onEndSetUserDelegate, this.onSetUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetWsdlUrlResponse OnvifBasic.device.Device.GetWsdlUrl(OnvifBasic.device.GetWsdlUrlRequest request) {
            return base.Channel.GetWsdlUrl(request);
        }
        
        public string GetWsdlUrl() {
            OnvifBasic.device.GetWsdlUrlRequest inValue = new OnvifBasic.device.GetWsdlUrlRequest();
            OnvifBasic.device.GetWsdlUrlResponse retVal = ((OnvifBasic.device.Device)(this)).GetWsdlUrl(inValue);
            return retVal.WsdlUrl;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetWsdlUrl(OnvifBasic.device.GetWsdlUrlRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWsdlUrl(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetWsdlUrl(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetWsdlUrlRequest inValue = new OnvifBasic.device.GetWsdlUrlRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetWsdlUrl(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetWsdlUrlResponse OnvifBasic.device.Device.EndGetWsdlUrl(System.IAsyncResult result) {
            return base.Channel.EndGetWsdlUrl(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetWsdlUrl(System.IAsyncResult result) {
            OnvifBasic.device.GetWsdlUrlResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetWsdlUrl(result);
            return retVal.WsdlUrl;
        }
        
        private System.IAsyncResult OnBeginGetWsdlUrl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetWsdlUrl(callback, asyncState);
        }
        
        private object[] OnEndGetWsdlUrl(System.IAsyncResult result) {
            string retVal = this.EndGetWsdlUrl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWsdlUrlCompleted(object state) {
            if ((this.GetWsdlUrlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWsdlUrlCompleted(this, new GetWsdlUrlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWsdlUrlAsync() {
            this.GetWsdlUrlAsync(null);
        }
        
        public void GetWsdlUrlAsync(object userState) {
            if ((this.onBeginGetWsdlUrlDelegate == null)) {
                this.onBeginGetWsdlUrlDelegate = new BeginOperationDelegate(this.OnBeginGetWsdlUrl);
            }
            if ((this.onEndGetWsdlUrlDelegate == null)) {
                this.onEndGetWsdlUrlDelegate = new EndOperationDelegate(this.OnEndGetWsdlUrl);
            }
            if ((this.onGetWsdlUrlCompletedDelegate == null)) {
                this.onGetWsdlUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWsdlUrlCompleted);
            }
            base.InvokeAsync(this.onBeginGetWsdlUrlDelegate, null, this.onEndGetWsdlUrlDelegate, this.onGetWsdlUrlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetCapabilitiesResponse OnvifBasic.device.Device.GetCapabilities(OnvifBasic.device.GetCapabilitiesRequest request) {
            return base.Channel.GetCapabilities(request);
        }
        
        public OnvifBasic.device.Capabilities GetCapabilities(OnvifBasic.device.CapabilityCategory[] Category) {
            OnvifBasic.device.GetCapabilitiesRequest inValue = new OnvifBasic.device.GetCapabilitiesRequest();
            inValue.Category = Category;
            OnvifBasic.device.GetCapabilitiesResponse retVal = ((OnvifBasic.device.Device)(this)).GetCapabilities(inValue);
            return retVal.Capabilities;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetCapabilities(OnvifBasic.device.GetCapabilitiesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapabilities(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapabilities(OnvifBasic.device.CapabilityCategory[] Category, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetCapabilitiesRequest inValue = new OnvifBasic.device.GetCapabilitiesRequest();
            inValue.Category = Category;
            return ((OnvifBasic.device.Device)(this)).BeginGetCapabilities(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetCapabilitiesResponse OnvifBasic.device.Device.EndGetCapabilities(System.IAsyncResult result) {
            return base.Channel.EndGetCapabilities(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Capabilities EndGetCapabilities(System.IAsyncResult result) {
            OnvifBasic.device.GetCapabilitiesResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetCapabilities(result);
            return retVal.Capabilities;
        }
        
        private System.IAsyncResult OnBeginGetCapabilities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.CapabilityCategory[] Category = ((OnvifBasic.device.CapabilityCategory[])(inValues[0]));
            return this.BeginGetCapabilities(Category, callback, asyncState);
        }
        
        private object[] OnEndGetCapabilities(System.IAsyncResult result) {
            OnvifBasic.device.Capabilities retVal = this.EndGetCapabilities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapabilitiesCompleted(object state) {
            if ((this.GetCapabilitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapabilitiesCompleted(this, new GetCapabilitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapabilitiesAsync(OnvifBasic.device.CapabilityCategory[] Category) {
            this.GetCapabilitiesAsync(Category, null);
        }
        
        public void GetCapabilitiesAsync(OnvifBasic.device.CapabilityCategory[] Category, object userState) {
            if ((this.onBeginGetCapabilitiesDelegate == null)) {
                this.onBeginGetCapabilitiesDelegate = new BeginOperationDelegate(this.OnBeginGetCapabilities);
            }
            if ((this.onEndGetCapabilitiesDelegate == null)) {
                this.onEndGetCapabilitiesDelegate = new EndOperationDelegate(this.OnEndGetCapabilities);
            }
            if ((this.onGetCapabilitiesCompletedDelegate == null)) {
                this.onGetCapabilitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapabilitiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapabilitiesDelegate, new object[] {
                        Category}, this.onEndGetCapabilitiesDelegate, this.onGetCapabilitiesCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.HostnameInformation GetHostname() {
            return base.Channel.GetHostname();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHostname(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHostname(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.HostnameInformation EndGetHostname(System.IAsyncResult result) {
            return base.Channel.EndGetHostname(result);
        }
        
        private System.IAsyncResult OnBeginGetHostname(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetHostname(callback, asyncState);
        }
        
        private object[] OnEndGetHostname(System.IAsyncResult result) {
            OnvifBasic.device.HostnameInformation retVal = this.EndGetHostname(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHostnameCompleted(object state) {
            if ((this.GetHostnameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHostnameCompleted(this, new GetHostnameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHostnameAsync() {
            this.GetHostnameAsync(null);
        }
        
        public void GetHostnameAsync(object userState) {
            if ((this.onBeginGetHostnameDelegate == null)) {
                this.onBeginGetHostnameDelegate = new BeginOperationDelegate(this.OnBeginGetHostname);
            }
            if ((this.onEndGetHostnameDelegate == null)) {
                this.onEndGetHostnameDelegate = new EndOperationDelegate(this.OnEndGetHostname);
            }
            if ((this.onGetHostnameCompletedDelegate == null)) {
                this.onGetHostnameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHostnameCompleted);
            }
            base.InvokeAsync(this.onBeginGetHostnameDelegate, null, this.onEndGetHostnameDelegate, this.onGetHostnameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetHostnameResponse OnvifBasic.device.Device.SetHostname(OnvifBasic.device.SetHostnameRequest request) {
            return base.Channel.SetHostname(request);
        }
        
        public void SetHostname(string Name) {
            OnvifBasic.device.SetHostnameRequest inValue = new OnvifBasic.device.SetHostnameRequest();
            inValue.Name = Name;
            OnvifBasic.device.SetHostnameResponse retVal = ((OnvifBasic.device.Device)(this)).SetHostname(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetHostname(OnvifBasic.device.SetHostnameRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetHostname(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetHostname(string Name, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetHostnameRequest inValue = new OnvifBasic.device.SetHostnameRequest();
            inValue.Name = Name;
            return ((OnvifBasic.device.Device)(this)).BeginSetHostname(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetHostnameResponse OnvifBasic.device.Device.EndSetHostname(System.IAsyncResult result) {
            return base.Channel.EndSetHostname(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetHostname(System.IAsyncResult result) {
            OnvifBasic.device.SetHostnameResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetHostname(result);
        }
        
        private System.IAsyncResult OnBeginSetHostname(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Name = ((string)(inValues[0]));
            return this.BeginSetHostname(Name, callback, asyncState);
        }
        
        private object[] OnEndSetHostname(System.IAsyncResult result) {
            this.EndSetHostname(result);
            return null;
        }
        
        private void OnSetHostnameCompleted(object state) {
            if ((this.SetHostnameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetHostnameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetHostnameAsync(string Name) {
            this.SetHostnameAsync(Name, null);
        }
        
        public void SetHostnameAsync(string Name, object userState) {
            if ((this.onBeginSetHostnameDelegate == null)) {
                this.onBeginSetHostnameDelegate = new BeginOperationDelegate(this.OnBeginSetHostname);
            }
            if ((this.onEndSetHostnameDelegate == null)) {
                this.onEndSetHostnameDelegate = new EndOperationDelegate(this.OnEndSetHostname);
            }
            if ((this.onSetHostnameCompletedDelegate == null)) {
                this.onSetHostnameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetHostnameCompleted);
            }
            base.InvokeAsync(this.onBeginSetHostnameDelegate, new object[] {
                        Name}, this.onEndSetHostnameDelegate, this.onSetHostnameCompletedDelegate, userState);
        }
        
        public bool SetHostnameFromDHCP(bool FromDHCP) {
            return base.Channel.SetHostnameFromDHCP(FromDHCP);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetHostnameFromDHCP(bool FromDHCP, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetHostnameFromDHCP(FromDHCP, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSetHostnameFromDHCP(System.IAsyncResult result) {
            return base.Channel.EndSetHostnameFromDHCP(result);
        }
        
        private System.IAsyncResult OnBeginSetHostnameFromDHCP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool FromDHCP = ((bool)(inValues[0]));
            return this.BeginSetHostnameFromDHCP(FromDHCP, callback, asyncState);
        }
        
        private object[] OnEndSetHostnameFromDHCP(System.IAsyncResult result) {
            bool retVal = this.EndSetHostnameFromDHCP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetHostnameFromDHCPCompleted(object state) {
            if ((this.SetHostnameFromDHCPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetHostnameFromDHCPCompleted(this, new SetHostnameFromDHCPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetHostnameFromDHCPAsync(bool FromDHCP) {
            this.SetHostnameFromDHCPAsync(FromDHCP, null);
        }
        
        public void SetHostnameFromDHCPAsync(bool FromDHCP, object userState) {
            if ((this.onBeginSetHostnameFromDHCPDelegate == null)) {
                this.onBeginSetHostnameFromDHCPDelegate = new BeginOperationDelegate(this.OnBeginSetHostnameFromDHCP);
            }
            if ((this.onEndSetHostnameFromDHCPDelegate == null)) {
                this.onEndSetHostnameFromDHCPDelegate = new EndOperationDelegate(this.OnEndSetHostnameFromDHCP);
            }
            if ((this.onSetHostnameFromDHCPCompletedDelegate == null)) {
                this.onSetHostnameFromDHCPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetHostnameFromDHCPCompleted);
            }
            base.InvokeAsync(this.onBeginSetHostnameFromDHCPDelegate, new object[] {
                        FromDHCP}, this.onEndSetHostnameFromDHCPDelegate, this.onSetHostnameFromDHCPCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.DNSInformation GetDNS() {
            return base.Channel.GetDNS();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDNS(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDNS(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.DNSInformation EndGetDNS(System.IAsyncResult result) {
            return base.Channel.EndGetDNS(result);
        }
        
        private System.IAsyncResult OnBeginGetDNS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDNS(callback, asyncState);
        }
        
        private object[] OnEndGetDNS(System.IAsyncResult result) {
            OnvifBasic.device.DNSInformation retVal = this.EndGetDNS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDNSCompleted(object state) {
            if ((this.GetDNSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDNSCompleted(this, new GetDNSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDNSAsync() {
            this.GetDNSAsync(null);
        }
        
        public void GetDNSAsync(object userState) {
            if ((this.onBeginGetDNSDelegate == null)) {
                this.onBeginGetDNSDelegate = new BeginOperationDelegate(this.OnBeginGetDNS);
            }
            if ((this.onEndGetDNSDelegate == null)) {
                this.onEndGetDNSDelegate = new EndOperationDelegate(this.OnEndGetDNS);
            }
            if ((this.onGetDNSCompletedDelegate == null)) {
                this.onGetDNSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDNSCompleted);
            }
            base.InvokeAsync(this.onBeginGetDNSDelegate, null, this.onEndGetDNSDelegate, this.onGetDNSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetDNSResponse OnvifBasic.device.Device.SetDNS(OnvifBasic.device.SetDNSRequest request) {
            return base.Channel.SetDNS(request);
        }
        
        public void SetDNS(bool FromDHCP, string[] SearchDomain, OnvifBasic.device.IPAddress[] DNSManual) {
            OnvifBasic.device.SetDNSRequest inValue = new OnvifBasic.device.SetDNSRequest();
            inValue.FromDHCP = FromDHCP;
            inValue.SearchDomain = SearchDomain;
            inValue.DNSManual = DNSManual;
            OnvifBasic.device.SetDNSResponse retVal = ((OnvifBasic.device.Device)(this)).SetDNS(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetDNS(OnvifBasic.device.SetDNSRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDNS(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDNS(bool FromDHCP, string[] SearchDomain, OnvifBasic.device.IPAddress[] DNSManual, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetDNSRequest inValue = new OnvifBasic.device.SetDNSRequest();
            inValue.FromDHCP = FromDHCP;
            inValue.SearchDomain = SearchDomain;
            inValue.DNSManual = DNSManual;
            return ((OnvifBasic.device.Device)(this)).BeginSetDNS(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetDNSResponse OnvifBasic.device.Device.EndSetDNS(System.IAsyncResult result) {
            return base.Channel.EndSetDNS(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetDNS(System.IAsyncResult result) {
            OnvifBasic.device.SetDNSResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetDNS(result);
        }
        
        private System.IAsyncResult OnBeginSetDNS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool FromDHCP = ((bool)(inValues[0]));
            string[] SearchDomain = ((string[])(inValues[1]));
            OnvifBasic.device.IPAddress[] DNSManual = ((OnvifBasic.device.IPAddress[])(inValues[2]));
            return this.BeginSetDNS(FromDHCP, SearchDomain, DNSManual, callback, asyncState);
        }
        
        private object[] OnEndSetDNS(System.IAsyncResult result) {
            this.EndSetDNS(result);
            return null;
        }
        
        private void OnSetDNSCompleted(object state) {
            if ((this.SetDNSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDNSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDNSAsync(bool FromDHCP, string[] SearchDomain, OnvifBasic.device.IPAddress[] DNSManual) {
            this.SetDNSAsync(FromDHCP, SearchDomain, DNSManual, null);
        }
        
        public void SetDNSAsync(bool FromDHCP, string[] SearchDomain, OnvifBasic.device.IPAddress[] DNSManual, object userState) {
            if ((this.onBeginSetDNSDelegate == null)) {
                this.onBeginSetDNSDelegate = new BeginOperationDelegate(this.OnBeginSetDNS);
            }
            if ((this.onEndSetDNSDelegate == null)) {
                this.onEndSetDNSDelegate = new EndOperationDelegate(this.OnEndSetDNS);
            }
            if ((this.onSetDNSCompletedDelegate == null)) {
                this.onSetDNSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDNSCompleted);
            }
            base.InvokeAsync(this.onBeginSetDNSDelegate, new object[] {
                        FromDHCP,
                        SearchDomain,
                        DNSManual}, this.onEndSetDNSDelegate, this.onSetDNSCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.NTPInformation GetNTP() {
            return base.Channel.GetNTP();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNTP(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNTP(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.NTPInformation EndGetNTP(System.IAsyncResult result) {
            return base.Channel.EndGetNTP(result);
        }
        
        private System.IAsyncResult OnBeginGetNTP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNTP(callback, asyncState);
        }
        
        private object[] OnEndGetNTP(System.IAsyncResult result) {
            OnvifBasic.device.NTPInformation retVal = this.EndGetNTP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNTPCompleted(object state) {
            if ((this.GetNTPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNTPCompleted(this, new GetNTPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNTPAsync() {
            this.GetNTPAsync(null);
        }
        
        public void GetNTPAsync(object userState) {
            if ((this.onBeginGetNTPDelegate == null)) {
                this.onBeginGetNTPDelegate = new BeginOperationDelegate(this.OnBeginGetNTP);
            }
            if ((this.onEndGetNTPDelegate == null)) {
                this.onEndGetNTPDelegate = new EndOperationDelegate(this.OnEndGetNTP);
            }
            if ((this.onGetNTPCompletedDelegate == null)) {
                this.onGetNTPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNTPCompleted);
            }
            base.InvokeAsync(this.onBeginGetNTPDelegate, null, this.onEndGetNTPDelegate, this.onGetNTPCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetNTPResponse OnvifBasic.device.Device.SetNTP(OnvifBasic.device.SetNTPRequest request) {
            return base.Channel.SetNTP(request);
        }
        
        public void SetNTP(bool FromDHCP, OnvifBasic.device.NetworkHost[] NTPManual) {
            OnvifBasic.device.SetNTPRequest inValue = new OnvifBasic.device.SetNTPRequest();
            inValue.FromDHCP = FromDHCP;
            inValue.NTPManual = NTPManual;
            OnvifBasic.device.SetNTPResponse retVal = ((OnvifBasic.device.Device)(this)).SetNTP(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetNTP(OnvifBasic.device.SetNTPRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetNTP(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetNTP(bool FromDHCP, OnvifBasic.device.NetworkHost[] NTPManual, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetNTPRequest inValue = new OnvifBasic.device.SetNTPRequest();
            inValue.FromDHCP = FromDHCP;
            inValue.NTPManual = NTPManual;
            return ((OnvifBasic.device.Device)(this)).BeginSetNTP(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetNTPResponse OnvifBasic.device.Device.EndSetNTP(System.IAsyncResult result) {
            return base.Channel.EndSetNTP(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetNTP(System.IAsyncResult result) {
            OnvifBasic.device.SetNTPResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetNTP(result);
        }
        
        private System.IAsyncResult OnBeginSetNTP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool FromDHCP = ((bool)(inValues[0]));
            OnvifBasic.device.NetworkHost[] NTPManual = ((OnvifBasic.device.NetworkHost[])(inValues[1]));
            return this.BeginSetNTP(FromDHCP, NTPManual, callback, asyncState);
        }
        
        private object[] OnEndSetNTP(System.IAsyncResult result) {
            this.EndSetNTP(result);
            return null;
        }
        
        private void OnSetNTPCompleted(object state) {
            if ((this.SetNTPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetNTPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetNTPAsync(bool FromDHCP, OnvifBasic.device.NetworkHost[] NTPManual) {
            this.SetNTPAsync(FromDHCP, NTPManual, null);
        }
        
        public void SetNTPAsync(bool FromDHCP, OnvifBasic.device.NetworkHost[] NTPManual, object userState) {
            if ((this.onBeginSetNTPDelegate == null)) {
                this.onBeginSetNTPDelegate = new BeginOperationDelegate(this.OnBeginSetNTP);
            }
            if ((this.onEndSetNTPDelegate == null)) {
                this.onEndSetNTPDelegate = new EndOperationDelegate(this.OnEndSetNTP);
            }
            if ((this.onSetNTPCompletedDelegate == null)) {
                this.onSetNTPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetNTPCompleted);
            }
            base.InvokeAsync(this.onBeginSetNTPDelegate, new object[] {
                        FromDHCP,
                        NTPManual}, this.onEndSetNTPDelegate, this.onSetNTPCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.DynamicDNSInformation GetDynamicDNS() {
            return base.Channel.GetDynamicDNS();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDynamicDNS(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDynamicDNS(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.DynamicDNSInformation EndGetDynamicDNS(System.IAsyncResult result) {
            return base.Channel.EndGetDynamicDNS(result);
        }
        
        private System.IAsyncResult OnBeginGetDynamicDNS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDynamicDNS(callback, asyncState);
        }
        
        private object[] OnEndGetDynamicDNS(System.IAsyncResult result) {
            OnvifBasic.device.DynamicDNSInformation retVal = this.EndGetDynamicDNS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDynamicDNSCompleted(object state) {
            if ((this.GetDynamicDNSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDynamicDNSCompleted(this, new GetDynamicDNSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDynamicDNSAsync() {
            this.GetDynamicDNSAsync(null);
        }
        
        public void GetDynamicDNSAsync(object userState) {
            if ((this.onBeginGetDynamicDNSDelegate == null)) {
                this.onBeginGetDynamicDNSDelegate = new BeginOperationDelegate(this.OnBeginGetDynamicDNS);
            }
            if ((this.onEndGetDynamicDNSDelegate == null)) {
                this.onEndGetDynamicDNSDelegate = new EndOperationDelegate(this.OnEndGetDynamicDNS);
            }
            if ((this.onGetDynamicDNSCompletedDelegate == null)) {
                this.onGetDynamicDNSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDynamicDNSCompleted);
            }
            base.InvokeAsync(this.onBeginGetDynamicDNSDelegate, null, this.onEndGetDynamicDNSDelegate, this.onGetDynamicDNSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetDynamicDNSResponse OnvifBasic.device.Device.SetDynamicDNS(OnvifBasic.device.SetDynamicDNSRequest request) {
            return base.Channel.SetDynamicDNS(request);
        }
        
        public void SetDynamicDNS(OnvifBasic.device.DynamicDNSType Type, string Name, string TTL) {
            OnvifBasic.device.SetDynamicDNSRequest inValue = new OnvifBasic.device.SetDynamicDNSRequest();
            inValue.Type = Type;
            inValue.Name = Name;
            inValue.TTL = TTL;
            OnvifBasic.device.SetDynamicDNSResponse retVal = ((OnvifBasic.device.Device)(this)).SetDynamicDNS(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetDynamicDNS(OnvifBasic.device.SetDynamicDNSRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDynamicDNS(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDynamicDNS(OnvifBasic.device.DynamicDNSType Type, string Name, string TTL, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetDynamicDNSRequest inValue = new OnvifBasic.device.SetDynamicDNSRequest();
            inValue.Type = Type;
            inValue.Name = Name;
            inValue.TTL = TTL;
            return ((OnvifBasic.device.Device)(this)).BeginSetDynamicDNS(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetDynamicDNSResponse OnvifBasic.device.Device.EndSetDynamicDNS(System.IAsyncResult result) {
            return base.Channel.EndSetDynamicDNS(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetDynamicDNS(System.IAsyncResult result) {
            OnvifBasic.device.SetDynamicDNSResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetDynamicDNS(result);
        }
        
        private System.IAsyncResult OnBeginSetDynamicDNS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.DynamicDNSType Type = ((OnvifBasic.device.DynamicDNSType)(inValues[0]));
            string Name = ((string)(inValues[1]));
            string TTL = ((string)(inValues[2]));
            return this.BeginSetDynamicDNS(Type, Name, TTL, callback, asyncState);
        }
        
        private object[] OnEndSetDynamicDNS(System.IAsyncResult result) {
            this.EndSetDynamicDNS(result);
            return null;
        }
        
        private void OnSetDynamicDNSCompleted(object state) {
            if ((this.SetDynamicDNSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDynamicDNSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDynamicDNSAsync(OnvifBasic.device.DynamicDNSType Type, string Name, string TTL) {
            this.SetDynamicDNSAsync(Type, Name, TTL, null);
        }
        
        public void SetDynamicDNSAsync(OnvifBasic.device.DynamicDNSType Type, string Name, string TTL, object userState) {
            if ((this.onBeginSetDynamicDNSDelegate == null)) {
                this.onBeginSetDynamicDNSDelegate = new BeginOperationDelegate(this.OnBeginSetDynamicDNS);
            }
            if ((this.onEndSetDynamicDNSDelegate == null)) {
                this.onEndSetDynamicDNSDelegate = new EndOperationDelegate(this.OnEndSetDynamicDNS);
            }
            if ((this.onSetDynamicDNSCompletedDelegate == null)) {
                this.onSetDynamicDNSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDynamicDNSCompleted);
            }
            base.InvokeAsync(this.onBeginSetDynamicDNSDelegate, new object[] {
                        Type,
                        Name,
                        TTL}, this.onEndSetDynamicDNSDelegate, this.onSetDynamicDNSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetNetworkInterfacesResponse OnvifBasic.device.Device.GetNetworkInterfaces(OnvifBasic.device.GetNetworkInterfacesRequest request) {
            return base.Channel.GetNetworkInterfaces(request);
        }
        
        public OnvifBasic.device.NetworkInterface[] GetNetworkInterfaces() {
            OnvifBasic.device.GetNetworkInterfacesRequest inValue = new OnvifBasic.device.GetNetworkInterfacesRequest();
            OnvifBasic.device.GetNetworkInterfacesResponse retVal = ((OnvifBasic.device.Device)(this)).GetNetworkInterfaces(inValue);
            return retVal.NetworkInterfaces;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetNetworkInterfaces(OnvifBasic.device.GetNetworkInterfacesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkInterfaces(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNetworkInterfaces(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetNetworkInterfacesRequest inValue = new OnvifBasic.device.GetNetworkInterfacesRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetNetworkInterfaces(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetNetworkInterfacesResponse OnvifBasic.device.Device.EndGetNetworkInterfaces(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkInterfaces(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.NetworkInterface[] EndGetNetworkInterfaces(System.IAsyncResult result) {
            OnvifBasic.device.GetNetworkInterfacesResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetNetworkInterfaces(result);
            return retVal.NetworkInterfaces;
        }
        
        private System.IAsyncResult OnBeginGetNetworkInterfaces(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNetworkInterfaces(callback, asyncState);
        }
        
        private object[] OnEndGetNetworkInterfaces(System.IAsyncResult result) {
            OnvifBasic.device.NetworkInterface[] retVal = this.EndGetNetworkInterfaces(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkInterfacesCompleted(object state) {
            if ((this.GetNetworkInterfacesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkInterfacesCompleted(this, new GetNetworkInterfacesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkInterfacesAsync() {
            this.GetNetworkInterfacesAsync(null);
        }
        
        public void GetNetworkInterfacesAsync(object userState) {
            if ((this.onBeginGetNetworkInterfacesDelegate == null)) {
                this.onBeginGetNetworkInterfacesDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkInterfaces);
            }
            if ((this.onEndGetNetworkInterfacesDelegate == null)) {
                this.onEndGetNetworkInterfacesDelegate = new EndOperationDelegate(this.OnEndGetNetworkInterfaces);
            }
            if ((this.onGetNetworkInterfacesCompletedDelegate == null)) {
                this.onGetNetworkInterfacesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkInterfacesCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkInterfacesDelegate, null, this.onEndGetNetworkInterfacesDelegate, this.onGetNetworkInterfacesCompletedDelegate, userState);
        }
        
        public bool SetNetworkInterfaces(string InterfaceToken, OnvifBasic.device.NetworkInterfaceSetConfiguration NetworkInterface) {
            return base.Channel.SetNetworkInterfaces(InterfaceToken, NetworkInterface);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetNetworkInterfaces(string InterfaceToken, OnvifBasic.device.NetworkInterfaceSetConfiguration NetworkInterface, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetNetworkInterfaces(InterfaceToken, NetworkInterface, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSetNetworkInterfaces(System.IAsyncResult result) {
            return base.Channel.EndSetNetworkInterfaces(result);
        }
        
        private System.IAsyncResult OnBeginSetNetworkInterfaces(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string InterfaceToken = ((string)(inValues[0]));
            OnvifBasic.device.NetworkInterfaceSetConfiguration NetworkInterface = ((OnvifBasic.device.NetworkInterfaceSetConfiguration)(inValues[1]));
            return this.BeginSetNetworkInterfaces(InterfaceToken, NetworkInterface, callback, asyncState);
        }
        
        private object[] OnEndSetNetworkInterfaces(System.IAsyncResult result) {
            bool retVal = this.EndSetNetworkInterfaces(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetNetworkInterfacesCompleted(object state) {
            if ((this.SetNetworkInterfacesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetNetworkInterfacesCompleted(this, new SetNetworkInterfacesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetNetworkInterfacesAsync(string InterfaceToken, OnvifBasic.device.NetworkInterfaceSetConfiguration NetworkInterface) {
            this.SetNetworkInterfacesAsync(InterfaceToken, NetworkInterface, null);
        }
        
        public void SetNetworkInterfacesAsync(string InterfaceToken, OnvifBasic.device.NetworkInterfaceSetConfiguration NetworkInterface, object userState) {
            if ((this.onBeginSetNetworkInterfacesDelegate == null)) {
                this.onBeginSetNetworkInterfacesDelegate = new BeginOperationDelegate(this.OnBeginSetNetworkInterfaces);
            }
            if ((this.onEndSetNetworkInterfacesDelegate == null)) {
                this.onEndSetNetworkInterfacesDelegate = new EndOperationDelegate(this.OnEndSetNetworkInterfaces);
            }
            if ((this.onSetNetworkInterfacesCompletedDelegate == null)) {
                this.onSetNetworkInterfacesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetNetworkInterfacesCompleted);
            }
            base.InvokeAsync(this.onBeginSetNetworkInterfacesDelegate, new object[] {
                        InterfaceToken,
                        NetworkInterface}, this.onEndSetNetworkInterfacesDelegate, this.onSetNetworkInterfacesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetNetworkProtocolsResponse OnvifBasic.device.Device.GetNetworkProtocols(OnvifBasic.device.GetNetworkProtocolsRequest request) {
            return base.Channel.GetNetworkProtocols(request);
        }
        
        public OnvifBasic.device.NetworkProtocol[] GetNetworkProtocols() {
            OnvifBasic.device.GetNetworkProtocolsRequest inValue = new OnvifBasic.device.GetNetworkProtocolsRequest();
            OnvifBasic.device.GetNetworkProtocolsResponse retVal = ((OnvifBasic.device.Device)(this)).GetNetworkProtocols(inValue);
            return retVal.NetworkProtocols;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetNetworkProtocols(OnvifBasic.device.GetNetworkProtocolsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkProtocols(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNetworkProtocols(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetNetworkProtocolsRequest inValue = new OnvifBasic.device.GetNetworkProtocolsRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetNetworkProtocols(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetNetworkProtocolsResponse OnvifBasic.device.Device.EndGetNetworkProtocols(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkProtocols(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.NetworkProtocol[] EndGetNetworkProtocols(System.IAsyncResult result) {
            OnvifBasic.device.GetNetworkProtocolsResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetNetworkProtocols(result);
            return retVal.NetworkProtocols;
        }
        
        private System.IAsyncResult OnBeginGetNetworkProtocols(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNetworkProtocols(callback, asyncState);
        }
        
        private object[] OnEndGetNetworkProtocols(System.IAsyncResult result) {
            OnvifBasic.device.NetworkProtocol[] retVal = this.EndGetNetworkProtocols(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkProtocolsCompleted(object state) {
            if ((this.GetNetworkProtocolsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkProtocolsCompleted(this, new GetNetworkProtocolsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkProtocolsAsync() {
            this.GetNetworkProtocolsAsync(null);
        }
        
        public void GetNetworkProtocolsAsync(object userState) {
            if ((this.onBeginGetNetworkProtocolsDelegate == null)) {
                this.onBeginGetNetworkProtocolsDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkProtocols);
            }
            if ((this.onEndGetNetworkProtocolsDelegate == null)) {
                this.onEndGetNetworkProtocolsDelegate = new EndOperationDelegate(this.OnEndGetNetworkProtocols);
            }
            if ((this.onGetNetworkProtocolsCompletedDelegate == null)) {
                this.onGetNetworkProtocolsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkProtocolsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkProtocolsDelegate, null, this.onEndGetNetworkProtocolsDelegate, this.onGetNetworkProtocolsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetNetworkProtocolsResponse OnvifBasic.device.Device.SetNetworkProtocols(OnvifBasic.device.SetNetworkProtocolsRequest request) {
            return base.Channel.SetNetworkProtocols(request);
        }
        
        public void SetNetworkProtocols(OnvifBasic.device.NetworkProtocol[] NetworkProtocols) {
            OnvifBasic.device.SetNetworkProtocolsRequest inValue = new OnvifBasic.device.SetNetworkProtocolsRequest();
            inValue.NetworkProtocols = NetworkProtocols;
            OnvifBasic.device.SetNetworkProtocolsResponse retVal = ((OnvifBasic.device.Device)(this)).SetNetworkProtocols(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetNetworkProtocols(OnvifBasic.device.SetNetworkProtocolsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetNetworkProtocols(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetNetworkProtocols(OnvifBasic.device.NetworkProtocol[] NetworkProtocols, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetNetworkProtocolsRequest inValue = new OnvifBasic.device.SetNetworkProtocolsRequest();
            inValue.NetworkProtocols = NetworkProtocols;
            return ((OnvifBasic.device.Device)(this)).BeginSetNetworkProtocols(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetNetworkProtocolsResponse OnvifBasic.device.Device.EndSetNetworkProtocols(System.IAsyncResult result) {
            return base.Channel.EndSetNetworkProtocols(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetNetworkProtocols(System.IAsyncResult result) {
            OnvifBasic.device.SetNetworkProtocolsResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetNetworkProtocols(result);
        }
        
        private System.IAsyncResult OnBeginSetNetworkProtocols(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.NetworkProtocol[] NetworkProtocols = ((OnvifBasic.device.NetworkProtocol[])(inValues[0]));
            return this.BeginSetNetworkProtocols(NetworkProtocols, callback, asyncState);
        }
        
        private object[] OnEndSetNetworkProtocols(System.IAsyncResult result) {
            this.EndSetNetworkProtocols(result);
            return null;
        }
        
        private void OnSetNetworkProtocolsCompleted(object state) {
            if ((this.SetNetworkProtocolsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetNetworkProtocolsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetNetworkProtocolsAsync(OnvifBasic.device.NetworkProtocol[] NetworkProtocols) {
            this.SetNetworkProtocolsAsync(NetworkProtocols, null);
        }
        
        public void SetNetworkProtocolsAsync(OnvifBasic.device.NetworkProtocol[] NetworkProtocols, object userState) {
            if ((this.onBeginSetNetworkProtocolsDelegate == null)) {
                this.onBeginSetNetworkProtocolsDelegate = new BeginOperationDelegate(this.OnBeginSetNetworkProtocols);
            }
            if ((this.onEndSetNetworkProtocolsDelegate == null)) {
                this.onEndSetNetworkProtocolsDelegate = new EndOperationDelegate(this.OnEndSetNetworkProtocols);
            }
            if ((this.onSetNetworkProtocolsCompletedDelegate == null)) {
                this.onSetNetworkProtocolsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetNetworkProtocolsCompleted);
            }
            base.InvokeAsync(this.onBeginSetNetworkProtocolsDelegate, new object[] {
                        NetworkProtocols}, this.onEndSetNetworkProtocolsDelegate, this.onSetNetworkProtocolsCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.NetworkGateway GetNetworkDefaultGateway() {
            return base.Channel.GetNetworkDefaultGateway();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNetworkDefaultGateway(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkDefaultGateway(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.NetworkGateway EndGetNetworkDefaultGateway(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkDefaultGateway(result);
        }
        
        private System.IAsyncResult OnBeginGetNetworkDefaultGateway(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNetworkDefaultGateway(callback, asyncState);
        }
        
        private object[] OnEndGetNetworkDefaultGateway(System.IAsyncResult result) {
            OnvifBasic.device.NetworkGateway retVal = this.EndGetNetworkDefaultGateway(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkDefaultGatewayCompleted(object state) {
            if ((this.GetNetworkDefaultGatewayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkDefaultGatewayCompleted(this, new GetNetworkDefaultGatewayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkDefaultGatewayAsync() {
            this.GetNetworkDefaultGatewayAsync(null);
        }
        
        public void GetNetworkDefaultGatewayAsync(object userState) {
            if ((this.onBeginGetNetworkDefaultGatewayDelegate == null)) {
                this.onBeginGetNetworkDefaultGatewayDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkDefaultGateway);
            }
            if ((this.onEndGetNetworkDefaultGatewayDelegate == null)) {
                this.onEndGetNetworkDefaultGatewayDelegate = new EndOperationDelegate(this.OnEndGetNetworkDefaultGateway);
            }
            if ((this.onGetNetworkDefaultGatewayCompletedDelegate == null)) {
                this.onGetNetworkDefaultGatewayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkDefaultGatewayCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkDefaultGatewayDelegate, null, this.onEndGetNetworkDefaultGatewayDelegate, this.onGetNetworkDefaultGatewayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetNetworkDefaultGatewayResponse OnvifBasic.device.Device.SetNetworkDefaultGateway(OnvifBasic.device.SetNetworkDefaultGatewayRequest request) {
            return base.Channel.SetNetworkDefaultGateway(request);
        }
        
        public void SetNetworkDefaultGateway(string[] IPv4Address, string[] IPv6Address) {
            OnvifBasic.device.SetNetworkDefaultGatewayRequest inValue = new OnvifBasic.device.SetNetworkDefaultGatewayRequest();
            inValue.IPv4Address = IPv4Address;
            inValue.IPv6Address = IPv6Address;
            OnvifBasic.device.SetNetworkDefaultGatewayResponse retVal = ((OnvifBasic.device.Device)(this)).SetNetworkDefaultGateway(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetNetworkDefaultGateway(OnvifBasic.device.SetNetworkDefaultGatewayRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetNetworkDefaultGateway(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetNetworkDefaultGateway(string[] IPv4Address, string[] IPv6Address, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetNetworkDefaultGatewayRequest inValue = new OnvifBasic.device.SetNetworkDefaultGatewayRequest();
            inValue.IPv4Address = IPv4Address;
            inValue.IPv6Address = IPv6Address;
            return ((OnvifBasic.device.Device)(this)).BeginSetNetworkDefaultGateway(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetNetworkDefaultGatewayResponse OnvifBasic.device.Device.EndSetNetworkDefaultGateway(System.IAsyncResult result) {
            return base.Channel.EndSetNetworkDefaultGateway(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetNetworkDefaultGateway(System.IAsyncResult result) {
            OnvifBasic.device.SetNetworkDefaultGatewayResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetNetworkDefaultGateway(result);
        }
        
        private System.IAsyncResult OnBeginSetNetworkDefaultGateway(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] IPv4Address = ((string[])(inValues[0]));
            string[] IPv6Address = ((string[])(inValues[1]));
            return this.BeginSetNetworkDefaultGateway(IPv4Address, IPv6Address, callback, asyncState);
        }
        
        private object[] OnEndSetNetworkDefaultGateway(System.IAsyncResult result) {
            this.EndSetNetworkDefaultGateway(result);
            return null;
        }
        
        private void OnSetNetworkDefaultGatewayCompleted(object state) {
            if ((this.SetNetworkDefaultGatewayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetNetworkDefaultGatewayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetNetworkDefaultGatewayAsync(string[] IPv4Address, string[] IPv6Address) {
            this.SetNetworkDefaultGatewayAsync(IPv4Address, IPv6Address, null);
        }
        
        public void SetNetworkDefaultGatewayAsync(string[] IPv4Address, string[] IPv6Address, object userState) {
            if ((this.onBeginSetNetworkDefaultGatewayDelegate == null)) {
                this.onBeginSetNetworkDefaultGatewayDelegate = new BeginOperationDelegate(this.OnBeginSetNetworkDefaultGateway);
            }
            if ((this.onEndSetNetworkDefaultGatewayDelegate == null)) {
                this.onEndSetNetworkDefaultGatewayDelegate = new EndOperationDelegate(this.OnEndSetNetworkDefaultGateway);
            }
            if ((this.onSetNetworkDefaultGatewayCompletedDelegate == null)) {
                this.onSetNetworkDefaultGatewayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetNetworkDefaultGatewayCompleted);
            }
            base.InvokeAsync(this.onBeginSetNetworkDefaultGatewayDelegate, new object[] {
                        IPv4Address,
                        IPv6Address}, this.onEndSetNetworkDefaultGatewayDelegate, this.onSetNetworkDefaultGatewayCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.NetworkZeroConfiguration GetZeroConfiguration() {
            return base.Channel.GetZeroConfiguration();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetZeroConfiguration(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetZeroConfiguration(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.NetworkZeroConfiguration EndGetZeroConfiguration(System.IAsyncResult result) {
            return base.Channel.EndGetZeroConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginGetZeroConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetZeroConfiguration(callback, asyncState);
        }
        
        private object[] OnEndGetZeroConfiguration(System.IAsyncResult result) {
            OnvifBasic.device.NetworkZeroConfiguration retVal = this.EndGetZeroConfiguration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetZeroConfigurationCompleted(object state) {
            if ((this.GetZeroConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetZeroConfigurationCompleted(this, new GetZeroConfigurationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetZeroConfigurationAsync() {
            this.GetZeroConfigurationAsync(null);
        }
        
        public void GetZeroConfigurationAsync(object userState) {
            if ((this.onBeginGetZeroConfigurationDelegate == null)) {
                this.onBeginGetZeroConfigurationDelegate = new BeginOperationDelegate(this.OnBeginGetZeroConfiguration);
            }
            if ((this.onEndGetZeroConfigurationDelegate == null)) {
                this.onEndGetZeroConfigurationDelegate = new EndOperationDelegate(this.OnEndGetZeroConfiguration);
            }
            if ((this.onGetZeroConfigurationCompletedDelegate == null)) {
                this.onGetZeroConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetZeroConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginGetZeroConfigurationDelegate, null, this.onEndGetZeroConfigurationDelegate, this.onGetZeroConfigurationCompletedDelegate, userState);
        }
        
        public void SetZeroConfiguration(string InterfaceToken, bool Enabled) {
            base.Channel.SetZeroConfiguration(InterfaceToken, Enabled);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetZeroConfiguration(string InterfaceToken, bool Enabled, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetZeroConfiguration(InterfaceToken, Enabled, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetZeroConfiguration(System.IAsyncResult result) {
            base.Channel.EndSetZeroConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginSetZeroConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string InterfaceToken = ((string)(inValues[0]));
            bool Enabled = ((bool)(inValues[1]));
            return this.BeginSetZeroConfiguration(InterfaceToken, Enabled, callback, asyncState);
        }
        
        private object[] OnEndSetZeroConfiguration(System.IAsyncResult result) {
            this.EndSetZeroConfiguration(result);
            return null;
        }
        
        private void OnSetZeroConfigurationCompleted(object state) {
            if ((this.SetZeroConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetZeroConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetZeroConfigurationAsync(string InterfaceToken, bool Enabled) {
            this.SetZeroConfigurationAsync(InterfaceToken, Enabled, null);
        }
        
        public void SetZeroConfigurationAsync(string InterfaceToken, bool Enabled, object userState) {
            if ((this.onBeginSetZeroConfigurationDelegate == null)) {
                this.onBeginSetZeroConfigurationDelegate = new BeginOperationDelegate(this.OnBeginSetZeroConfiguration);
            }
            if ((this.onEndSetZeroConfigurationDelegate == null)) {
                this.onEndSetZeroConfigurationDelegate = new EndOperationDelegate(this.OnEndSetZeroConfiguration);
            }
            if ((this.onSetZeroConfigurationCompletedDelegate == null)) {
                this.onSetZeroConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetZeroConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginSetZeroConfigurationDelegate, new object[] {
                        InterfaceToken,
                        Enabled}, this.onEndSetZeroConfigurationDelegate, this.onSetZeroConfigurationCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.IPAddressFilter GetIPAddressFilter() {
            return base.Channel.GetIPAddressFilter();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIPAddressFilter(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIPAddressFilter(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.IPAddressFilter EndGetIPAddressFilter(System.IAsyncResult result) {
            return base.Channel.EndGetIPAddressFilter(result);
        }
        
        private System.IAsyncResult OnBeginGetIPAddressFilter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetIPAddressFilter(callback, asyncState);
        }
        
        private object[] OnEndGetIPAddressFilter(System.IAsyncResult result) {
            OnvifBasic.device.IPAddressFilter retVal = this.EndGetIPAddressFilter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIPAddressFilterCompleted(object state) {
            if ((this.GetIPAddressFilterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIPAddressFilterCompleted(this, new GetIPAddressFilterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIPAddressFilterAsync() {
            this.GetIPAddressFilterAsync(null);
        }
        
        public void GetIPAddressFilterAsync(object userState) {
            if ((this.onBeginGetIPAddressFilterDelegate == null)) {
                this.onBeginGetIPAddressFilterDelegate = new BeginOperationDelegate(this.OnBeginGetIPAddressFilter);
            }
            if ((this.onEndGetIPAddressFilterDelegate == null)) {
                this.onEndGetIPAddressFilterDelegate = new EndOperationDelegate(this.OnEndGetIPAddressFilter);
            }
            if ((this.onGetIPAddressFilterCompletedDelegate == null)) {
                this.onGetIPAddressFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIPAddressFilterCompleted);
            }
            base.InvokeAsync(this.onBeginGetIPAddressFilterDelegate, null, this.onEndGetIPAddressFilterDelegate, this.onGetIPAddressFilterCompletedDelegate, userState);
        }
        
        public void SetIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter) {
            base.Channel.SetIPAddressFilter(IPAddressFilter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetIPAddressFilter(IPAddressFilter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetIPAddressFilter(System.IAsyncResult result) {
            base.Channel.EndSetIPAddressFilter(result);
        }
        
        private System.IAsyncResult OnBeginSetIPAddressFilter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.IPAddressFilter IPAddressFilter = ((OnvifBasic.device.IPAddressFilter)(inValues[0]));
            return this.BeginSetIPAddressFilter(IPAddressFilter, callback, asyncState);
        }
        
        private object[] OnEndSetIPAddressFilter(System.IAsyncResult result) {
            this.EndSetIPAddressFilter(result);
            return null;
        }
        
        private void OnSetIPAddressFilterCompleted(object state) {
            if ((this.SetIPAddressFilterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetIPAddressFilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetIPAddressFilterAsync(OnvifBasic.device.IPAddressFilter IPAddressFilter) {
            this.SetIPAddressFilterAsync(IPAddressFilter, null);
        }
        
        public void SetIPAddressFilterAsync(OnvifBasic.device.IPAddressFilter IPAddressFilter, object userState) {
            if ((this.onBeginSetIPAddressFilterDelegate == null)) {
                this.onBeginSetIPAddressFilterDelegate = new BeginOperationDelegate(this.OnBeginSetIPAddressFilter);
            }
            if ((this.onEndSetIPAddressFilterDelegate == null)) {
                this.onEndSetIPAddressFilterDelegate = new EndOperationDelegate(this.OnEndSetIPAddressFilter);
            }
            if ((this.onSetIPAddressFilterCompletedDelegate == null)) {
                this.onSetIPAddressFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetIPAddressFilterCompleted);
            }
            base.InvokeAsync(this.onBeginSetIPAddressFilterDelegate, new object[] {
                        IPAddressFilter}, this.onEndSetIPAddressFilterDelegate, this.onSetIPAddressFilterCompletedDelegate, userState);
        }
        
        public void AddIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter) {
            base.Channel.AddIPAddressFilter(IPAddressFilter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddIPAddressFilter(IPAddressFilter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddIPAddressFilter(System.IAsyncResult result) {
            base.Channel.EndAddIPAddressFilter(result);
        }
        
        private System.IAsyncResult OnBeginAddIPAddressFilter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.IPAddressFilter IPAddressFilter = ((OnvifBasic.device.IPAddressFilter)(inValues[0]));
            return this.BeginAddIPAddressFilter(IPAddressFilter, callback, asyncState);
        }
        
        private object[] OnEndAddIPAddressFilter(System.IAsyncResult result) {
            this.EndAddIPAddressFilter(result);
            return null;
        }
        
        private void OnAddIPAddressFilterCompleted(object state) {
            if ((this.AddIPAddressFilterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddIPAddressFilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddIPAddressFilterAsync(OnvifBasic.device.IPAddressFilter IPAddressFilter) {
            this.AddIPAddressFilterAsync(IPAddressFilter, null);
        }
        
        public void AddIPAddressFilterAsync(OnvifBasic.device.IPAddressFilter IPAddressFilter, object userState) {
            if ((this.onBeginAddIPAddressFilterDelegate == null)) {
                this.onBeginAddIPAddressFilterDelegate = new BeginOperationDelegate(this.OnBeginAddIPAddressFilter);
            }
            if ((this.onEndAddIPAddressFilterDelegate == null)) {
                this.onEndAddIPAddressFilterDelegate = new EndOperationDelegate(this.OnEndAddIPAddressFilter);
            }
            if ((this.onAddIPAddressFilterCompletedDelegate == null)) {
                this.onAddIPAddressFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddIPAddressFilterCompleted);
            }
            base.InvokeAsync(this.onBeginAddIPAddressFilterDelegate, new object[] {
                        IPAddressFilter}, this.onEndAddIPAddressFilterDelegate, this.onAddIPAddressFilterCompletedDelegate, userState);
        }
        
        public void RemoveIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter) {
            base.Channel.RemoveIPAddressFilter(IPAddressFilter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveIPAddressFilter(OnvifBasic.device.IPAddressFilter IPAddressFilter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveIPAddressFilter(IPAddressFilter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveIPAddressFilter(System.IAsyncResult result) {
            base.Channel.EndRemoveIPAddressFilter(result);
        }
        
        private System.IAsyncResult OnBeginRemoveIPAddressFilter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.IPAddressFilter IPAddressFilter = ((OnvifBasic.device.IPAddressFilter)(inValues[0]));
            return this.BeginRemoveIPAddressFilter(IPAddressFilter, callback, asyncState);
        }
        
        private object[] OnEndRemoveIPAddressFilter(System.IAsyncResult result) {
            this.EndRemoveIPAddressFilter(result);
            return null;
        }
        
        private void OnRemoveIPAddressFilterCompleted(object state) {
            if ((this.RemoveIPAddressFilterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveIPAddressFilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveIPAddressFilterAsync(OnvifBasic.device.IPAddressFilter IPAddressFilter) {
            this.RemoveIPAddressFilterAsync(IPAddressFilter, null);
        }
        
        public void RemoveIPAddressFilterAsync(OnvifBasic.device.IPAddressFilter IPAddressFilter, object userState) {
            if ((this.onBeginRemoveIPAddressFilterDelegate == null)) {
                this.onBeginRemoveIPAddressFilterDelegate = new BeginOperationDelegate(this.OnBeginRemoveIPAddressFilter);
            }
            if ((this.onEndRemoveIPAddressFilterDelegate == null)) {
                this.onEndRemoveIPAddressFilterDelegate = new EndOperationDelegate(this.OnEndRemoveIPAddressFilter);
            }
            if ((this.onRemoveIPAddressFilterCompletedDelegate == null)) {
                this.onRemoveIPAddressFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveIPAddressFilterCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveIPAddressFilterDelegate, new object[] {
                        IPAddressFilter}, this.onEndRemoveIPAddressFilterDelegate, this.onRemoveIPAddressFilterCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.BinaryData GetAccessPolicy() {
            return base.Channel.GetAccessPolicy();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAccessPolicy(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccessPolicy(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.BinaryData EndGetAccessPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetAccessPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetAccessPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAccessPolicy(callback, asyncState);
        }
        
        private object[] OnEndGetAccessPolicy(System.IAsyncResult result) {
            OnvifBasic.device.BinaryData retVal = this.EndGetAccessPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccessPolicyCompleted(object state) {
            if ((this.GetAccessPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccessPolicyCompleted(this, new GetAccessPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccessPolicyAsync() {
            this.GetAccessPolicyAsync(null);
        }
        
        public void GetAccessPolicyAsync(object userState) {
            if ((this.onBeginGetAccessPolicyDelegate == null)) {
                this.onBeginGetAccessPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetAccessPolicy);
            }
            if ((this.onEndGetAccessPolicyDelegate == null)) {
                this.onEndGetAccessPolicyDelegate = new EndOperationDelegate(this.OnEndGetAccessPolicy);
            }
            if ((this.onGetAccessPolicyCompletedDelegate == null)) {
                this.onGetAccessPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccessPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccessPolicyDelegate, null, this.onEndGetAccessPolicyDelegate, this.onGetAccessPolicyCompletedDelegate, userState);
        }
        
        public void SetAccessPolicy(OnvifBasic.device.BinaryData PolicyFile) {
            base.Channel.SetAccessPolicy(PolicyFile);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetAccessPolicy(OnvifBasic.device.BinaryData PolicyFile, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetAccessPolicy(PolicyFile, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetAccessPolicy(System.IAsyncResult result) {
            base.Channel.EndSetAccessPolicy(result);
        }
        
        private System.IAsyncResult OnBeginSetAccessPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.BinaryData PolicyFile = ((OnvifBasic.device.BinaryData)(inValues[0]));
            return this.BeginSetAccessPolicy(PolicyFile, callback, asyncState);
        }
        
        private object[] OnEndSetAccessPolicy(System.IAsyncResult result) {
            this.EndSetAccessPolicy(result);
            return null;
        }
        
        private void OnSetAccessPolicyCompleted(object state) {
            if ((this.SetAccessPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetAccessPolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetAccessPolicyAsync(OnvifBasic.device.BinaryData PolicyFile) {
            this.SetAccessPolicyAsync(PolicyFile, null);
        }
        
        public void SetAccessPolicyAsync(OnvifBasic.device.BinaryData PolicyFile, object userState) {
            if ((this.onBeginSetAccessPolicyDelegate == null)) {
                this.onBeginSetAccessPolicyDelegate = new BeginOperationDelegate(this.OnBeginSetAccessPolicy);
            }
            if ((this.onEndSetAccessPolicyDelegate == null)) {
                this.onEndSetAccessPolicyDelegate = new EndOperationDelegate(this.OnEndSetAccessPolicy);
            }
            if ((this.onSetAccessPolicyCompletedDelegate == null)) {
                this.onSetAccessPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetAccessPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginSetAccessPolicyDelegate, new object[] {
                        PolicyFile}, this.onEndSetAccessPolicyDelegate, this.onSetAccessPolicyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetRelayOutputsResponse OnvifBasic.device.Device.GetRelayOutputs(OnvifBasic.device.GetRelayOutputsRequest request) {
            return base.Channel.GetRelayOutputs(request);
        }
        
        public OnvifBasic.device.RelayOutput[] GetRelayOutputs() {
            OnvifBasic.device.GetRelayOutputsRequest inValue = new OnvifBasic.device.GetRelayOutputsRequest();
            OnvifBasic.device.GetRelayOutputsResponse retVal = ((OnvifBasic.device.Device)(this)).GetRelayOutputs(inValue);
            return retVal.RelayOutputs;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetRelayOutputs(OnvifBasic.device.GetRelayOutputsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRelayOutputs(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRelayOutputs(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetRelayOutputsRequest inValue = new OnvifBasic.device.GetRelayOutputsRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetRelayOutputs(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetRelayOutputsResponse OnvifBasic.device.Device.EndGetRelayOutputs(System.IAsyncResult result) {
            return base.Channel.EndGetRelayOutputs(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.RelayOutput[] EndGetRelayOutputs(System.IAsyncResult result) {
            OnvifBasic.device.GetRelayOutputsResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetRelayOutputs(result);
            return retVal.RelayOutputs;
        }
        
        private System.IAsyncResult OnBeginGetRelayOutputs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRelayOutputs(callback, asyncState);
        }
        
        private object[] OnEndGetRelayOutputs(System.IAsyncResult result) {
            OnvifBasic.device.RelayOutput[] retVal = this.EndGetRelayOutputs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRelayOutputsCompleted(object state) {
            if ((this.GetRelayOutputsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRelayOutputsCompleted(this, new GetRelayOutputsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRelayOutputsAsync() {
            this.GetRelayOutputsAsync(null);
        }
        
        public void GetRelayOutputsAsync(object userState) {
            if ((this.onBeginGetRelayOutputsDelegate == null)) {
                this.onBeginGetRelayOutputsDelegate = new BeginOperationDelegate(this.OnBeginGetRelayOutputs);
            }
            if ((this.onEndGetRelayOutputsDelegate == null)) {
                this.onEndGetRelayOutputsDelegate = new EndOperationDelegate(this.OnEndGetRelayOutputs);
            }
            if ((this.onGetRelayOutputsCompletedDelegate == null)) {
                this.onGetRelayOutputsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRelayOutputsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRelayOutputsDelegate, null, this.onEndGetRelayOutputsDelegate, this.onGetRelayOutputsCompletedDelegate, userState);
        }
        
        public void SetRelayOutputSettings(string RelayOutputToken, OnvifBasic.device.RelayOutputSettings Properties) {
            base.Channel.SetRelayOutputSettings(RelayOutputToken, Properties);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRelayOutputSettings(string RelayOutputToken, OnvifBasic.device.RelayOutputSettings Properties, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRelayOutputSettings(RelayOutputToken, Properties, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetRelayOutputSettings(System.IAsyncResult result) {
            base.Channel.EndSetRelayOutputSettings(result);
        }
        
        private System.IAsyncResult OnBeginSetRelayOutputSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string RelayOutputToken = ((string)(inValues[0]));
            OnvifBasic.device.RelayOutputSettings Properties = ((OnvifBasic.device.RelayOutputSettings)(inValues[1]));
            return this.BeginSetRelayOutputSettings(RelayOutputToken, Properties, callback, asyncState);
        }
        
        private object[] OnEndSetRelayOutputSettings(System.IAsyncResult result) {
            this.EndSetRelayOutputSettings(result);
            return null;
        }
        
        private void OnSetRelayOutputSettingsCompleted(object state) {
            if ((this.SetRelayOutputSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRelayOutputSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRelayOutputSettingsAsync(string RelayOutputToken, OnvifBasic.device.RelayOutputSettings Properties) {
            this.SetRelayOutputSettingsAsync(RelayOutputToken, Properties, null);
        }
        
        public void SetRelayOutputSettingsAsync(string RelayOutputToken, OnvifBasic.device.RelayOutputSettings Properties, object userState) {
            if ((this.onBeginSetRelayOutputSettingsDelegate == null)) {
                this.onBeginSetRelayOutputSettingsDelegate = new BeginOperationDelegate(this.OnBeginSetRelayOutputSettings);
            }
            if ((this.onEndSetRelayOutputSettingsDelegate == null)) {
                this.onEndSetRelayOutputSettingsDelegate = new EndOperationDelegate(this.OnEndSetRelayOutputSettings);
            }
            if ((this.onSetRelayOutputSettingsCompletedDelegate == null)) {
                this.onSetRelayOutputSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRelayOutputSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginSetRelayOutputSettingsDelegate, new object[] {
                        RelayOutputToken,
                        Properties}, this.onEndSetRelayOutputSettingsDelegate, this.onSetRelayOutputSettingsCompletedDelegate, userState);
        }
        
        public void SetRelayOutputState(string RelayOutputToken, OnvifBasic.device.RelayLogicalState LogicalState) {
            base.Channel.SetRelayOutputState(RelayOutputToken, LogicalState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRelayOutputState(string RelayOutputToken, OnvifBasic.device.RelayLogicalState LogicalState, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRelayOutputState(RelayOutputToken, LogicalState, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetRelayOutputState(System.IAsyncResult result) {
            base.Channel.EndSetRelayOutputState(result);
        }
        
        private System.IAsyncResult OnBeginSetRelayOutputState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string RelayOutputToken = ((string)(inValues[0]));
            OnvifBasic.device.RelayLogicalState LogicalState = ((OnvifBasic.device.RelayLogicalState)(inValues[1]));
            return this.BeginSetRelayOutputState(RelayOutputToken, LogicalState, callback, asyncState);
        }
        
        private object[] OnEndSetRelayOutputState(System.IAsyncResult result) {
            this.EndSetRelayOutputState(result);
            return null;
        }
        
        private void OnSetRelayOutputStateCompleted(object state) {
            if ((this.SetRelayOutputStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRelayOutputStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRelayOutputStateAsync(string RelayOutputToken, OnvifBasic.device.RelayLogicalState LogicalState) {
            this.SetRelayOutputStateAsync(RelayOutputToken, LogicalState, null);
        }
        
        public void SetRelayOutputStateAsync(string RelayOutputToken, OnvifBasic.device.RelayLogicalState LogicalState, object userState) {
            if ((this.onBeginSetRelayOutputStateDelegate == null)) {
                this.onBeginSetRelayOutputStateDelegate = new BeginOperationDelegate(this.OnBeginSetRelayOutputState);
            }
            if ((this.onEndSetRelayOutputStateDelegate == null)) {
                this.onEndSetRelayOutputStateDelegate = new EndOperationDelegate(this.OnEndSetRelayOutputState);
            }
            if ((this.onSetRelayOutputStateCompletedDelegate == null)) {
                this.onSetRelayOutputStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRelayOutputStateCompleted);
            }
            base.InvokeAsync(this.onBeginSetRelayOutputStateDelegate, new object[] {
                        RelayOutputToken,
                        LogicalState}, this.onEndSetRelayOutputStateDelegate, this.onSetRelayOutputStateCompletedDelegate, userState);
        }
        
        public string SendAuxiliaryCommand(string AuxiliaryCommand) {
            return base.Channel.SendAuxiliaryCommand(AuxiliaryCommand);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendAuxiliaryCommand(string AuxiliaryCommand, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendAuxiliaryCommand(AuxiliaryCommand, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSendAuxiliaryCommand(System.IAsyncResult result) {
            return base.Channel.EndSendAuxiliaryCommand(result);
        }
        
        private System.IAsyncResult OnBeginSendAuxiliaryCommand(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string AuxiliaryCommand = ((string)(inValues[0]));
            return this.BeginSendAuxiliaryCommand(AuxiliaryCommand, callback, asyncState);
        }
        
        private object[] OnEndSendAuxiliaryCommand(System.IAsyncResult result) {
            string retVal = this.EndSendAuxiliaryCommand(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendAuxiliaryCommandCompleted(object state) {
            if ((this.SendAuxiliaryCommandCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendAuxiliaryCommandCompleted(this, new SendAuxiliaryCommandCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendAuxiliaryCommandAsync(string AuxiliaryCommand) {
            this.SendAuxiliaryCommandAsync(AuxiliaryCommand, null);
        }
        
        public void SendAuxiliaryCommandAsync(string AuxiliaryCommand, object userState) {
            if ((this.onBeginSendAuxiliaryCommandDelegate == null)) {
                this.onBeginSendAuxiliaryCommandDelegate = new BeginOperationDelegate(this.OnBeginSendAuxiliaryCommand);
            }
            if ((this.onEndSendAuxiliaryCommandDelegate == null)) {
                this.onEndSendAuxiliaryCommandDelegate = new EndOperationDelegate(this.OnEndSendAuxiliaryCommand);
            }
            if ((this.onSendAuxiliaryCommandCompletedDelegate == null)) {
                this.onSendAuxiliaryCommandCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendAuxiliaryCommandCompleted);
            }
            base.InvokeAsync(this.onBeginSendAuxiliaryCommandDelegate, new object[] {
                        AuxiliaryCommand}, this.onEndSendAuxiliaryCommandDelegate, this.onSendAuxiliaryCommandCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetDot11CapabilitiesResponse OnvifBasic.device.Device.GetDot11Capabilities(OnvifBasic.device.GetDot11CapabilitiesRequest request) {
            return base.Channel.GetDot11Capabilities(request);
        }
        
        public OnvifBasic.device.Dot11Capabilities GetDot11Capabilities(System.Xml.XmlElement[] Any) {
            OnvifBasic.device.GetDot11CapabilitiesRequest inValue = new OnvifBasic.device.GetDot11CapabilitiesRequest();
            inValue.Any = Any;
            OnvifBasic.device.GetDot11CapabilitiesResponse retVal = ((OnvifBasic.device.Device)(this)).GetDot11Capabilities(inValue);
            return retVal.Capabilities;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetDot11Capabilities(OnvifBasic.device.GetDot11CapabilitiesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDot11Capabilities(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDot11Capabilities(System.Xml.XmlElement[] Any, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetDot11CapabilitiesRequest inValue = new OnvifBasic.device.GetDot11CapabilitiesRequest();
            inValue.Any = Any;
            return ((OnvifBasic.device.Device)(this)).BeginGetDot11Capabilities(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetDot11CapabilitiesResponse OnvifBasic.device.Device.EndGetDot11Capabilities(System.IAsyncResult result) {
            return base.Channel.EndGetDot11Capabilities(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Dot11Capabilities EndGetDot11Capabilities(System.IAsyncResult result) {
            OnvifBasic.device.GetDot11CapabilitiesResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetDot11Capabilities(result);
            return retVal.Capabilities;
        }
        
        private System.IAsyncResult OnBeginGetDot11Capabilities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Xml.XmlElement[] Any = ((System.Xml.XmlElement[])(inValues[0]));
            return this.BeginGetDot11Capabilities(Any, callback, asyncState);
        }
        
        private object[] OnEndGetDot11Capabilities(System.IAsyncResult result) {
            OnvifBasic.device.Dot11Capabilities retVal = this.EndGetDot11Capabilities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDot11CapabilitiesCompleted(object state) {
            if ((this.GetDot11CapabilitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDot11CapabilitiesCompleted(this, new GetDot11CapabilitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDot11CapabilitiesAsync(System.Xml.XmlElement[] Any) {
            this.GetDot11CapabilitiesAsync(Any, null);
        }
        
        public void GetDot11CapabilitiesAsync(System.Xml.XmlElement[] Any, object userState) {
            if ((this.onBeginGetDot11CapabilitiesDelegate == null)) {
                this.onBeginGetDot11CapabilitiesDelegate = new BeginOperationDelegate(this.OnBeginGetDot11Capabilities);
            }
            if ((this.onEndGetDot11CapabilitiesDelegate == null)) {
                this.onEndGetDot11CapabilitiesDelegate = new EndOperationDelegate(this.OnEndGetDot11Capabilities);
            }
            if ((this.onGetDot11CapabilitiesCompletedDelegate == null)) {
                this.onGetDot11CapabilitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDot11CapabilitiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDot11CapabilitiesDelegate, new object[] {
                        Any}, this.onEndGetDot11CapabilitiesDelegate, this.onGetDot11CapabilitiesCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.Dot11Status GetDot11Status(string InterfaceToken) {
            return base.Channel.GetDot11Status(InterfaceToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDot11Status(string InterfaceToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDot11Status(InterfaceToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Dot11Status EndGetDot11Status(System.IAsyncResult result) {
            return base.Channel.EndGetDot11Status(result);
        }
        
        private System.IAsyncResult OnBeginGetDot11Status(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string InterfaceToken = ((string)(inValues[0]));
            return this.BeginGetDot11Status(InterfaceToken, callback, asyncState);
        }
        
        private object[] OnEndGetDot11Status(System.IAsyncResult result) {
            OnvifBasic.device.Dot11Status retVal = this.EndGetDot11Status(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDot11StatusCompleted(object state) {
            if ((this.GetDot11StatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDot11StatusCompleted(this, new GetDot11StatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDot11StatusAsync(string InterfaceToken) {
            this.GetDot11StatusAsync(InterfaceToken, null);
        }
        
        public void GetDot11StatusAsync(string InterfaceToken, object userState) {
            if ((this.onBeginGetDot11StatusDelegate == null)) {
                this.onBeginGetDot11StatusDelegate = new BeginOperationDelegate(this.OnBeginGetDot11Status);
            }
            if ((this.onEndGetDot11StatusDelegate == null)) {
                this.onEndGetDot11StatusDelegate = new EndOperationDelegate(this.OnEndGetDot11Status);
            }
            if ((this.onGetDot11StatusCompletedDelegate == null)) {
                this.onGetDot11StatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDot11StatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetDot11StatusDelegate, new object[] {
                        InterfaceToken}, this.onEndGetDot11StatusDelegate, this.onGetDot11StatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.ScanAvailableDot11NetworksResponse OnvifBasic.device.Device.ScanAvailableDot11Networks(OnvifBasic.device.ScanAvailableDot11NetworksRequest request) {
            return base.Channel.ScanAvailableDot11Networks(request);
        }
        
        public OnvifBasic.device.Dot11AvailableNetworks[] ScanAvailableDot11Networks(string InterfaceToken) {
            OnvifBasic.device.ScanAvailableDot11NetworksRequest inValue = new OnvifBasic.device.ScanAvailableDot11NetworksRequest();
            inValue.InterfaceToken = InterfaceToken;
            OnvifBasic.device.ScanAvailableDot11NetworksResponse retVal = ((OnvifBasic.device.Device)(this)).ScanAvailableDot11Networks(inValue);
            return retVal.Networks;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginScanAvailableDot11Networks(OnvifBasic.device.ScanAvailableDot11NetworksRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginScanAvailableDot11Networks(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginScanAvailableDot11Networks(string InterfaceToken, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.ScanAvailableDot11NetworksRequest inValue = new OnvifBasic.device.ScanAvailableDot11NetworksRequest();
            inValue.InterfaceToken = InterfaceToken;
            return ((OnvifBasic.device.Device)(this)).BeginScanAvailableDot11Networks(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.ScanAvailableDot11NetworksResponse OnvifBasic.device.Device.EndScanAvailableDot11Networks(System.IAsyncResult result) {
            return base.Channel.EndScanAvailableDot11Networks(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Dot11AvailableNetworks[] EndScanAvailableDot11Networks(System.IAsyncResult result) {
            OnvifBasic.device.ScanAvailableDot11NetworksResponse retVal = ((OnvifBasic.device.Device)(this)).EndScanAvailableDot11Networks(result);
            return retVal.Networks;
        }
        
        private System.IAsyncResult OnBeginScanAvailableDot11Networks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string InterfaceToken = ((string)(inValues[0]));
            return this.BeginScanAvailableDot11Networks(InterfaceToken, callback, asyncState);
        }
        
        private object[] OnEndScanAvailableDot11Networks(System.IAsyncResult result) {
            OnvifBasic.device.Dot11AvailableNetworks[] retVal = this.EndScanAvailableDot11Networks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnScanAvailableDot11NetworksCompleted(object state) {
            if ((this.ScanAvailableDot11NetworksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ScanAvailableDot11NetworksCompleted(this, new ScanAvailableDot11NetworksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ScanAvailableDot11NetworksAsync(string InterfaceToken) {
            this.ScanAvailableDot11NetworksAsync(InterfaceToken, null);
        }
        
        public void ScanAvailableDot11NetworksAsync(string InterfaceToken, object userState) {
            if ((this.onBeginScanAvailableDot11NetworksDelegate == null)) {
                this.onBeginScanAvailableDot11NetworksDelegate = new BeginOperationDelegate(this.OnBeginScanAvailableDot11Networks);
            }
            if ((this.onEndScanAvailableDot11NetworksDelegate == null)) {
                this.onEndScanAvailableDot11NetworksDelegate = new EndOperationDelegate(this.OnEndScanAvailableDot11Networks);
            }
            if ((this.onScanAvailableDot11NetworksCompletedDelegate == null)) {
                this.onScanAvailableDot11NetworksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnScanAvailableDot11NetworksCompleted);
            }
            base.InvokeAsync(this.onBeginScanAvailableDot11NetworksDelegate, new object[] {
                        InterfaceToken}, this.onEndScanAvailableDot11NetworksDelegate, this.onScanAvailableDot11NetworksCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetSystemUrisResponse OnvifBasic.device.Device.GetSystemUris(OnvifBasic.device.GetSystemUrisRequest request) {
            return base.Channel.GetSystemUris(request);
        }
        
        public OnvifBasic.device.SystemLogUri[] GetSystemUris(out string SupportInfoUri, out string SystemBackupUri, out OnvifBasic.device.GetSystemUrisResponseExtension Extension) {
            OnvifBasic.device.GetSystemUrisRequest inValue = new OnvifBasic.device.GetSystemUrisRequest();
            OnvifBasic.device.GetSystemUrisResponse retVal = ((OnvifBasic.device.Device)(this)).GetSystemUris(inValue);
            SupportInfoUri = retVal.SupportInfoUri;
            SystemBackupUri = retVal.SystemBackupUri;
            Extension = retVal.Extension;
            return retVal.SystemLogUris;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetSystemUris(OnvifBasic.device.GetSystemUrisRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemUris(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemUris(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetSystemUrisRequest inValue = new OnvifBasic.device.GetSystemUrisRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetSystemUris(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetSystemUrisResponse OnvifBasic.device.Device.EndGetSystemUris(System.IAsyncResult result) {
            return base.Channel.EndGetSystemUris(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.SystemLogUri[] EndGetSystemUris(System.IAsyncResult result, out string SupportInfoUri, out string SystemBackupUri, out OnvifBasic.device.GetSystemUrisResponseExtension Extension) {
            OnvifBasic.device.GetSystemUrisResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetSystemUris(result);
            SupportInfoUri = retVal.SupportInfoUri;
            SystemBackupUri = retVal.SystemBackupUri;
            Extension = retVal.Extension;
            return retVal.SystemLogUris;
        }
        
        private System.IAsyncResult OnBeginGetSystemUris(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSystemUris(callback, asyncState);
        }
        
        private object[] OnEndGetSystemUris(System.IAsyncResult result) {
            string SupportInfoUri = this.GetDefaultValueForInitialization<string>();
            string SystemBackupUri = this.GetDefaultValueForInitialization<string>();
            OnvifBasic.device.GetSystemUrisResponseExtension Extension = this.GetDefaultValueForInitialization<OnvifBasic.device.GetSystemUrisResponseExtension>();
            OnvifBasic.device.SystemLogUri[] retVal = this.EndGetSystemUris(result, out SupportInfoUri, out SystemBackupUri, out Extension);
            return new object[] {
                    SupportInfoUri,
                    SystemBackupUri,
                    Extension,
                    retVal};
        }
        
        private void OnGetSystemUrisCompleted(object state) {
            if ((this.GetSystemUrisCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemUrisCompleted(this, new GetSystemUrisCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemUrisAsync() {
            this.GetSystemUrisAsync(null);
        }
        
        public void GetSystemUrisAsync(object userState) {
            if ((this.onBeginGetSystemUrisDelegate == null)) {
                this.onBeginGetSystemUrisDelegate = new BeginOperationDelegate(this.OnBeginGetSystemUris);
            }
            if ((this.onEndGetSystemUrisDelegate == null)) {
                this.onEndGetSystemUrisDelegate = new EndOperationDelegate(this.OnEndGetSystemUris);
            }
            if ((this.onGetSystemUrisCompletedDelegate == null)) {
                this.onGetSystemUrisCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemUrisCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemUrisDelegate, null, this.onEndGetSystemUrisDelegate, this.onGetSystemUrisCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.StartFirmwareUpgradeResponse OnvifBasic.device.Device.StartFirmwareUpgrade(OnvifBasic.device.StartFirmwareUpgradeRequest request) {
            return base.Channel.StartFirmwareUpgrade(request);
        }
        
        public string StartFirmwareUpgrade(out string UploadDelay, out string ExpectedDownTime) {
            OnvifBasic.device.StartFirmwareUpgradeRequest inValue = new OnvifBasic.device.StartFirmwareUpgradeRequest();
            OnvifBasic.device.StartFirmwareUpgradeResponse retVal = ((OnvifBasic.device.Device)(this)).StartFirmwareUpgrade(inValue);
            UploadDelay = retVal.UploadDelay;
            ExpectedDownTime = retVal.ExpectedDownTime;
            return retVal.UploadUri;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginStartFirmwareUpgrade(OnvifBasic.device.StartFirmwareUpgradeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartFirmwareUpgrade(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartFirmwareUpgrade(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.StartFirmwareUpgradeRequest inValue = new OnvifBasic.device.StartFirmwareUpgradeRequest();
            return ((OnvifBasic.device.Device)(this)).BeginStartFirmwareUpgrade(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.StartFirmwareUpgradeResponse OnvifBasic.device.Device.EndStartFirmwareUpgrade(System.IAsyncResult result) {
            return base.Channel.EndStartFirmwareUpgrade(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndStartFirmwareUpgrade(System.IAsyncResult result, out string UploadDelay, out string ExpectedDownTime) {
            OnvifBasic.device.StartFirmwareUpgradeResponse retVal = ((OnvifBasic.device.Device)(this)).EndStartFirmwareUpgrade(result);
            UploadDelay = retVal.UploadDelay;
            ExpectedDownTime = retVal.ExpectedDownTime;
            return retVal.UploadUri;
        }
        
        private System.IAsyncResult OnBeginStartFirmwareUpgrade(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginStartFirmwareUpgrade(callback, asyncState);
        }
        
        private object[] OnEndStartFirmwareUpgrade(System.IAsyncResult result) {
            string UploadDelay = this.GetDefaultValueForInitialization<string>();
            string ExpectedDownTime = this.GetDefaultValueForInitialization<string>();
            string retVal = this.EndStartFirmwareUpgrade(result, out UploadDelay, out ExpectedDownTime);
            return new object[] {
                    UploadDelay,
                    ExpectedDownTime,
                    retVal};
        }
        
        private void OnStartFirmwareUpgradeCompleted(object state) {
            if ((this.StartFirmwareUpgradeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartFirmwareUpgradeCompleted(this, new StartFirmwareUpgradeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartFirmwareUpgradeAsync() {
            this.StartFirmwareUpgradeAsync(null);
        }
        
        public void StartFirmwareUpgradeAsync(object userState) {
            if ((this.onBeginStartFirmwareUpgradeDelegate == null)) {
                this.onBeginStartFirmwareUpgradeDelegate = new BeginOperationDelegate(this.OnBeginStartFirmwareUpgrade);
            }
            if ((this.onEndStartFirmwareUpgradeDelegate == null)) {
                this.onEndStartFirmwareUpgradeDelegate = new EndOperationDelegate(this.OnEndStartFirmwareUpgrade);
            }
            if ((this.onStartFirmwareUpgradeCompletedDelegate == null)) {
                this.onStartFirmwareUpgradeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartFirmwareUpgradeCompleted);
            }
            base.InvokeAsync(this.onBeginStartFirmwareUpgradeDelegate, null, this.onEndStartFirmwareUpgradeDelegate, this.onStartFirmwareUpgradeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.StartSystemRestoreResponse OnvifBasic.device.Device.StartSystemRestore(OnvifBasic.device.StartSystemRestoreRequest request) {
            return base.Channel.StartSystemRestore(request);
        }
        
        public string StartSystemRestore(out string ExpectedDownTime) {
            OnvifBasic.device.StartSystemRestoreRequest inValue = new OnvifBasic.device.StartSystemRestoreRequest();
            OnvifBasic.device.StartSystemRestoreResponse retVal = ((OnvifBasic.device.Device)(this)).StartSystemRestore(inValue);
            ExpectedDownTime = retVal.ExpectedDownTime;
            return retVal.UploadUri;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginStartSystemRestore(OnvifBasic.device.StartSystemRestoreRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartSystemRestore(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartSystemRestore(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.StartSystemRestoreRequest inValue = new OnvifBasic.device.StartSystemRestoreRequest();
            return ((OnvifBasic.device.Device)(this)).BeginStartSystemRestore(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.StartSystemRestoreResponse OnvifBasic.device.Device.EndStartSystemRestore(System.IAsyncResult result) {
            return base.Channel.EndStartSystemRestore(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndStartSystemRestore(System.IAsyncResult result, out string ExpectedDownTime) {
            OnvifBasic.device.StartSystemRestoreResponse retVal = ((OnvifBasic.device.Device)(this)).EndStartSystemRestore(result);
            ExpectedDownTime = retVal.ExpectedDownTime;
            return retVal.UploadUri;
        }
        
        private System.IAsyncResult OnBeginStartSystemRestore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginStartSystemRestore(callback, asyncState);
        }
        
        private object[] OnEndStartSystemRestore(System.IAsyncResult result) {
            string ExpectedDownTime = this.GetDefaultValueForInitialization<string>();
            string retVal = this.EndStartSystemRestore(result, out ExpectedDownTime);
            return new object[] {
                    ExpectedDownTime,
                    retVal};
        }
        
        private void OnStartSystemRestoreCompleted(object state) {
            if ((this.StartSystemRestoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartSystemRestoreCompleted(this, new StartSystemRestoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartSystemRestoreAsync() {
            this.StartSystemRestoreAsync(null);
        }
        
        public void StartSystemRestoreAsync(object userState) {
            if ((this.onBeginStartSystemRestoreDelegate == null)) {
                this.onBeginStartSystemRestoreDelegate = new BeginOperationDelegate(this.OnBeginStartSystemRestore);
            }
            if ((this.onEndStartSystemRestoreDelegate == null)) {
                this.onEndStartSystemRestoreDelegate = new EndOperationDelegate(this.OnEndStartSystemRestore);
            }
            if ((this.onStartSystemRestoreCompletedDelegate == null)) {
                this.onStartSystemRestoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartSystemRestoreCompleted);
            }
            base.InvokeAsync(this.onBeginStartSystemRestoreDelegate, null, this.onEndStartSystemRestoreDelegate, this.onStartSystemRestoreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetStorageConfigurationsResponse OnvifBasic.device.Device.GetStorageConfigurations(OnvifBasic.device.GetStorageConfigurationsRequest request) {
            return base.Channel.GetStorageConfigurations(request);
        }
        
        public OnvifBasic.device.StorageConfiguration[] GetStorageConfigurations() {
            OnvifBasic.device.GetStorageConfigurationsRequest inValue = new OnvifBasic.device.GetStorageConfigurationsRequest();
            OnvifBasic.device.GetStorageConfigurationsResponse retVal = ((OnvifBasic.device.Device)(this)).GetStorageConfigurations(inValue);
            return retVal.StorageConfigurations;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetStorageConfigurations(OnvifBasic.device.GetStorageConfigurationsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStorageConfigurations(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStorageConfigurations(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetStorageConfigurationsRequest inValue = new OnvifBasic.device.GetStorageConfigurationsRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetStorageConfigurations(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetStorageConfigurationsResponse OnvifBasic.device.Device.EndGetStorageConfigurations(System.IAsyncResult result) {
            return base.Channel.EndGetStorageConfigurations(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.StorageConfiguration[] EndGetStorageConfigurations(System.IAsyncResult result) {
            OnvifBasic.device.GetStorageConfigurationsResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetStorageConfigurations(result);
            return retVal.StorageConfigurations;
        }
        
        private System.IAsyncResult OnBeginGetStorageConfigurations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetStorageConfigurations(callback, asyncState);
        }
        
        private object[] OnEndGetStorageConfigurations(System.IAsyncResult result) {
            OnvifBasic.device.StorageConfiguration[] retVal = this.EndGetStorageConfigurations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStorageConfigurationsCompleted(object state) {
            if ((this.GetStorageConfigurationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStorageConfigurationsCompleted(this, new GetStorageConfigurationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStorageConfigurationsAsync() {
            this.GetStorageConfigurationsAsync(null);
        }
        
        public void GetStorageConfigurationsAsync(object userState) {
            if ((this.onBeginGetStorageConfigurationsDelegate == null)) {
                this.onBeginGetStorageConfigurationsDelegate = new BeginOperationDelegate(this.OnBeginGetStorageConfigurations);
            }
            if ((this.onEndGetStorageConfigurationsDelegate == null)) {
                this.onEndGetStorageConfigurationsDelegate = new EndOperationDelegate(this.OnEndGetStorageConfigurations);
            }
            if ((this.onGetStorageConfigurationsCompletedDelegate == null)) {
                this.onGetStorageConfigurationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStorageConfigurationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStorageConfigurationsDelegate, null, this.onEndGetStorageConfigurationsDelegate, this.onGetStorageConfigurationsCompletedDelegate, userState);
        }
        
        public string CreateStorageConfiguration(OnvifBasic.device.StorageConfigurationData StorageConfiguration) {
            return base.Channel.CreateStorageConfiguration(StorageConfiguration);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateStorageConfiguration(OnvifBasic.device.StorageConfigurationData StorageConfiguration, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateStorageConfiguration(StorageConfiguration, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateStorageConfiguration(System.IAsyncResult result) {
            return base.Channel.EndCreateStorageConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginCreateStorageConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.StorageConfigurationData StorageConfiguration = ((OnvifBasic.device.StorageConfigurationData)(inValues[0]));
            return this.BeginCreateStorageConfiguration(StorageConfiguration, callback, asyncState);
        }
        
        private object[] OnEndCreateStorageConfiguration(System.IAsyncResult result) {
            string retVal = this.EndCreateStorageConfiguration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateStorageConfigurationCompleted(object state) {
            if ((this.CreateStorageConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateStorageConfigurationCompleted(this, new CreateStorageConfigurationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateStorageConfigurationAsync(OnvifBasic.device.StorageConfigurationData StorageConfiguration) {
            this.CreateStorageConfigurationAsync(StorageConfiguration, null);
        }
        
        public void CreateStorageConfigurationAsync(OnvifBasic.device.StorageConfigurationData StorageConfiguration, object userState) {
            if ((this.onBeginCreateStorageConfigurationDelegate == null)) {
                this.onBeginCreateStorageConfigurationDelegate = new BeginOperationDelegate(this.OnBeginCreateStorageConfiguration);
            }
            if ((this.onEndCreateStorageConfigurationDelegate == null)) {
                this.onEndCreateStorageConfigurationDelegate = new EndOperationDelegate(this.OnEndCreateStorageConfiguration);
            }
            if ((this.onCreateStorageConfigurationCompletedDelegate == null)) {
                this.onCreateStorageConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateStorageConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginCreateStorageConfigurationDelegate, new object[] {
                        StorageConfiguration}, this.onEndCreateStorageConfigurationDelegate, this.onCreateStorageConfigurationCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.StorageConfiguration GetStorageConfiguration(string Token) {
            return base.Channel.GetStorageConfiguration(Token);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStorageConfiguration(string Token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStorageConfiguration(Token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.StorageConfiguration EndGetStorageConfiguration(System.IAsyncResult result) {
            return base.Channel.EndGetStorageConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginGetStorageConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Token = ((string)(inValues[0]));
            return this.BeginGetStorageConfiguration(Token, callback, asyncState);
        }
        
        private object[] OnEndGetStorageConfiguration(System.IAsyncResult result) {
            OnvifBasic.device.StorageConfiguration retVal = this.EndGetStorageConfiguration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStorageConfigurationCompleted(object state) {
            if ((this.GetStorageConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStorageConfigurationCompleted(this, new GetStorageConfigurationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStorageConfigurationAsync(string Token) {
            this.GetStorageConfigurationAsync(Token, null);
        }
        
        public void GetStorageConfigurationAsync(string Token, object userState) {
            if ((this.onBeginGetStorageConfigurationDelegate == null)) {
                this.onBeginGetStorageConfigurationDelegate = new BeginOperationDelegate(this.OnBeginGetStorageConfiguration);
            }
            if ((this.onEndGetStorageConfigurationDelegate == null)) {
                this.onEndGetStorageConfigurationDelegate = new EndOperationDelegate(this.OnEndGetStorageConfiguration);
            }
            if ((this.onGetStorageConfigurationCompletedDelegate == null)) {
                this.onGetStorageConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStorageConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginGetStorageConfigurationDelegate, new object[] {
                        Token}, this.onEndGetStorageConfigurationDelegate, this.onGetStorageConfigurationCompletedDelegate, userState);
        }
        
        public void SetStorageConfiguration(OnvifBasic.device.StorageConfiguration StorageConfiguration) {
            base.Channel.SetStorageConfiguration(StorageConfiguration);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetStorageConfiguration(OnvifBasic.device.StorageConfiguration StorageConfiguration, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetStorageConfiguration(StorageConfiguration, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetStorageConfiguration(System.IAsyncResult result) {
            base.Channel.EndSetStorageConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginSetStorageConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.StorageConfiguration StorageConfiguration = ((OnvifBasic.device.StorageConfiguration)(inValues[0]));
            return this.BeginSetStorageConfiguration(StorageConfiguration, callback, asyncState);
        }
        
        private object[] OnEndSetStorageConfiguration(System.IAsyncResult result) {
            this.EndSetStorageConfiguration(result);
            return null;
        }
        
        private void OnSetStorageConfigurationCompleted(object state) {
            if ((this.SetStorageConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetStorageConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetStorageConfigurationAsync(OnvifBasic.device.StorageConfiguration StorageConfiguration) {
            this.SetStorageConfigurationAsync(StorageConfiguration, null);
        }
        
        public void SetStorageConfigurationAsync(OnvifBasic.device.StorageConfiguration StorageConfiguration, object userState) {
            if ((this.onBeginSetStorageConfigurationDelegate == null)) {
                this.onBeginSetStorageConfigurationDelegate = new BeginOperationDelegate(this.OnBeginSetStorageConfiguration);
            }
            if ((this.onEndSetStorageConfigurationDelegate == null)) {
                this.onEndSetStorageConfigurationDelegate = new EndOperationDelegate(this.OnEndSetStorageConfiguration);
            }
            if ((this.onSetStorageConfigurationCompletedDelegate == null)) {
                this.onSetStorageConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetStorageConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginSetStorageConfigurationDelegate, new object[] {
                        StorageConfiguration}, this.onEndSetStorageConfigurationDelegate, this.onSetStorageConfigurationCompletedDelegate, userState);
        }
        
        public void DeleteStorageConfiguration(string Token) {
            base.Channel.DeleteStorageConfiguration(Token);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteStorageConfiguration(string Token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteStorageConfiguration(Token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteStorageConfiguration(System.IAsyncResult result) {
            base.Channel.EndDeleteStorageConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginDeleteStorageConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Token = ((string)(inValues[0]));
            return this.BeginDeleteStorageConfiguration(Token, callback, asyncState);
        }
        
        private object[] OnEndDeleteStorageConfiguration(System.IAsyncResult result) {
            this.EndDeleteStorageConfiguration(result);
            return null;
        }
        
        private void OnDeleteStorageConfigurationCompleted(object state) {
            if ((this.DeleteStorageConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteStorageConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteStorageConfigurationAsync(string Token) {
            this.DeleteStorageConfigurationAsync(Token, null);
        }
        
        public void DeleteStorageConfigurationAsync(string Token, object userState) {
            if ((this.onBeginDeleteStorageConfigurationDelegate == null)) {
                this.onBeginDeleteStorageConfigurationDelegate = new BeginOperationDelegate(this.OnBeginDeleteStorageConfiguration);
            }
            if ((this.onEndDeleteStorageConfigurationDelegate == null)) {
                this.onEndDeleteStorageConfigurationDelegate = new EndOperationDelegate(this.OnEndDeleteStorageConfiguration);
            }
            if ((this.onDeleteStorageConfigurationCompletedDelegate == null)) {
                this.onDeleteStorageConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteStorageConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteStorageConfigurationDelegate, new object[] {
                        Token}, this.onEndDeleteStorageConfigurationDelegate, this.onDeleteStorageConfigurationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetGeoLocationResponse OnvifBasic.device.Device.GetGeoLocation(OnvifBasic.device.GetGeoLocationRequest request) {
            return base.Channel.GetGeoLocation(request);
        }
        
        public OnvifBasic.device.LocationEntity[] GetGeoLocation() {
            OnvifBasic.device.GetGeoLocationRequest inValue = new OnvifBasic.device.GetGeoLocationRequest();
            OnvifBasic.device.GetGeoLocationResponse retVal = ((OnvifBasic.device.Device)(this)).GetGeoLocation(inValue);
            return retVal.Location;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetGeoLocation(OnvifBasic.device.GetGeoLocationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGeoLocation(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGeoLocation(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetGeoLocationRequest inValue = new OnvifBasic.device.GetGeoLocationRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetGeoLocation(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetGeoLocationResponse OnvifBasic.device.Device.EndGetGeoLocation(System.IAsyncResult result) {
            return base.Channel.EndGetGeoLocation(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.LocationEntity[] EndGetGeoLocation(System.IAsyncResult result) {
            OnvifBasic.device.GetGeoLocationResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetGeoLocation(result);
            return retVal.Location;
        }
        
        private System.IAsyncResult OnBeginGetGeoLocation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetGeoLocation(callback, asyncState);
        }
        
        private object[] OnEndGetGeoLocation(System.IAsyncResult result) {
            OnvifBasic.device.LocationEntity[] retVal = this.EndGetGeoLocation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGeoLocationCompleted(object state) {
            if ((this.GetGeoLocationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGeoLocationCompleted(this, new GetGeoLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGeoLocationAsync() {
            this.GetGeoLocationAsync(null);
        }
        
        public void GetGeoLocationAsync(object userState) {
            if ((this.onBeginGetGeoLocationDelegate == null)) {
                this.onBeginGetGeoLocationDelegate = new BeginOperationDelegate(this.OnBeginGetGeoLocation);
            }
            if ((this.onEndGetGeoLocationDelegate == null)) {
                this.onEndGetGeoLocationDelegate = new EndOperationDelegate(this.OnEndGetGeoLocation);
            }
            if ((this.onGetGeoLocationCompletedDelegate == null)) {
                this.onGetGeoLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGeoLocationCompleted);
            }
            base.InvokeAsync(this.onBeginGetGeoLocationDelegate, null, this.onEndGetGeoLocationDelegate, this.onGetGeoLocationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetGeoLocationResponse OnvifBasic.device.Device.SetGeoLocation(OnvifBasic.device.SetGeoLocationRequest request) {
            return base.Channel.SetGeoLocation(request);
        }
        
        public void SetGeoLocation(OnvifBasic.device.LocationEntity[] Location) {
            OnvifBasic.device.SetGeoLocationRequest inValue = new OnvifBasic.device.SetGeoLocationRequest();
            inValue.Location = Location;
            OnvifBasic.device.SetGeoLocationResponse retVal = ((OnvifBasic.device.Device)(this)).SetGeoLocation(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetGeoLocation(OnvifBasic.device.SetGeoLocationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetGeoLocation(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetGeoLocation(OnvifBasic.device.LocationEntity[] Location, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetGeoLocationRequest inValue = new OnvifBasic.device.SetGeoLocationRequest();
            inValue.Location = Location;
            return ((OnvifBasic.device.Device)(this)).BeginSetGeoLocation(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetGeoLocationResponse OnvifBasic.device.Device.EndSetGeoLocation(System.IAsyncResult result) {
            return base.Channel.EndSetGeoLocation(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetGeoLocation(System.IAsyncResult result) {
            OnvifBasic.device.SetGeoLocationResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetGeoLocation(result);
        }
        
        private System.IAsyncResult OnBeginSetGeoLocation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.LocationEntity[] Location = ((OnvifBasic.device.LocationEntity[])(inValues[0]));
            return this.BeginSetGeoLocation(Location, callback, asyncState);
        }
        
        private object[] OnEndSetGeoLocation(System.IAsyncResult result) {
            this.EndSetGeoLocation(result);
            return null;
        }
        
        private void OnSetGeoLocationCompleted(object state) {
            if ((this.SetGeoLocationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetGeoLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetGeoLocationAsync(OnvifBasic.device.LocationEntity[] Location) {
            this.SetGeoLocationAsync(Location, null);
        }
        
        public void SetGeoLocationAsync(OnvifBasic.device.LocationEntity[] Location, object userState) {
            if ((this.onBeginSetGeoLocationDelegate == null)) {
                this.onBeginSetGeoLocationDelegate = new BeginOperationDelegate(this.OnBeginSetGeoLocation);
            }
            if ((this.onEndSetGeoLocationDelegate == null)) {
                this.onEndSetGeoLocationDelegate = new EndOperationDelegate(this.OnEndSetGeoLocation);
            }
            if ((this.onSetGeoLocationCompletedDelegate == null)) {
                this.onSetGeoLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetGeoLocationCompleted);
            }
            base.InvokeAsync(this.onBeginSetGeoLocationDelegate, new object[] {
                        Location}, this.onEndSetGeoLocationDelegate, this.onSetGeoLocationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.DeleteGeoLocationResponse OnvifBasic.device.Device.DeleteGeoLocation(OnvifBasic.device.DeleteGeoLocationRequest request) {
            return base.Channel.DeleteGeoLocation(request);
        }
        
        public void DeleteGeoLocation(OnvifBasic.device.LocationEntity[] Location) {
            OnvifBasic.device.DeleteGeoLocationRequest inValue = new OnvifBasic.device.DeleteGeoLocationRequest();
            inValue.Location = Location;
            OnvifBasic.device.DeleteGeoLocationResponse retVal = ((OnvifBasic.device.Device)(this)).DeleteGeoLocation(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginDeleteGeoLocation(OnvifBasic.device.DeleteGeoLocationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteGeoLocation(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteGeoLocation(OnvifBasic.device.LocationEntity[] Location, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.DeleteGeoLocationRequest inValue = new OnvifBasic.device.DeleteGeoLocationRequest();
            inValue.Location = Location;
            return ((OnvifBasic.device.Device)(this)).BeginDeleteGeoLocation(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.DeleteGeoLocationResponse OnvifBasic.device.Device.EndDeleteGeoLocation(System.IAsyncResult result) {
            return base.Channel.EndDeleteGeoLocation(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteGeoLocation(System.IAsyncResult result) {
            OnvifBasic.device.DeleteGeoLocationResponse retVal = ((OnvifBasic.device.Device)(this)).EndDeleteGeoLocation(result);
        }
        
        private System.IAsyncResult OnBeginDeleteGeoLocation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.LocationEntity[] Location = ((OnvifBasic.device.LocationEntity[])(inValues[0]));
            return this.BeginDeleteGeoLocation(Location, callback, asyncState);
        }
        
        private object[] OnEndDeleteGeoLocation(System.IAsyncResult result) {
            this.EndDeleteGeoLocation(result);
            return null;
        }
        
        private void OnDeleteGeoLocationCompleted(object state) {
            if ((this.DeleteGeoLocationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteGeoLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteGeoLocationAsync(OnvifBasic.device.LocationEntity[] Location) {
            this.DeleteGeoLocationAsync(Location, null);
        }
        
        public void DeleteGeoLocationAsync(OnvifBasic.device.LocationEntity[] Location, object userState) {
            if ((this.onBeginDeleteGeoLocationDelegate == null)) {
                this.onBeginDeleteGeoLocationDelegate = new BeginOperationDelegate(this.OnBeginDeleteGeoLocation);
            }
            if ((this.onEndDeleteGeoLocationDelegate == null)) {
                this.onEndDeleteGeoLocationDelegate = new EndOperationDelegate(this.OnEndDeleteGeoLocation);
            }
            if ((this.onDeleteGeoLocationCompletedDelegate == null)) {
                this.onDeleteGeoLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteGeoLocationCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteGeoLocationDelegate, new object[] {
                        Location}, this.onEndDeleteGeoLocationDelegate, this.onDeleteGeoLocationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.CreateCertificateResponse OnvifBasic.device.Device.CreateCertificate(OnvifBasic.device.CreateCertificateRequest request) {
            return base.Channel.CreateCertificate(request);
        }
        
        public OnvifBasic.device.Certificate CreateCertificate(string CertificateID, string Subject, System.DateTime ValidNotBefore, System.DateTime ValidNotAfter) {
            OnvifBasic.device.CreateCertificateRequest inValue = new OnvifBasic.device.CreateCertificateRequest();
            inValue.CertificateID = CertificateID;
            inValue.Subject = Subject;
            inValue.ValidNotBefore = ValidNotBefore;
            inValue.ValidNotAfter = ValidNotAfter;
            OnvifBasic.device.CreateCertificateResponse retVal = ((OnvifBasic.device.Device)(this)).CreateCertificate(inValue);
            return retVal.NvtCertificate;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginCreateCertificate(OnvifBasic.device.CreateCertificateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateCertificate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateCertificate(string CertificateID, string Subject, System.DateTime ValidNotBefore, System.DateTime ValidNotAfter, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.CreateCertificateRequest inValue = new OnvifBasic.device.CreateCertificateRequest();
            inValue.CertificateID = CertificateID;
            inValue.Subject = Subject;
            inValue.ValidNotBefore = ValidNotBefore;
            inValue.ValidNotAfter = ValidNotAfter;
            return ((OnvifBasic.device.Device)(this)).BeginCreateCertificate(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.CreateCertificateResponse OnvifBasic.device.Device.EndCreateCertificate(System.IAsyncResult result) {
            return base.Channel.EndCreateCertificate(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Certificate EndCreateCertificate(System.IAsyncResult result) {
            OnvifBasic.device.CreateCertificateResponse retVal = ((OnvifBasic.device.Device)(this)).EndCreateCertificate(result);
            return retVal.NvtCertificate;
        }
        
        private System.IAsyncResult OnBeginCreateCertificate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CertificateID = ((string)(inValues[0]));
            string Subject = ((string)(inValues[1]));
            System.DateTime ValidNotBefore = ((System.DateTime)(inValues[2]));
            System.DateTime ValidNotAfter = ((System.DateTime)(inValues[3]));
            return this.BeginCreateCertificate(CertificateID, Subject, ValidNotBefore, ValidNotAfter, callback, asyncState);
        }
        
        private object[] OnEndCreateCertificate(System.IAsyncResult result) {
            OnvifBasic.device.Certificate retVal = this.EndCreateCertificate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCertificateCompleted(object state) {
            if ((this.CreateCertificateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCertificateCompleted(this, new CreateCertificateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateCertificateAsync(string CertificateID, string Subject, System.DateTime ValidNotBefore, System.DateTime ValidNotAfter) {
            this.CreateCertificateAsync(CertificateID, Subject, ValidNotBefore, ValidNotAfter, null);
        }
        
        public void CreateCertificateAsync(string CertificateID, string Subject, System.DateTime ValidNotBefore, System.DateTime ValidNotAfter, object userState) {
            if ((this.onBeginCreateCertificateDelegate == null)) {
                this.onBeginCreateCertificateDelegate = new BeginOperationDelegate(this.OnBeginCreateCertificate);
            }
            if ((this.onEndCreateCertificateDelegate == null)) {
                this.onEndCreateCertificateDelegate = new EndOperationDelegate(this.OnEndCreateCertificate);
            }
            if ((this.onCreateCertificateCompletedDelegate == null)) {
                this.onCreateCertificateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCertificateCompleted);
            }
            base.InvokeAsync(this.onBeginCreateCertificateDelegate, new object[] {
                        CertificateID,
                        Subject,
                        ValidNotBefore,
                        ValidNotAfter}, this.onEndCreateCertificateDelegate, this.onCreateCertificateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetCertificatesResponse OnvifBasic.device.Device.GetCertificates(OnvifBasic.device.GetCertificatesRequest request) {
            return base.Channel.GetCertificates(request);
        }
        
        public OnvifBasic.device.Certificate[] GetCertificates() {
            OnvifBasic.device.GetCertificatesRequest inValue = new OnvifBasic.device.GetCertificatesRequest();
            OnvifBasic.device.GetCertificatesResponse retVal = ((OnvifBasic.device.Device)(this)).GetCertificates(inValue);
            return retVal.NvtCertificate;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetCertificates(OnvifBasic.device.GetCertificatesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCertificates(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCertificates(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetCertificatesRequest inValue = new OnvifBasic.device.GetCertificatesRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetCertificates(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetCertificatesResponse OnvifBasic.device.Device.EndGetCertificates(System.IAsyncResult result) {
            return base.Channel.EndGetCertificates(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Certificate[] EndGetCertificates(System.IAsyncResult result) {
            OnvifBasic.device.GetCertificatesResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetCertificates(result);
            return retVal.NvtCertificate;
        }
        
        private System.IAsyncResult OnBeginGetCertificates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCertificates(callback, asyncState);
        }
        
        private object[] OnEndGetCertificates(System.IAsyncResult result) {
            OnvifBasic.device.Certificate[] retVal = this.EndGetCertificates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCertificatesCompleted(object state) {
            if ((this.GetCertificatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCertificatesCompleted(this, new GetCertificatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCertificatesAsync() {
            this.GetCertificatesAsync(null);
        }
        
        public void GetCertificatesAsync(object userState) {
            if ((this.onBeginGetCertificatesDelegate == null)) {
                this.onBeginGetCertificatesDelegate = new BeginOperationDelegate(this.OnBeginGetCertificates);
            }
            if ((this.onEndGetCertificatesDelegate == null)) {
                this.onEndGetCertificatesDelegate = new EndOperationDelegate(this.OnEndGetCertificates);
            }
            if ((this.onGetCertificatesCompletedDelegate == null)) {
                this.onGetCertificatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCertificatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCertificatesDelegate, null, this.onEndGetCertificatesDelegate, this.onGetCertificatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetCertificatesStatusResponse OnvifBasic.device.Device.GetCertificatesStatus(OnvifBasic.device.GetCertificatesStatusRequest request) {
            return base.Channel.GetCertificatesStatus(request);
        }
        
        public OnvifBasic.device.CertificateStatus[] GetCertificatesStatus() {
            OnvifBasic.device.GetCertificatesStatusRequest inValue = new OnvifBasic.device.GetCertificatesStatusRequest();
            OnvifBasic.device.GetCertificatesStatusResponse retVal = ((OnvifBasic.device.Device)(this)).GetCertificatesStatus(inValue);
            return retVal.CertificateStatus;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetCertificatesStatus(OnvifBasic.device.GetCertificatesStatusRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCertificatesStatus(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCertificatesStatus(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetCertificatesStatusRequest inValue = new OnvifBasic.device.GetCertificatesStatusRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetCertificatesStatus(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetCertificatesStatusResponse OnvifBasic.device.Device.EndGetCertificatesStatus(System.IAsyncResult result) {
            return base.Channel.EndGetCertificatesStatus(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.CertificateStatus[] EndGetCertificatesStatus(System.IAsyncResult result) {
            OnvifBasic.device.GetCertificatesStatusResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetCertificatesStatus(result);
            return retVal.CertificateStatus;
        }
        
        private System.IAsyncResult OnBeginGetCertificatesStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCertificatesStatus(callback, asyncState);
        }
        
        private object[] OnEndGetCertificatesStatus(System.IAsyncResult result) {
            OnvifBasic.device.CertificateStatus[] retVal = this.EndGetCertificatesStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCertificatesStatusCompleted(object state) {
            if ((this.GetCertificatesStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCertificatesStatusCompleted(this, new GetCertificatesStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCertificatesStatusAsync() {
            this.GetCertificatesStatusAsync(null);
        }
        
        public void GetCertificatesStatusAsync(object userState) {
            if ((this.onBeginGetCertificatesStatusDelegate == null)) {
                this.onBeginGetCertificatesStatusDelegate = new BeginOperationDelegate(this.OnBeginGetCertificatesStatus);
            }
            if ((this.onEndGetCertificatesStatusDelegate == null)) {
                this.onEndGetCertificatesStatusDelegate = new EndOperationDelegate(this.OnEndGetCertificatesStatus);
            }
            if ((this.onGetCertificatesStatusCompletedDelegate == null)) {
                this.onGetCertificatesStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCertificatesStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetCertificatesStatusDelegate, null, this.onEndGetCertificatesStatusDelegate, this.onGetCertificatesStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetCertificatesStatusResponse OnvifBasic.device.Device.SetCertificatesStatus(OnvifBasic.device.SetCertificatesStatusRequest request) {
            return base.Channel.SetCertificatesStatus(request);
        }
        
        public void SetCertificatesStatus(OnvifBasic.device.CertificateStatus[] CertificateStatus) {
            OnvifBasic.device.SetCertificatesStatusRequest inValue = new OnvifBasic.device.SetCertificatesStatusRequest();
            inValue.CertificateStatus = CertificateStatus;
            OnvifBasic.device.SetCertificatesStatusResponse retVal = ((OnvifBasic.device.Device)(this)).SetCertificatesStatus(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginSetCertificatesStatus(OnvifBasic.device.SetCertificatesStatusRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCertificatesStatus(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCertificatesStatus(OnvifBasic.device.CertificateStatus[] CertificateStatus, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.SetCertificatesStatusRequest inValue = new OnvifBasic.device.SetCertificatesStatusRequest();
            inValue.CertificateStatus = CertificateStatus;
            return ((OnvifBasic.device.Device)(this)).BeginSetCertificatesStatus(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.SetCertificatesStatusResponse OnvifBasic.device.Device.EndSetCertificatesStatus(System.IAsyncResult result) {
            return base.Channel.EndSetCertificatesStatus(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetCertificatesStatus(System.IAsyncResult result) {
            OnvifBasic.device.SetCertificatesStatusResponse retVal = ((OnvifBasic.device.Device)(this)).EndSetCertificatesStatus(result);
        }
        
        private System.IAsyncResult OnBeginSetCertificatesStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.CertificateStatus[] CertificateStatus = ((OnvifBasic.device.CertificateStatus[])(inValues[0]));
            return this.BeginSetCertificatesStatus(CertificateStatus, callback, asyncState);
        }
        
        private object[] OnEndSetCertificatesStatus(System.IAsyncResult result) {
            this.EndSetCertificatesStatus(result);
            return null;
        }
        
        private void OnSetCertificatesStatusCompleted(object state) {
            if ((this.SetCertificatesStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCertificatesStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCertificatesStatusAsync(OnvifBasic.device.CertificateStatus[] CertificateStatus) {
            this.SetCertificatesStatusAsync(CertificateStatus, null);
        }
        
        public void SetCertificatesStatusAsync(OnvifBasic.device.CertificateStatus[] CertificateStatus, object userState) {
            if ((this.onBeginSetCertificatesStatusDelegate == null)) {
                this.onBeginSetCertificatesStatusDelegate = new BeginOperationDelegate(this.OnBeginSetCertificatesStatus);
            }
            if ((this.onEndSetCertificatesStatusDelegate == null)) {
                this.onEndSetCertificatesStatusDelegate = new EndOperationDelegate(this.OnEndSetCertificatesStatus);
            }
            if ((this.onSetCertificatesStatusCompletedDelegate == null)) {
                this.onSetCertificatesStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCertificatesStatusCompleted);
            }
            base.InvokeAsync(this.onBeginSetCertificatesStatusDelegate, new object[] {
                        CertificateStatus}, this.onEndSetCertificatesStatusDelegate, this.onSetCertificatesStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.DeleteCertificatesResponse OnvifBasic.device.Device.DeleteCertificates(OnvifBasic.device.DeleteCertificatesRequest request) {
            return base.Channel.DeleteCertificates(request);
        }
        
        public void DeleteCertificates(string[] CertificateID) {
            OnvifBasic.device.DeleteCertificatesRequest inValue = new OnvifBasic.device.DeleteCertificatesRequest();
            inValue.CertificateID = CertificateID;
            OnvifBasic.device.DeleteCertificatesResponse retVal = ((OnvifBasic.device.Device)(this)).DeleteCertificates(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginDeleteCertificates(OnvifBasic.device.DeleteCertificatesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCertificates(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteCertificates(string[] CertificateID, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.DeleteCertificatesRequest inValue = new OnvifBasic.device.DeleteCertificatesRequest();
            inValue.CertificateID = CertificateID;
            return ((OnvifBasic.device.Device)(this)).BeginDeleteCertificates(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.DeleteCertificatesResponse OnvifBasic.device.Device.EndDeleteCertificates(System.IAsyncResult result) {
            return base.Channel.EndDeleteCertificates(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteCertificates(System.IAsyncResult result) {
            OnvifBasic.device.DeleteCertificatesResponse retVal = ((OnvifBasic.device.Device)(this)).EndDeleteCertificates(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCertificates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] CertificateID = ((string[])(inValues[0]));
            return this.BeginDeleteCertificates(CertificateID, callback, asyncState);
        }
        
        private object[] OnEndDeleteCertificates(System.IAsyncResult result) {
            this.EndDeleteCertificates(result);
            return null;
        }
        
        private void OnDeleteCertificatesCompleted(object state) {
            if ((this.DeleteCertificatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCertificatesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCertificatesAsync(string[] CertificateID) {
            this.DeleteCertificatesAsync(CertificateID, null);
        }
        
        public void DeleteCertificatesAsync(string[] CertificateID, object userState) {
            if ((this.onBeginDeleteCertificatesDelegate == null)) {
                this.onBeginDeleteCertificatesDelegate = new BeginOperationDelegate(this.OnBeginDeleteCertificates);
            }
            if ((this.onEndDeleteCertificatesDelegate == null)) {
                this.onEndDeleteCertificatesDelegate = new EndOperationDelegate(this.OnEndDeleteCertificates);
            }
            if ((this.onDeleteCertificatesCompletedDelegate == null)) {
                this.onDeleteCertificatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCertificatesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCertificatesDelegate, new object[] {
                        CertificateID}, this.onEndDeleteCertificatesDelegate, this.onDeleteCertificatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetPkcs10RequestResponse OnvifBasic.device.Device.GetPkcs10Request(OnvifBasic.device.GetPkcs10RequestRequest request) {
            return base.Channel.GetPkcs10Request(request);
        }
        
        public OnvifBasic.device.BinaryData GetPkcs10Request(string CertificateID, string Subject, OnvifBasic.device.BinaryData Attributes) {
            OnvifBasic.device.GetPkcs10RequestRequest inValue = new OnvifBasic.device.GetPkcs10RequestRequest();
            inValue.CertificateID = CertificateID;
            inValue.Subject = Subject;
            inValue.Attributes = Attributes;
            OnvifBasic.device.GetPkcs10RequestResponse retVal = ((OnvifBasic.device.Device)(this)).GetPkcs10Request(inValue);
            return retVal.Pkcs10Request;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetPkcs10Request(OnvifBasic.device.GetPkcs10RequestRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPkcs10Request(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPkcs10Request(string CertificateID, string Subject, OnvifBasic.device.BinaryData Attributes, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetPkcs10RequestRequest inValue = new OnvifBasic.device.GetPkcs10RequestRequest();
            inValue.CertificateID = CertificateID;
            inValue.Subject = Subject;
            inValue.Attributes = Attributes;
            return ((OnvifBasic.device.Device)(this)).BeginGetPkcs10Request(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetPkcs10RequestResponse OnvifBasic.device.Device.EndGetPkcs10Request(System.IAsyncResult result) {
            return base.Channel.EndGetPkcs10Request(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.BinaryData EndGetPkcs10Request(System.IAsyncResult result) {
            OnvifBasic.device.GetPkcs10RequestResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetPkcs10Request(result);
            return retVal.Pkcs10Request;
        }
        
        private System.IAsyncResult OnBeginGetPkcs10Request(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CertificateID = ((string)(inValues[0]));
            string Subject = ((string)(inValues[1]));
            OnvifBasic.device.BinaryData Attributes = ((OnvifBasic.device.BinaryData)(inValues[2]));
            return this.BeginGetPkcs10Request(CertificateID, Subject, Attributes, callback, asyncState);
        }
        
        private object[] OnEndGetPkcs10Request(System.IAsyncResult result) {
            OnvifBasic.device.BinaryData retVal = this.EndGetPkcs10Request(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPkcs10RequestCompleted(object state) {
            if ((this.GetPkcs10RequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPkcs10RequestCompleted(this, new GetPkcs10RequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPkcs10RequestAsync(string CertificateID, string Subject, OnvifBasic.device.BinaryData Attributes) {
            this.GetPkcs10RequestAsync(CertificateID, Subject, Attributes, null);
        }
        
        public void GetPkcs10RequestAsync(string CertificateID, string Subject, OnvifBasic.device.BinaryData Attributes, object userState) {
            if ((this.onBeginGetPkcs10RequestDelegate == null)) {
                this.onBeginGetPkcs10RequestDelegate = new BeginOperationDelegate(this.OnBeginGetPkcs10Request);
            }
            if ((this.onEndGetPkcs10RequestDelegate == null)) {
                this.onEndGetPkcs10RequestDelegate = new EndOperationDelegate(this.OnEndGetPkcs10Request);
            }
            if ((this.onGetPkcs10RequestCompletedDelegate == null)) {
                this.onGetPkcs10RequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPkcs10RequestCompleted);
            }
            base.InvokeAsync(this.onBeginGetPkcs10RequestDelegate, new object[] {
                        CertificateID,
                        Subject,
                        Attributes}, this.onEndGetPkcs10RequestDelegate, this.onGetPkcs10RequestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.LoadCertificatesResponse OnvifBasic.device.Device.LoadCertificates(OnvifBasic.device.LoadCertificatesRequest request) {
            return base.Channel.LoadCertificates(request);
        }
        
        public void LoadCertificates(OnvifBasic.device.Certificate[] NVTCertificate) {
            OnvifBasic.device.LoadCertificatesRequest inValue = new OnvifBasic.device.LoadCertificatesRequest();
            inValue.NVTCertificate = NVTCertificate;
            OnvifBasic.device.LoadCertificatesResponse retVal = ((OnvifBasic.device.Device)(this)).LoadCertificates(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginLoadCertificates(OnvifBasic.device.LoadCertificatesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadCertificates(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadCertificates(OnvifBasic.device.Certificate[] NVTCertificate, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.LoadCertificatesRequest inValue = new OnvifBasic.device.LoadCertificatesRequest();
            inValue.NVTCertificate = NVTCertificate;
            return ((OnvifBasic.device.Device)(this)).BeginLoadCertificates(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.LoadCertificatesResponse OnvifBasic.device.Device.EndLoadCertificates(System.IAsyncResult result) {
            return base.Channel.EndLoadCertificates(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLoadCertificates(System.IAsyncResult result) {
            OnvifBasic.device.LoadCertificatesResponse retVal = ((OnvifBasic.device.Device)(this)).EndLoadCertificates(result);
        }
        
        private System.IAsyncResult OnBeginLoadCertificates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.Certificate[] NVTCertificate = ((OnvifBasic.device.Certificate[])(inValues[0]));
            return this.BeginLoadCertificates(NVTCertificate, callback, asyncState);
        }
        
        private object[] OnEndLoadCertificates(System.IAsyncResult result) {
            this.EndLoadCertificates(result);
            return null;
        }
        
        private void OnLoadCertificatesCompleted(object state) {
            if ((this.LoadCertificatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadCertificatesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadCertificatesAsync(OnvifBasic.device.Certificate[] NVTCertificate) {
            this.LoadCertificatesAsync(NVTCertificate, null);
        }
        
        public void LoadCertificatesAsync(OnvifBasic.device.Certificate[] NVTCertificate, object userState) {
            if ((this.onBeginLoadCertificatesDelegate == null)) {
                this.onBeginLoadCertificatesDelegate = new BeginOperationDelegate(this.OnBeginLoadCertificates);
            }
            if ((this.onEndLoadCertificatesDelegate == null)) {
                this.onEndLoadCertificatesDelegate = new EndOperationDelegate(this.OnEndLoadCertificates);
            }
            if ((this.onLoadCertificatesCompletedDelegate == null)) {
                this.onLoadCertificatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadCertificatesCompleted);
            }
            base.InvokeAsync(this.onBeginLoadCertificatesDelegate, new object[] {
                        NVTCertificate}, this.onEndLoadCertificatesDelegate, this.onLoadCertificatesCompletedDelegate, userState);
        }
        
        public bool GetClientCertificateMode() {
            return base.Channel.GetClientCertificateMode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClientCertificateMode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientCertificateMode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndGetClientCertificateMode(System.IAsyncResult result) {
            return base.Channel.EndGetClientCertificateMode(result);
        }
        
        private System.IAsyncResult OnBeginGetClientCertificateMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetClientCertificateMode(callback, asyncState);
        }
        
        private object[] OnEndGetClientCertificateMode(System.IAsyncResult result) {
            bool retVal = this.EndGetClientCertificateMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientCertificateModeCompleted(object state) {
            if ((this.GetClientCertificateModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientCertificateModeCompleted(this, new GetClientCertificateModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientCertificateModeAsync() {
            this.GetClientCertificateModeAsync(null);
        }
        
        public void GetClientCertificateModeAsync(object userState) {
            if ((this.onBeginGetClientCertificateModeDelegate == null)) {
                this.onBeginGetClientCertificateModeDelegate = new BeginOperationDelegate(this.OnBeginGetClientCertificateMode);
            }
            if ((this.onEndGetClientCertificateModeDelegate == null)) {
                this.onEndGetClientCertificateModeDelegate = new EndOperationDelegate(this.OnEndGetClientCertificateMode);
            }
            if ((this.onGetClientCertificateModeCompletedDelegate == null)) {
                this.onGetClientCertificateModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientCertificateModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientCertificateModeDelegate, null, this.onEndGetClientCertificateModeDelegate, this.onGetClientCertificateModeCompletedDelegate, userState);
        }
        
        public void SetClientCertificateMode(bool Enabled) {
            base.Channel.SetClientCertificateMode(Enabled);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetClientCertificateMode(bool Enabled, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetClientCertificateMode(Enabled, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetClientCertificateMode(System.IAsyncResult result) {
            base.Channel.EndSetClientCertificateMode(result);
        }
        
        private System.IAsyncResult OnBeginSetClientCertificateMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool Enabled = ((bool)(inValues[0]));
            return this.BeginSetClientCertificateMode(Enabled, callback, asyncState);
        }
        
        private object[] OnEndSetClientCertificateMode(System.IAsyncResult result) {
            this.EndSetClientCertificateMode(result);
            return null;
        }
        
        private void OnSetClientCertificateModeCompleted(object state) {
            if ((this.SetClientCertificateModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetClientCertificateModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetClientCertificateModeAsync(bool Enabled) {
            this.SetClientCertificateModeAsync(Enabled, null);
        }
        
        public void SetClientCertificateModeAsync(bool Enabled, object userState) {
            if ((this.onBeginSetClientCertificateModeDelegate == null)) {
                this.onBeginSetClientCertificateModeDelegate = new BeginOperationDelegate(this.OnBeginSetClientCertificateMode);
            }
            if ((this.onEndSetClientCertificateModeDelegate == null)) {
                this.onEndSetClientCertificateModeDelegate = new EndOperationDelegate(this.OnEndSetClientCertificateMode);
            }
            if ((this.onSetClientCertificateModeCompletedDelegate == null)) {
                this.onSetClientCertificateModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetClientCertificateModeCompleted);
            }
            base.InvokeAsync(this.onBeginSetClientCertificateModeDelegate, new object[] {
                        Enabled}, this.onEndSetClientCertificateModeDelegate, this.onSetClientCertificateModeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetCACertificatesResponse OnvifBasic.device.Device.GetCACertificates(OnvifBasic.device.GetCACertificatesRequest request) {
            return base.Channel.GetCACertificates(request);
        }
        
        public OnvifBasic.device.Certificate[] GetCACertificates() {
            OnvifBasic.device.GetCACertificatesRequest inValue = new OnvifBasic.device.GetCACertificatesRequest();
            OnvifBasic.device.GetCACertificatesResponse retVal = ((OnvifBasic.device.Device)(this)).GetCACertificates(inValue);
            return retVal.CACertificate;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetCACertificates(OnvifBasic.device.GetCACertificatesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCACertificates(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCACertificates(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetCACertificatesRequest inValue = new OnvifBasic.device.GetCACertificatesRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetCACertificates(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetCACertificatesResponse OnvifBasic.device.Device.EndGetCACertificates(System.IAsyncResult result) {
            return base.Channel.EndGetCACertificates(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Certificate[] EndGetCACertificates(System.IAsyncResult result) {
            OnvifBasic.device.GetCACertificatesResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetCACertificates(result);
            return retVal.CACertificate;
        }
        
        private System.IAsyncResult OnBeginGetCACertificates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCACertificates(callback, asyncState);
        }
        
        private object[] OnEndGetCACertificates(System.IAsyncResult result) {
            OnvifBasic.device.Certificate[] retVal = this.EndGetCACertificates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCACertificatesCompleted(object state) {
            if ((this.GetCACertificatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCACertificatesCompleted(this, new GetCACertificatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCACertificatesAsync() {
            this.GetCACertificatesAsync(null);
        }
        
        public void GetCACertificatesAsync(object userState) {
            if ((this.onBeginGetCACertificatesDelegate == null)) {
                this.onBeginGetCACertificatesDelegate = new BeginOperationDelegate(this.OnBeginGetCACertificates);
            }
            if ((this.onEndGetCACertificatesDelegate == null)) {
                this.onEndGetCACertificatesDelegate = new EndOperationDelegate(this.OnEndGetCACertificates);
            }
            if ((this.onGetCACertificatesCompletedDelegate == null)) {
                this.onGetCACertificatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCACertificatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCACertificatesDelegate, null, this.onEndGetCACertificatesDelegate, this.onGetCACertificatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.LoadCertificateWithPrivateKeyResponse OnvifBasic.device.Device.LoadCertificateWithPrivateKey(OnvifBasic.device.LoadCertificateWithPrivateKeyRequest request) {
            return base.Channel.LoadCertificateWithPrivateKey(request);
        }
        
        public void LoadCertificateWithPrivateKey(OnvifBasic.device.CertificateWithPrivateKey[] CertificateWithPrivateKey) {
            OnvifBasic.device.LoadCertificateWithPrivateKeyRequest inValue = new OnvifBasic.device.LoadCertificateWithPrivateKeyRequest();
            inValue.CertificateWithPrivateKey = CertificateWithPrivateKey;
            OnvifBasic.device.LoadCertificateWithPrivateKeyResponse retVal = ((OnvifBasic.device.Device)(this)).LoadCertificateWithPrivateKey(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginLoadCertificateWithPrivateKey(OnvifBasic.device.LoadCertificateWithPrivateKeyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadCertificateWithPrivateKey(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadCertificateWithPrivateKey(OnvifBasic.device.CertificateWithPrivateKey[] CertificateWithPrivateKey, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.LoadCertificateWithPrivateKeyRequest inValue = new OnvifBasic.device.LoadCertificateWithPrivateKeyRequest();
            inValue.CertificateWithPrivateKey = CertificateWithPrivateKey;
            return ((OnvifBasic.device.Device)(this)).BeginLoadCertificateWithPrivateKey(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.LoadCertificateWithPrivateKeyResponse OnvifBasic.device.Device.EndLoadCertificateWithPrivateKey(System.IAsyncResult result) {
            return base.Channel.EndLoadCertificateWithPrivateKey(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLoadCertificateWithPrivateKey(System.IAsyncResult result) {
            OnvifBasic.device.LoadCertificateWithPrivateKeyResponse retVal = ((OnvifBasic.device.Device)(this)).EndLoadCertificateWithPrivateKey(result);
        }
        
        private System.IAsyncResult OnBeginLoadCertificateWithPrivateKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.CertificateWithPrivateKey[] CertificateWithPrivateKey = ((OnvifBasic.device.CertificateWithPrivateKey[])(inValues[0]));
            return this.BeginLoadCertificateWithPrivateKey(CertificateWithPrivateKey, callback, asyncState);
        }
        
        private object[] OnEndLoadCertificateWithPrivateKey(System.IAsyncResult result) {
            this.EndLoadCertificateWithPrivateKey(result);
            return null;
        }
        
        private void OnLoadCertificateWithPrivateKeyCompleted(object state) {
            if ((this.LoadCertificateWithPrivateKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadCertificateWithPrivateKeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadCertificateWithPrivateKeyAsync(OnvifBasic.device.CertificateWithPrivateKey[] CertificateWithPrivateKey) {
            this.LoadCertificateWithPrivateKeyAsync(CertificateWithPrivateKey, null);
        }
        
        public void LoadCertificateWithPrivateKeyAsync(OnvifBasic.device.CertificateWithPrivateKey[] CertificateWithPrivateKey, object userState) {
            if ((this.onBeginLoadCertificateWithPrivateKeyDelegate == null)) {
                this.onBeginLoadCertificateWithPrivateKeyDelegate = new BeginOperationDelegate(this.OnBeginLoadCertificateWithPrivateKey);
            }
            if ((this.onEndLoadCertificateWithPrivateKeyDelegate == null)) {
                this.onEndLoadCertificateWithPrivateKeyDelegate = new EndOperationDelegate(this.OnEndLoadCertificateWithPrivateKey);
            }
            if ((this.onLoadCertificateWithPrivateKeyCompletedDelegate == null)) {
                this.onLoadCertificateWithPrivateKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadCertificateWithPrivateKeyCompleted);
            }
            base.InvokeAsync(this.onBeginLoadCertificateWithPrivateKeyDelegate, new object[] {
                        CertificateWithPrivateKey}, this.onEndLoadCertificateWithPrivateKeyDelegate, this.onLoadCertificateWithPrivateKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetCertificateInformationResponse OnvifBasic.device.Device.GetCertificateInformation(OnvifBasic.device.GetCertificateInformationRequest request) {
            return base.Channel.GetCertificateInformation(request);
        }
        
        public OnvifBasic.device.CertificateInformation GetCertificateInformation(string CertificateID) {
            OnvifBasic.device.GetCertificateInformationRequest inValue = new OnvifBasic.device.GetCertificateInformationRequest();
            inValue.CertificateID = CertificateID;
            OnvifBasic.device.GetCertificateInformationResponse retVal = ((OnvifBasic.device.Device)(this)).GetCertificateInformation(inValue);
            return retVal.CertificateInformation;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetCertificateInformation(OnvifBasic.device.GetCertificateInformationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCertificateInformation(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCertificateInformation(string CertificateID, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetCertificateInformationRequest inValue = new OnvifBasic.device.GetCertificateInformationRequest();
            inValue.CertificateID = CertificateID;
            return ((OnvifBasic.device.Device)(this)).BeginGetCertificateInformation(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetCertificateInformationResponse OnvifBasic.device.Device.EndGetCertificateInformation(System.IAsyncResult result) {
            return base.Channel.EndGetCertificateInformation(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.CertificateInformation EndGetCertificateInformation(System.IAsyncResult result) {
            OnvifBasic.device.GetCertificateInformationResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetCertificateInformation(result);
            return retVal.CertificateInformation;
        }
        
        private System.IAsyncResult OnBeginGetCertificateInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CertificateID = ((string)(inValues[0]));
            return this.BeginGetCertificateInformation(CertificateID, callback, asyncState);
        }
        
        private object[] OnEndGetCertificateInformation(System.IAsyncResult result) {
            OnvifBasic.device.CertificateInformation retVal = this.EndGetCertificateInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCertificateInformationCompleted(object state) {
            if ((this.GetCertificateInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCertificateInformationCompleted(this, new GetCertificateInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCertificateInformationAsync(string CertificateID) {
            this.GetCertificateInformationAsync(CertificateID, null);
        }
        
        public void GetCertificateInformationAsync(string CertificateID, object userState) {
            if ((this.onBeginGetCertificateInformationDelegate == null)) {
                this.onBeginGetCertificateInformationDelegate = new BeginOperationDelegate(this.OnBeginGetCertificateInformation);
            }
            if ((this.onEndGetCertificateInformationDelegate == null)) {
                this.onEndGetCertificateInformationDelegate = new EndOperationDelegate(this.OnEndGetCertificateInformation);
            }
            if ((this.onGetCertificateInformationCompletedDelegate == null)) {
                this.onGetCertificateInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCertificateInformationCompleted);
            }
            base.InvokeAsync(this.onBeginGetCertificateInformationDelegate, new object[] {
                        CertificateID}, this.onEndGetCertificateInformationDelegate, this.onGetCertificateInformationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.LoadCACertificatesResponse OnvifBasic.device.Device.LoadCACertificates(OnvifBasic.device.LoadCACertificatesRequest request) {
            return base.Channel.LoadCACertificates(request);
        }
        
        public void LoadCACertificates(OnvifBasic.device.Certificate[] CACertificate) {
            OnvifBasic.device.LoadCACertificatesRequest inValue = new OnvifBasic.device.LoadCACertificatesRequest();
            inValue.CACertificate = CACertificate;
            OnvifBasic.device.LoadCACertificatesResponse retVal = ((OnvifBasic.device.Device)(this)).LoadCACertificates(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginLoadCACertificates(OnvifBasic.device.LoadCACertificatesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadCACertificates(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadCACertificates(OnvifBasic.device.Certificate[] CACertificate, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.LoadCACertificatesRequest inValue = new OnvifBasic.device.LoadCACertificatesRequest();
            inValue.CACertificate = CACertificate;
            return ((OnvifBasic.device.Device)(this)).BeginLoadCACertificates(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.LoadCACertificatesResponse OnvifBasic.device.Device.EndLoadCACertificates(System.IAsyncResult result) {
            return base.Channel.EndLoadCACertificates(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLoadCACertificates(System.IAsyncResult result) {
            OnvifBasic.device.LoadCACertificatesResponse retVal = ((OnvifBasic.device.Device)(this)).EndLoadCACertificates(result);
        }
        
        private System.IAsyncResult OnBeginLoadCACertificates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.Certificate[] CACertificate = ((OnvifBasic.device.Certificate[])(inValues[0]));
            return this.BeginLoadCACertificates(CACertificate, callback, asyncState);
        }
        
        private object[] OnEndLoadCACertificates(System.IAsyncResult result) {
            this.EndLoadCACertificates(result);
            return null;
        }
        
        private void OnLoadCACertificatesCompleted(object state) {
            if ((this.LoadCACertificatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadCACertificatesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadCACertificatesAsync(OnvifBasic.device.Certificate[] CACertificate) {
            this.LoadCACertificatesAsync(CACertificate, null);
        }
        
        public void LoadCACertificatesAsync(OnvifBasic.device.Certificate[] CACertificate, object userState) {
            if ((this.onBeginLoadCACertificatesDelegate == null)) {
                this.onBeginLoadCACertificatesDelegate = new BeginOperationDelegate(this.OnBeginLoadCACertificates);
            }
            if ((this.onEndLoadCACertificatesDelegate == null)) {
                this.onEndLoadCACertificatesDelegate = new EndOperationDelegate(this.OnEndLoadCACertificates);
            }
            if ((this.onLoadCACertificatesCompletedDelegate == null)) {
                this.onLoadCACertificatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadCACertificatesCompleted);
            }
            base.InvokeAsync(this.onBeginLoadCACertificatesDelegate, new object[] {
                        CACertificate}, this.onEndLoadCACertificatesDelegate, this.onLoadCACertificatesCompletedDelegate, userState);
        }
        
        public void CreateDot1XConfiguration(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration) {
            base.Channel.CreateDot1XConfiguration(Dot1XConfiguration);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateDot1XConfiguration(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateDot1XConfiguration(Dot1XConfiguration, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCreateDot1XConfiguration(System.IAsyncResult result) {
            base.Channel.EndCreateDot1XConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginCreateDot1XConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration = ((OnvifBasic.device.Dot1XConfiguration)(inValues[0]));
            return this.BeginCreateDot1XConfiguration(Dot1XConfiguration, callback, asyncState);
        }
        
        private object[] OnEndCreateDot1XConfiguration(System.IAsyncResult result) {
            this.EndCreateDot1XConfiguration(result);
            return null;
        }
        
        private void OnCreateDot1XConfigurationCompleted(object state) {
            if ((this.CreateDot1XConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateDot1XConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateDot1XConfigurationAsync(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration) {
            this.CreateDot1XConfigurationAsync(Dot1XConfiguration, null);
        }
        
        public void CreateDot1XConfigurationAsync(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration, object userState) {
            if ((this.onBeginCreateDot1XConfigurationDelegate == null)) {
                this.onBeginCreateDot1XConfigurationDelegate = new BeginOperationDelegate(this.OnBeginCreateDot1XConfiguration);
            }
            if ((this.onEndCreateDot1XConfigurationDelegate == null)) {
                this.onEndCreateDot1XConfigurationDelegate = new EndOperationDelegate(this.OnEndCreateDot1XConfiguration);
            }
            if ((this.onCreateDot1XConfigurationCompletedDelegate == null)) {
                this.onCreateDot1XConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateDot1XConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginCreateDot1XConfigurationDelegate, new object[] {
                        Dot1XConfiguration}, this.onEndCreateDot1XConfigurationDelegate, this.onCreateDot1XConfigurationCompletedDelegate, userState);
        }
        
        public void SetDot1XConfiguration(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration) {
            base.Channel.SetDot1XConfiguration(Dot1XConfiguration);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDot1XConfiguration(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDot1XConfiguration(Dot1XConfiguration, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetDot1XConfiguration(System.IAsyncResult result) {
            base.Channel.EndSetDot1XConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginSetDot1XConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration = ((OnvifBasic.device.Dot1XConfiguration)(inValues[0]));
            return this.BeginSetDot1XConfiguration(Dot1XConfiguration, callback, asyncState);
        }
        
        private object[] OnEndSetDot1XConfiguration(System.IAsyncResult result) {
            this.EndSetDot1XConfiguration(result);
            return null;
        }
        
        private void OnSetDot1XConfigurationCompleted(object state) {
            if ((this.SetDot1XConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDot1XConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDot1XConfigurationAsync(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration) {
            this.SetDot1XConfigurationAsync(Dot1XConfiguration, null);
        }
        
        public void SetDot1XConfigurationAsync(OnvifBasic.device.Dot1XConfiguration Dot1XConfiguration, object userState) {
            if ((this.onBeginSetDot1XConfigurationDelegate == null)) {
                this.onBeginSetDot1XConfigurationDelegate = new BeginOperationDelegate(this.OnBeginSetDot1XConfiguration);
            }
            if ((this.onEndSetDot1XConfigurationDelegate == null)) {
                this.onEndSetDot1XConfigurationDelegate = new EndOperationDelegate(this.OnEndSetDot1XConfiguration);
            }
            if ((this.onSetDot1XConfigurationCompletedDelegate == null)) {
                this.onSetDot1XConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDot1XConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginSetDot1XConfigurationDelegate, new object[] {
                        Dot1XConfiguration}, this.onEndSetDot1XConfigurationDelegate, this.onSetDot1XConfigurationCompletedDelegate, userState);
        }
        
        public OnvifBasic.device.Dot1XConfiguration GetDot1XConfiguration(string Dot1XConfigurationToken) {
            return base.Channel.GetDot1XConfiguration(Dot1XConfigurationToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDot1XConfiguration(string Dot1XConfigurationToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDot1XConfiguration(Dot1XConfigurationToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Dot1XConfiguration EndGetDot1XConfiguration(System.IAsyncResult result) {
            return base.Channel.EndGetDot1XConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginGetDot1XConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Dot1XConfigurationToken = ((string)(inValues[0]));
            return this.BeginGetDot1XConfiguration(Dot1XConfigurationToken, callback, asyncState);
        }
        
        private object[] OnEndGetDot1XConfiguration(System.IAsyncResult result) {
            OnvifBasic.device.Dot1XConfiguration retVal = this.EndGetDot1XConfiguration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDot1XConfigurationCompleted(object state) {
            if ((this.GetDot1XConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDot1XConfigurationCompleted(this, new GetDot1XConfigurationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDot1XConfigurationAsync(string Dot1XConfigurationToken) {
            this.GetDot1XConfigurationAsync(Dot1XConfigurationToken, null);
        }
        
        public void GetDot1XConfigurationAsync(string Dot1XConfigurationToken, object userState) {
            if ((this.onBeginGetDot1XConfigurationDelegate == null)) {
                this.onBeginGetDot1XConfigurationDelegate = new BeginOperationDelegate(this.OnBeginGetDot1XConfiguration);
            }
            if ((this.onEndGetDot1XConfigurationDelegate == null)) {
                this.onEndGetDot1XConfigurationDelegate = new EndOperationDelegate(this.OnEndGetDot1XConfiguration);
            }
            if ((this.onGetDot1XConfigurationCompletedDelegate == null)) {
                this.onGetDot1XConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDot1XConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginGetDot1XConfigurationDelegate, new object[] {
                        Dot1XConfigurationToken}, this.onEndGetDot1XConfigurationDelegate, this.onGetDot1XConfigurationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetDot1XConfigurationsResponse OnvifBasic.device.Device.GetDot1XConfigurations(OnvifBasic.device.GetDot1XConfigurationsRequest request) {
            return base.Channel.GetDot1XConfigurations(request);
        }
        
        public OnvifBasic.device.Dot1XConfiguration[] GetDot1XConfigurations() {
            OnvifBasic.device.GetDot1XConfigurationsRequest inValue = new OnvifBasic.device.GetDot1XConfigurationsRequest();
            OnvifBasic.device.GetDot1XConfigurationsResponse retVal = ((OnvifBasic.device.Device)(this)).GetDot1XConfigurations(inValue);
            return retVal.Dot1XConfiguration;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginGetDot1XConfigurations(OnvifBasic.device.GetDot1XConfigurationsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDot1XConfigurations(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDot1XConfigurations(System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.GetDot1XConfigurationsRequest inValue = new OnvifBasic.device.GetDot1XConfigurationsRequest();
            return ((OnvifBasic.device.Device)(this)).BeginGetDot1XConfigurations(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.GetDot1XConfigurationsResponse OnvifBasic.device.Device.EndGetDot1XConfigurations(System.IAsyncResult result) {
            return base.Channel.EndGetDot1XConfigurations(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OnvifBasic.device.Dot1XConfiguration[] EndGetDot1XConfigurations(System.IAsyncResult result) {
            OnvifBasic.device.GetDot1XConfigurationsResponse retVal = ((OnvifBasic.device.Device)(this)).EndGetDot1XConfigurations(result);
            return retVal.Dot1XConfiguration;
        }
        
        private System.IAsyncResult OnBeginGetDot1XConfigurations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDot1XConfigurations(callback, asyncState);
        }
        
        private object[] OnEndGetDot1XConfigurations(System.IAsyncResult result) {
            OnvifBasic.device.Dot1XConfiguration[] retVal = this.EndGetDot1XConfigurations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDot1XConfigurationsCompleted(object state) {
            if ((this.GetDot1XConfigurationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDot1XConfigurationsCompleted(this, new GetDot1XConfigurationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDot1XConfigurationsAsync() {
            this.GetDot1XConfigurationsAsync(null);
        }
        
        public void GetDot1XConfigurationsAsync(object userState) {
            if ((this.onBeginGetDot1XConfigurationsDelegate == null)) {
                this.onBeginGetDot1XConfigurationsDelegate = new BeginOperationDelegate(this.OnBeginGetDot1XConfigurations);
            }
            if ((this.onEndGetDot1XConfigurationsDelegate == null)) {
                this.onEndGetDot1XConfigurationsDelegate = new EndOperationDelegate(this.OnEndGetDot1XConfigurations);
            }
            if ((this.onGetDot1XConfigurationsCompletedDelegate == null)) {
                this.onGetDot1XConfigurationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDot1XConfigurationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDot1XConfigurationsDelegate, null, this.onEndGetDot1XConfigurationsDelegate, this.onGetDot1XConfigurationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.DeleteDot1XConfigurationResponse OnvifBasic.device.Device.DeleteDot1XConfiguration(OnvifBasic.device.DeleteDot1XConfigurationRequest request) {
            return base.Channel.DeleteDot1XConfiguration(request);
        }
        
        public void DeleteDot1XConfiguration(string[] Dot1XConfigurationToken) {
            OnvifBasic.device.DeleteDot1XConfigurationRequest inValue = new OnvifBasic.device.DeleteDot1XConfigurationRequest();
            inValue.Dot1XConfigurationToken = Dot1XConfigurationToken;
            OnvifBasic.device.DeleteDot1XConfigurationResponse retVal = ((OnvifBasic.device.Device)(this)).DeleteDot1XConfiguration(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OnvifBasic.device.Device.BeginDeleteDot1XConfiguration(OnvifBasic.device.DeleteDot1XConfigurationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDot1XConfiguration(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDot1XConfiguration(string[] Dot1XConfigurationToken, System.AsyncCallback callback, object asyncState) {
            OnvifBasic.device.DeleteDot1XConfigurationRequest inValue = new OnvifBasic.device.DeleteDot1XConfigurationRequest();
            inValue.Dot1XConfigurationToken = Dot1XConfigurationToken;
            return ((OnvifBasic.device.Device)(this)).BeginDeleteDot1XConfiguration(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifBasic.device.DeleteDot1XConfigurationResponse OnvifBasic.device.Device.EndDeleteDot1XConfiguration(System.IAsyncResult result) {
            return base.Channel.EndDeleteDot1XConfiguration(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDot1XConfiguration(System.IAsyncResult result) {
            OnvifBasic.device.DeleteDot1XConfigurationResponse retVal = ((OnvifBasic.device.Device)(this)).EndDeleteDot1XConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDot1XConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] Dot1XConfigurationToken = ((string[])(inValues[0]));
            return this.BeginDeleteDot1XConfiguration(Dot1XConfigurationToken, callback, asyncState);
        }
        
        private object[] OnEndDeleteDot1XConfiguration(System.IAsyncResult result) {
            this.EndDeleteDot1XConfiguration(result);
            return null;
        }
        
        private void OnDeleteDot1XConfigurationCompleted(object state) {
            if ((this.DeleteDot1XConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDot1XConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDot1XConfigurationAsync(string[] Dot1XConfigurationToken) {
            this.DeleteDot1XConfigurationAsync(Dot1XConfigurationToken, null);
        }
        
        public void DeleteDot1XConfigurationAsync(string[] Dot1XConfigurationToken, object userState) {
            if ((this.onBeginDeleteDot1XConfigurationDelegate == null)) {
                this.onBeginDeleteDot1XConfigurationDelegate = new BeginOperationDelegate(this.OnBeginDeleteDot1XConfiguration);
            }
            if ((this.onEndDeleteDot1XConfigurationDelegate == null)) {
                this.onEndDeleteDot1XConfigurationDelegate = new EndOperationDelegate(this.OnEndDeleteDot1XConfiguration);
            }
            if ((this.onDeleteDot1XConfigurationCompletedDelegate == null)) {
                this.onDeleteDot1XConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDot1XConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDot1XConfigurationDelegate, new object[] {
                        Dot1XConfigurationToken}, this.onEndDeleteDot1XConfigurationDelegate, this.onDeleteDot1XConfigurationCompletedDelegate, userState);
        }
    }
}
